{"version":3,"file":"data-experience.umd.885.js","mappings":";;;;;;;;;;;;;;;AAAA,+BAA+B,6BAA6B,iDAAiD,oEAAoE,gDAAgD,aAAa,sBAAsB,QAAQ,kBAAkB;AAC9R;AACA;;;;;;;;;ACQwB;AACG;;AAE3B,8EAAe;AACf,WAAW,gBAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,UAAS;AACtC,QAAQ,UAAS;AACjB,mBAAmB,UACF;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,OAAM;AAC3B;AACA,sBAAsB,OAAM;AAC5B;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,aAAY;AAC9B;AACA;AACA;AACA;AACA,gBAAgB,cAAa;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,OAAM;AAC1B,kBAAkB,eAAc;AAChC;AACA;AACA;AACA,gBAAgB,YAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,aACN;AACpB;AACA;AACA;;AAEA;AACA,sBAAsB,gBACC;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,UAAS;AACrB,YAAY,UAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,UAAS;AACrB,YAAY,UAAS;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;AChOkJ,CAAC,mFAAe,yCAAG,EAAC;;ACAvK;;;;;;;AEA4G;AACvC;AACL;AAChE,CAA0G;;;AAG1G;AACyG;AACzG,gBAAgB,sCAAU;AAC1B,EAAE,8CAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,sDAAe;;;;;;;;;;;;ACnBsB;AACJ;;AAEkB;;AAEnD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB;AACxB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,iBAAiB;AACjB;AACA,yBAAyB,gDAAgB;AACzC;AACA;AACA;AACA;AACA;;AAEA,+DAAe,8DAAK,QAAQ,qEAAe,CAAC","sources":["webpack://data-experience/./src/components/chart/view/ChartViewGroupBar.vue?d217","webpack://data-experience/src/components/chart/view/ChartViewGroupBar.vue","webpack://data-experience/./src/components/chart/view/ChartViewGroupBar.vue?5ce8","webpack://data-experience/./src/components/chart/view/ChartViewGroupBar.vue?d694","webpack://data-experience/./src/components/chart/view/ChartViewGroupBar.vue?820f","webpack://data-experience/./src/components/chart/view/ChartViewGroupBar.vue","webpack://data-experience/./src/components/chart/view/mixin.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return (_vm.validProps)?_c('VContainer',[_c('p',{staticClass:\"overline font-weight-bold text-subtitle-1 text-center\"},[_vm._v(\" \"+_vm._s(_vm.title)+\" \")]),_c('div',{staticStyle:{\"position\":\"relative\"},attrs:{\"id\":_vm.graphId}})]):_vm._e()\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <VContainer v-if=\"validProps\">\n    <p class=\"overline font-weight-bold text-subtitle-1 text-center\">\n      {{ title }}\n    </p>\n    <div :id=\"graphId\" style=\"position: relative\" />\n  </VContainer>\n</template>\n\n<script>\nimport * as d3 from 'd3'\nimport mixin from './mixin'\n\nexport default {\n  mixins: [mixin],\n  props: {\n    groupsAccessor: {\n      type: String,\n      required: true\n    },\n    valuesAccessor: {\n      type: Array,\n      required: true\n    },\n    title: {\n      type: String,\n      default: ''\n    },\n    margin: {\n      type: Number,\n      default: 5\n    },\n    adjVertical: {\n      type: Array,\n      default: () => [20, 50]\n    },\n    adjHorizontal: {\n      type: Array,\n      default: () => [150, 150]\n    },\n    xLabel: {\n      type: String,\n      default: 'Sexual Orientation'\n    },\n    yLabel: {\n      type: String,\n      default: 'Number of action per day and user'\n    },\n    formatNumber: {\n      type: String,\n      default: '.2f'\n    },\n    colorPalette: {\n      type: Array,\n      default: () => ['#69B3A2', '#C23636', '#67A4BF']\n    }\n  },\n  data() {\n    return {}\n  },\n  computed: {\n    validProps() {\n      let valid = true\n      if (!this.values.length) {\n        console.error('Values is empty')\n        return false\n      }\n      if (!Object.keys(this.values[0]).includes(this.groupsAccessor)) {\n        console.error('Group Accessor not found:', this.groupsAccessor)\n        valid = false\n      }\n\n      this.valuesAccessor.forEach((accessor) => {\n        if (!Object.keys(this.values[0]).includes(accessor)\n        ) {\n          console.error('X Accessor not found:', accessor)\n          valid = false\n        }\n      })\n      return valid\n    }\n  },\n  methods: {\n    drawViz() {\n      try {\n      /* create svg element */\n        const width = 500\n        const height = 380\n        const formatNumber = d3.format(this.formatNumber)\n        d3.select('#' + this.graphId + ' svg').remove()\n        this.svg = d3\n          .select('#' + this.graphId)\n          .append('svg')\n          .attr('preserveAspectRatio', 'xMinYMin meet')\n          .attr(\n            'viewBox',\n            '-' +\n            this.adjHorizontal[0] +\n            ' -' +\n            this.adjVertical[0] +\n            ' ' +\n            (width + d3.sum(this.adjHorizontal)) +\n            ' ' +\n            (height + d3.sum(this.adjVertical))\n          )\n          .style('margin', this.margin)\n          .classed('svg-content', true)\n\n        // List of unique groups\n        const groups = [...new Set(this.values.map(d => d[this.groupsAccessor]))]\n\n        // Add X axis\n        const x = d3.scaleBand().domain(groups).range([0, width]).padding([0.2])\n        this.svg\n          .append('g')\n          .attr('class', 'xAxis')\n          .attr('transform', 'translate(0,' + height + ')')\n          .call(d3.axisBottom(x).tickSize(0))\n          .append('text')\n          .attr('y', 30)\n          .attr('x', width / 2)\n          .style('text-anchor', 'middle')\n          .text(this.xLabel)\n\n        // Add Y axis\n        const max = d3.max(this.values, d => Math.max(...this.valuesAccessor.map(c => d[c])))\n        const y = d3.scaleLinear().domain([0, max]).range([height, 0])\n        this.svg\n          .append('g')\n          .attr('class', 'yAxis')\n          .call(d3.axisLeft(y))\n          .append('text')\n          .attr('dy', '.75em')\n          .attr('y', -50)\n          .attr('x', -height / 2)\n          .attr('transform', 'rotate(-90)')\n          .style('text-anchor', 'middle')\n          .text(this.yLabel)\n\n        // Another scale for subgroup position?\n        const xSubgroup = d3\n          .scaleBand()\n          .domain(this.valuesAccessor)\n          .range([0, x.bandwidth()])\n          .padding([0.05])\n\n        // color palette = one color per subgroup\n        const color = d3\n          .scaleOrdinal()\n          .domain(this.valuesAccessor)\n          .range(this.colorPalette)\n\n        // Show the bars\n        this.svg\n          .append('g')\n          .selectAll('g')\n        // Enter in data = loop group per group\n          .data(this.values)\n          .enter()\n          .append('g')\n          .attr('transform', d => 'translate(' + x(d[this.groupsAccessor]) + ',0)')\n          .selectAll('rect')\n          .data(d => this.valuesAccessor.map(function(key) {\n            return { key, value: d[key] }\n          }))\n          .enter()\n          .append('rect')\n          .attr('x', d => xSubgroup(d.key))\n          .attr('y', function(d) {\n            return y(d.value)\n          })\n          .attr('width', xSubgroup.bandwidth())\n          .attr('height', d => height - y(d.value))\n          .attr('fill', d => color(d.key))\n          .on('mouseover', function(evt, d) {\n            d3.select(this).style('opacity', 0.7)\n            d3.select(this.parentNode)\n              .append('text')\n              .attr('class', 'barsLabel')\n              .text(formatNumber(d.value))\n              .attr('text-anchor', 'middle')\n              .attr('alignment-baseline', 'middle')\n              .attr('x', xSubgroup(d.key) + xSubgroup.bandwidth() / 2)\n              .attr('y', y(d.value) - 10)\n              .style('font-size', '0.8rem')\n              .style('font-weight', 'bold')\n              .style('fill', '#0A0A0A')\n          })\n          .on('mouseleave', function(evt, d) {\n            d3.select(this).style('opacity', 1)\n            d3.select('.barsLabel').remove()\n          })\n\n        // Add one dot in the legend for each name.\n        const size = 10\n        const positionX = width - 20\n        const positionY = 0\n        this.svg.selectAll('legendSquare')\n          .data(this.valuesAccessor)\n          .enter()\n          .append('rect')\n          .attr('x', positionX)\n          .attr('y', function(d, i) { return positionY + i * (size + 5) })\n          .attr('width', size)\n          .attr('height', size)\n          .style('fill', function(d) { return color(d) })\n\n        // Add one label in the legend for each square\n        this.svg.selectAll('legendLabels')\n          .data(this.valuesAccessor)\n          .enter()\n          .append('text')\n          .attr('x', positionX + size * 1.2)\n          .attr('y', function(d, i) { return positionY + i * (size + 5) + (size / 2) })\n          .style('fill', function(d) { return color(d) })\n          .text(function(d) { return d })\n          .attr('text-anchor', 'left')\n          .style('alignment-baseline', 'middle')\n      } catch (e) {\n        console.error(e)\n      }\n    }\n\n  }\n}\n</script>\n<style scoped>\n/* AXES */\n/* ticks */\n::v-deep .xAxis line,\n::v-deep .yAxis line {\n  stroke: #706f6f;\n  stroke-width: 0.5;\n  shape-rendering: geometricPrecision;\n}\n\n/* axis contour */\n::v-deep .xAxis path,\n::v-deep .yAxis path {\n  stroke: #706f6f;\n  stroke-width: 0.7;\n  shape-rendering: geometricPrecision;\n}\n\n::v-deep .yAxis path {\n  display: none;\n}\n\n/* axis text */\n::v-deep .xAxis text,\n::v-deep .yAxis text {\n  fill: #2b2929;\n  font-weight: 300;\n}\n</style>\n","import mod from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewGroupBar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewGroupBar.vue?vue&type=script&lang=js&\"","// extracted by mini-css-extract-plugin\nexport {};","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-54.use[0]!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-54.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-54.use[2]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewGroupBar.vue?vue&type=style&index=0&id=748eb1d0&prod&scoped=true&lang=css&\"","import { render, staticRenderFns } from \"./ChartViewGroupBar.vue?vue&type=template&id=748eb1d0&scoped=true&\"\nimport script from \"./ChartViewGroupBar.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewGroupBar.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ChartViewGroupBar.vue?vue&type=style&index=0&id=748eb1d0&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"748eb1d0\",\n  null\n  \n)\n\nexport default component.exports","import { TextFilterWidget } from 'dc'\nimport { merge } from 'lodash-es'\n\nimport kViewBlockMixin from '@/mixins/k-view-block'\n\nconst mixin = {\n  props: {\n    values: {\n      type: Array,\n      default: () => []\n    },\n    headers: {\n      type: Array,\n      default: () => []\n    },\n    messages: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data() {\n    return {\n      graphId: 'graph_' + this._uid,\n      totalCount: 0,\n      filterCount: 0\n    }\n  },\n  mounted() {\n    this.drawViz()\n  },\n  watch: {\n    values() {\n      this.drawViz()\n    }\n  },\n  methods: {\n    drawViz() { },\n    createTextFilterWidget(parent, placeholder = 'Search') {\n      const widget = new TextFilterWidget(parent)\n      widget.placeHolder(this.$tev(placeholder, placeholder))\n      return widget\n    }\n  }\n}\n\nexport default merge(mixin, kViewBlockMixin)\n"],"names":[],"sourceRoot":""}