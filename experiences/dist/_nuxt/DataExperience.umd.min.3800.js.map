{"version":3,"file":"DataExperience.umd.min.3800.js","mappings":"gQAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,aAAa,CAACA,EAAG,MAAM,CAACE,MAAM,CAAC,GAAK,cAAcJ,EAAIK,YAAY,CAACH,EAAG,SAAS,CAACF,EAAIM,GAAGN,EAAIO,GAAGP,EAAIQ,UAAWR,EAAmB,gBAAE,CAACE,EAAG,SAAS,CAACO,WAAW,CAAC,CAACC,KAAK,IAAIC,QAAQ,MAAMC,MAAM,WAAaC,WAAW,eAAeC,YAAY,UAAU,CAACZ,EAAG,SAAS,CAACO,WAAW,CAAC,CAACC,KAAK,IAAIC,QAAQ,MAAMC,MAAM,MAAQC,WAAW,UAAUC,YAAY,SAASZ,EAAG,SAAS,CAACO,WAAW,CAAC,CAACC,KAAK,IAAIC,QAAQ,MAAMC,MAAOZ,EAAIe,SAAa,KAAEF,WAAW,kBAAkBC,YAAY,UAAUZ,EAAG,qBAAqB,GAAGA,EAAG,MAAM,CAACY,YAAY,cAAcV,MAAM,CAAC,GAAK,eAAeJ,EAAIK,YAAY,CAACH,EAAG,iCAAiC,IACprB,EACIc,EAAkB,G,kEC0BtBC,EAAGC,OAAOC,cAAc,gBAExB,OACEC,WAAY,CAAEC,6BAA4B,8BAAkB,cAC5DC,OAAQ,CAACC,EAAA,YACTC,MAAO,CAILC,aAAc,CACZC,KAAMC,OACNC,UAAU,GAKZC,WAAY,CACVH,KAAMC,OACNG,QAAS,IAKXC,cAAe,CACbL,KAAMC,OACNG,QAAS,IAKXE,aAAc,CACZN,KAAMO,OACNH,QAAS,GAKXI,gBAAiB,CACfR,KAAMS,QACNL,SAAS,IAGbM,OACE,MAAMC,EAAY,CAChBC,IAAK,CACH5B,KAAM,MACN6B,SAAUC,GAAK,UAAWvC,KAAKwC,WAAWD,IAC1CE,OAAQ,WACRC,MAAO,iBAETC,MAAO,CACLlC,KAAM,QACN6B,SAAUC,GAAK,YAAavC,KAAKwC,WAAWD,IAC5CE,OAAQ,aACRC,MAAO,mBAETE,KAAM,CACJnC,KAAM,OACN6B,SAAUC,GAAK,WAAYvC,KAAKwC,WAAWD,IAC3CE,OAAQ,YACRC,MAAO,mBAGX,MAAO,CACLN,YACAtB,SAAUsB,EAAUC,IACpBQ,cAAe,aAAc,aAEjC,EACAC,SAAU,CACRN,aACE,OAAIxC,KAAK4B,WACA,YAAa5B,KAAK4B,YAEjBW,GACC,IAAIQ,KAAKR,EAGtB,GAEFS,QAAS,CACPC,UAEE,MAAMC,EAAY,IAAIlC,EAAGmC,UAAU,eAAenD,KAAKI,WACjDgD,EAAa,IAAIpC,EAAGqC,SAAS,gBAAgBrD,KAAKI,WAExD,SAAU,eAAeJ,KAAKI,mBAAmBkD,GAAG,SAAS,WAC3DJ,EAAUK,YACVH,EAAWG,YACXvC,EAAGwC,WACL,IAEA,MAAMC,EAAa,SAAUzD,KAAK0D,IAAIC,OAAOpB,GAAKvC,KAAKwC,WAAWD,EAAEvC,KAAKwB,iBACzEiC,EAAW,GAAK,iBAAkBA,EAAW,IAAK,GAClDA,EAAW,GAAK,iBAAkBA,EAAW,GAAI,GACjD,MAAMG,EAAW,qBAAsBH,GACvCzD,KAAKc,SAAW8C,EAAW,GAAKA,EAAW,IAAM5D,KAAKoC,UAAUQ,KAAO5C,KAAKoC,UAAUO,MAAQ3C,KAAKoC,UAAUC,IAE7G,MAAMwB,EAAgB7D,KAAK0D,IAAII,WAAUvB,GAAKvC,KAAKc,SAASwB,SAASC,EAAEvC,KAAKwB,iBAEtEuC,EAAa/D,KAAK8B,cAAgB+B,EAAcG,QAAQC,WAAU1B,GAAKA,EAAEvC,KAAK8B,iBAAkB+B,EAAcG,QAAQE,cAEtHC,EAAQ,SACJ,eAAenE,KAAKI,WAC3BgE,OACAC,wBAAwBF,MAC3BjB,EACGoB,QAAQ,CAAEC,IAAK,GAAIC,KAAM,GAAIC,MAAO,GAAIC,OAAQ,KAChDP,MAAMA,GACNQ,mBAAmB,KACnBC,gBAAe,GACfC,MAAM,kBACNC,UAAS,GACTC,OAA4B,IAApB/E,KAAK+E,OAAS,KACtBC,SAAQ,GACRC,YAAW,GACXnB,UAAUD,GACVG,MAAMhE,KAAKiC,iBAAkB,IAAAiD,uBAAsBnB,GAAcA,GACjEoB,EAAE,cAAeC,OAAO3B,IACxB4B,UAAS,GACTjC,WAAWA,GACXkC,iBAAiB,CAChBC,OAAQ,EACRC,YAAa,GACbC,cAAe,IAEhB/C,MAAM1C,KAAKc,SAAS4B,OACpBD,OAAOzC,KAAKc,SAAS2B,QACrBlC,OAAMgC,GAAK,GAAGvC,KAAK6C,cAAcN,EAAEmD,UAAUnD,EAAE5B,SAASX,KAAK2F,eAC7DC,YAAY,IACZC,WAAW,SAAS7F,KAAK2F,cACzBG,cAAc9F,KAAK+F,cACtB7C,EAAU8C,QAAQC,MAAM,IACxB/C,EAAUgD,QAAQD,MAAM,GACxB/C,EAAUK,YAEVH,EACGe,MAAMA,GACNY,OAA4B,IAApB/E,KAAK+E,OAAS,KACtBT,QAAQ,CAAEC,IAAK,EAAGE,MAAO,GAAIC,OAAQ,GAAIF,KAAM,KAC/CV,UAAUD,GACVG,MAAMD,GACNoC,WAAU,GACVC,IAAI,GACJjB,EAAE,cAAeC,OAAO3B,IACxB3B,eAAcS,GAAKA,EAAE5B,QACrB0F,OAAM9D,GAAKA,EAAEmD,MACbhD,MAAM1C,KAAKc,SAAS4B,OACpB4D,mBAAkB,GAClB7D,OAAOzC,KAAKc,SAAS2B,QACrBqD,cAAc9F,KAAK+F,cACnBG,QACAD,MAAM,GACTjF,EAAGuF,WACL,ICtL+I,I,UCO/IC,GAAY,OACd,EACA1G,EACAiB,GACA,EACA,KACA,KACA,MAIF,EAAeyF,EAAiB,O,qEClBhC,IAAI1G,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,IAAI,CAACY,YAAY,WAAW,CAACZ,EAAG,OAAO,CAACF,EAAIM,GAAG,IAAIN,EAAIO,GAAGP,EAAI0G,GAAG,mBAAmB,KAAKxG,EAAG,OAAO,CAACY,YAAY,aAAaZ,EAAG,IAAI,CAACO,WAAW,CAAC,CAACC,KAAK,IAAIC,QAAQ,MAAMC,MAAM,QAAUC,WAAW,YAAYC,YAAY,QAAQ6F,YAAY,CAAC,QAAU,WACjU,EACI3F,EAAkB,GCStB,GAEC,ECbqJ,I,UCOlJyF,GAAY,OACd,EACA1G,EACAiB,GACA,EACA,KACA,KACA,MAIF,EAAeyF,EAAiB,O,qEClBhC,IAAI1G,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,IAAI,CAACY,YAAY,8CAA8C,CAACZ,EAAG,OAAO,CAAC0G,SAAS,CAAC,UAAY5G,EAAIO,GAAGP,EAAI0G,GAAG,yBAAyB1G,EAAI6G,GAAG,YAAY,EACjO,EACI7F,EAAkB,G,UCDlB8F,EAAS,CAAC,EAKVL,GAAY,OACdK,EACA/G,EACAiB,GACA,EACA,KACA,KACA,MAIF,EAAeyF,EAAiB,O,8CCfhC,cACEjF,MAAO,CAKLmC,IAAK,CACHjC,KAAMqF,OACNnF,UAAU,GAKZpB,MAAO,CACLkB,KAAMC,OACNG,QAAS,IAKX8D,WAAY,CACVlE,KAAMC,OACNG,QAAS,WAMXkD,OAAQ,CACNtD,KAAMO,OACNH,QAAS,KAMXkF,SAAU,CACRtF,KAAMO,OACNL,UAAU,GAMZoE,aAAc,CACZtE,KAAMuF,MACNnF,QAAS,IAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,aAUjGM,OACE,MAAO,CACL/B,QAAS,SAAWJ,KAAKiH,KAE7B,EACAC,UACElH,KAAKiD,SACP,EACAkE,MAAO,CACLC,SACEpH,KAAKiD,SACP,GAEFD,QAAS,CACPqE,uBAAuBC,EAAQC,EAAc,UAC3C,MAAMC,EAAS,IAAI,EAAAC,iBAAiBH,GAEpC,OADAE,EAAOE,YAAY1H,KAAKyG,GAAGc,IACpBC,CACT,G,sPCnEG,SAASG,EAAUC,EAAeC,GACvC,MAAMC,EAAgBF,EACnBG,MACAC,OAAO,QACPC,KAAK,QAAS,gBACdA,KAAK,cAAe,UACpBA,KAAK,IAAKL,EAAczD,QAAU,GAClC8D,KAAK,IAAKL,EAAc7C,SAAW,IACnCmD,KAAKL,GACFM,EAAWL,EAAc1D,OAAOgE,UAChCC,EAAeT,EAActD,UAGnCwD,EACGG,KACC,IACAI,EAAa7D,MACVoD,EAAczD,QAAUkE,EAAa7D,KAAO6D,EAAa5D,OAAS,GAEtEwD,KAAK,IAAKL,EAAc7C,SAAWuD,KAAKC,KAAKJ,EAASpD,QAAU,EACrE,CACO,SAASyD,EAAUZ,EAAeC,GACvC,MAAMC,EAAgBF,EACnBG,MACAC,OAAO,QACPC,KAAK,QAAS,gBACdA,KAAK,cAAe,UACpBA,KAAK,YAAa,eAClBA,KAAK,KAAML,EAAc7C,SAAW,GACpCkD,KAAK,IAAK,IACVC,KAAKL,GACFM,EAAWL,EAAc1D,OAAOgE,UAChCC,EAAeT,EAActD,UAGnCwD,EACGG,KACC,KACCI,EAAa9D,KACXqD,EAAc7C,SAAWsD,EAAa9D,IAAM8D,EAAa3D,QAAU,GAEvEuD,KACC,IACAK,KAAKG,IACHH,KAAKC,KAAKJ,EAASpD,QACnBsD,EAAa7D,KAAO8D,KAAKC,KAAKJ,EAASpD,QAAU,GAGzD,CAQO,SAASG,EAAsBlB,GACpC,MAAO,CACLL,MACE,MAAM+E,EAAW,CAAC,EAClB,OAAO1E,EAAML,MAAMgF,KAAI,SAASpG,GAM9B,OALImG,EAASnG,EAAEmD,IAAI,IACjBgD,EAASnG,EAAEmD,IAAI,KAAOnD,EAAE5B,MAExB+H,EAASnG,EAAEmD,IAAI,IAAMnD,EAAE5B,MAElB,CAAE+E,IAAKnD,EAAEmD,IAAK/E,MAAO+H,EAASnG,EAAEmD,IAAI,IAC7C,GACF,EAEJ,CAQO,SAASkD,EAAgB5E,GAC9B,MAAO,CACLO,IAAIsE,GACF,OAAO7E,EACJO,IAAIuE,KACJC,QAAO,SAASxG,GACf,OAAyB,IAAlBA,EAAE5B,MAAMqI,OAA2B,IAAZzG,EAAE5B,KAClC,IACCsI,MAAM,EAAGJ,EACd,EAEJ,CAEO,SAASK,EAAiBC,GAC/BA,EAAMC,UAAU,4BAA4BC,MAAK,SAASC,GACxDA,EAAEC,MAAK,SAAShH,GACd,MAAMiH,EAAO,SAAUxJ,MACvB,IAAIkI,EAAOsB,EAAKtB,OACZA,EAAKuB,OAAS,KAAMvB,EAAOA,EAAKwB,UAAU,EAAG,IAAM,OACnDxB,EAAKuB,OAAS,IAChBvB,EACEA,EACA,KACA,0BACI3F,EAAEoH,SAAWpH,EAAEqH,aAAe,EAAItB,KAAKuB,IAAO,KAElD,MAEJL,EAAKtB,KAAKA,EACZ,GACF,GACF,C","sources":["webpack://DataExperience/./src/components/chart/view/dc/TimelineChart.vue?a8dd","webpack://DataExperience/src/components/chart/view/dc/TimelineChart.vue","webpack://DataExperience/./src/components/chart/view/dc/TimelineChart.vue?4921","webpack://DataExperience/./src/components/chart/view/dc/TimelineChart.vue","webpack://DataExperience/./src/components/chart/view/filters/ChartViewFilters.vue?cff0","webpack://DataExperience/src/components/chart/view/filters/ChartViewFilters.vue","webpack://DataExperience/./src/components/chart/view/filters/ChartViewFilters.vue?e912","webpack://DataExperience/./src/components/chart/view/filters/ChartViewFilters.vue","webpack://DataExperience/./src/components/chart/view/text/ChartViewTextSelectTimeRange.vue?13ad","webpack://DataExperience/./src/components/chart/view/text/ChartViewTextSelectTimeRange.vue","webpack://DataExperience/./src/components/chart/view/dc/mixin.js","webpack://DataExperience/./src/components/chart/view/utils/dc-helpers.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('VContainer',[_c('div',{attrs:{\"id\":`area-chart-${_vm.graphId}`}},[_c('strong',[_vm._v(_vm._s(_vm.title))]),(_vm.cumulativeGroup)?[_c('strong',{directives:[{name:\"t\",rawName:\"v-t\",value:('in total'),expression:\"'in total'\"}],staticClass:\"ml-1\"})]:[_c('strong',{directives:[{name:\"t\",rawName:\"v-t\",value:('per'),expression:\"'per'\"}],staticClass:\"ml-1\"}),_c('strong',{directives:[{name:\"t\",rawName:\"v-t\",value:(_vm.timeUnit.name),expression:\"timeUnit.name\"}],staticClass:\"ml-1\"})],_c('ChartViewFilters')],2),_c('div',{staticClass:\"range-chart\",attrs:{\"id\":`range-chart-${_vm.graphId}`}},[_c('ChartViewTextSelectTimeRange')],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <VContainer>\r\n    <div :id=\"`area-chart-${graphId}`\">\r\n      <strong>{{ title }}</strong>\r\n      <template v-if=\"cumulativeGroup\">\r\n        <strong class=\"ml-1\" v-t=\"'in total'\" />\r\n      </template>\r\n      <template v-else>\r\n        <strong class=\"ml-1\" v-t=\"'per'\" />\r\n        <strong class=\"ml-1\" v-t=\"timeUnit.name\" />\r\n      </template>\r\n      <ChartViewFilters />\r\n    </div>\r\n    <div :id=\"`range-chart-${graphId}`\" class=\"range-chart\">\r\n      <ChartViewTextSelectTimeRange />\r\n    </div>\r\n  </VContainer>\r\n</template>\r\n<script>\r\n\r\nimport * as d3 from 'd3'\r\nimport * as dc from 'dc'\r\nimport mixin from './mixin'\r\nimport ChartViewTextSelectTimeRange from '../text/ChartViewTextSelectTimeRange.vue'\r\nimport ChartViewFilters from '../filters/ChartViewFilters.vue'\r\nimport { createCumulativeGroup } from '../utils/dc-helpers'\r\n\r\n// Remove warning on default colorscheme, even if not used..\r\ndc.config.defaultColors(d3.schemePaired)\r\n\r\nexport default {\r\n  components: { ChartViewTextSelectTimeRange, ChartViewFilters },\r\n  mixins: [mixin],\r\n  props: {\r\n    /**\r\n      * Column name of the {values} that represent date values\r\n      */\r\n    dateAccessor: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    /**\r\n      * Format of the dates being processed, if not set will use the Date constructor\r\n      */\r\n    dateFormat: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    /**\r\n      * The value to consider in respect to the date, if not set, will take the number of records\r\n      */\r\n    valueAccessor: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    /**\r\n      * If one of {valueAccessor} is null, replace the value with a default\r\n      */\r\n    defaultValue: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    /**\r\n     * If set to true use cumulative sum over the time period\r\n     */\r\n    cumulativeGroup: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data() {\r\n    const timeUnits = {\r\n      day: {\r\n        name: 'day',\r\n        accessor: d => d3.timeDay(this.dateParser(d)),\r\n        xUnits: d3.timeDays,\r\n        round: d3.timeDay.round\r\n      },\r\n      month: {\r\n        name: 'month',\r\n        accessor: d => d3.timeMonth(this.dateParser(d)),\r\n        xUnits: d3.timeMonths,\r\n        round: d3.timeMonth.round\r\n      },\r\n      year: {\r\n        name: 'year',\r\n        accessor: d => d3.timeYear(this.dateParser(d)),\r\n        xUnits: d3.timeYears,\r\n        round: d3.timeYear.round\r\n      }\r\n    }\r\n    return {\r\n      timeUnits,\r\n      timeUnit: timeUnits.day,\r\n      dateFormatter: d3.timeFormat('%B %d, %Y')\r\n    }\r\n  },\r\n  computed: {\r\n    dateParser() {\r\n      if (this.dateFormat) {\r\n        return d3.timeParse(this.dateFormat)\r\n      } else {\r\n        return (d) => {\r\n          return new Date(d)\r\n        }\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    drawViz() {\r\n      // Create and bind charts to their respective divs\r\n      const lineChart = new dc.LineChart(`#area-chart-${this.graphId}`)\r\n      const rangeChart = new dc.BarChart(`#range-chart-${this.graphId}`)\r\n      // Bind reset filters links\r\n      d3.select(`#area-chart-${this.graphId} a.reset`).on('click', function() {\r\n        lineChart.filterAll()\r\n        rangeChart.filterAll()\r\n        dc.redrawAll()\r\n      })\r\n      // Create dimensions\r\n      const dateExtent = d3.extent(this.ndx.all(), d => this.dateParser(d[this.dateAccessor]))\r\n      dateExtent[0] = d3.timeDay.offset(dateExtent[0], -1)\r\n      dateExtent[1] = d3.timeDay.offset(dateExtent[1], 1)\r\n      const nbMonths = d3.timeMonth.count(...dateExtent)\r\n      this.timeUnit = nbMonths > 10 ? nbMonths > 120 ? this.timeUnits.year : this.timeUnits.month : this.timeUnits.day\r\n      // Create the date dimension\r\n      const dateDimension = this.ndx.dimension(d => this.timeUnit.accessor(d[this.dateAccessor]))\r\n      // Create the aggregation from the date dimension\r\n      const valueGroup = this.valueAccessor ? dateDimension.group().reduceSum(d => d[this.valueAccessor]) : dateDimension.group().reduceCount()\r\n      // Render line chart\r\n      const width = d3\r\n        .select(`#area-chart-${this.graphId}`)\r\n        .node()\r\n        .getBoundingClientRect().width\r\n      lineChart\r\n        .margins({ top: 20, left: 40, right: 20, bottom: 20 })\r\n        .width(width)\r\n        .transitionDuration(1000)\r\n        .turnOnControls(false)\r\n        .curve(d3.curveMonotoneX)\r\n        .xyTipsOn(true)\r\n        .height((this.height - 30) * 0.8)\r\n        .brushOn(false)\r\n        .renderArea(true)\r\n        .dimension(dateDimension)\r\n        .group(this.cumulativeGroup ? createCumulativeGroup(valueGroup) : valueGroup)\r\n        .x(d3.scaleTime().domain(dateExtent))\r\n        .elasticY(true)\r\n        .rangeChart(rangeChart)\r\n        .renderDataPoints({\r\n          radius: 3,\r\n          fillOpacity: 0.8,\r\n          strokeOpacity: 0\r\n        })\r\n        .round(this.timeUnit.round)\r\n        .xUnits(this.timeUnit.xUnits)\r\n        .title(d => `${this.dateFormatter(d.key)} : ${d.value} ${this.valueLabel}`)\r\n        .clipPadding(10)\r\n        .yAxisLabel(`Total ${this.valueLabel}`)\r\n        .ordinalColors(this.colorPalette)\r\n      lineChart.xAxis().ticks(10)\r\n      lineChart.yAxis().ticks(6)\r\n      lineChart.filterAll()\r\n      // range chart date picker\r\n      rangeChart\r\n        .width(width)\r\n        .height((this.height - 30) * 0.2)\r\n        .margins({ top: 0, right: 10, bottom: 20, left: 40 })\r\n        .dimension(dateDimension)\r\n        .group(valueGroup)\r\n        .centerBar(true)\r\n        .gap(1)\r\n        .x(d3.scaleTime().domain(dateExtent))\r\n        .valueAccessor(d => d.value)\r\n        .label(d => d.key)\r\n        .round(this.timeUnit.round)\r\n        .alwaysUseRounding(true)\r\n        .xUnits(this.timeUnit.xUnits)\r\n        .ordinalColors(this.colorPalette)\r\n        .yAxis()\r\n        .ticks(0)\r\n      dc.renderAll()\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TimelineChart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TimelineChart.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TimelineChart.vue?vue&type=template&id=5a03ee24&\"\nimport script from \"./TimelineChart.vue?vue&type=script&lang=js&\"\nexport * from \"./TimelineChart.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('p',{staticClass:\"filters\"},[_c('span',[_vm._v(\" \"+_vm._s(_vm.$t('Current filter'))+\" \"),_c('span',{staticClass:\"filter\"})]),_c('a',{directives:[{name:\"t\",rawName:\"v-t\",value:('reset'),expression:\"'reset'\"}],staticClass:\"reset\",staticStyle:{\"display\":\"none\"}})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <p class=\"filters\">\r\n    <span>\r\n      {{ $t('Current filter') }}\r\n      <span class=\"filter\" />\r\n    </span>\r\n    <a v-t=\"'reset'\" class=\"reset\" style=\"display: none\" />\r\n  </p>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n\r\n}\r\n</script>\r\n","import mod from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewFilters.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewFilters.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewFilters.vue?vue&type=template&id=2f9280d1&\"\nimport script from \"./ChartViewFilters.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewFilters.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('p',{staticClass:\"muted pull-right text-subtitle-2 mr-4 mb-1\"},[_c('span',{domProps:{\"innerHTML\":_vm._s(_vm.$t('select-time-range'))}}),_vm._t(\"default\")],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./ChartViewTextSelectTimeRange.vue?vue&type=template&id=46f28fc2&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { TextFilterWidget } from 'dc'\r\n\r\nexport default {\r\n  props: {\r\n    /**\r\n     * The crossfilter object that contains the values and filters\r\n     * e,g: crossfilter(this.results)\r\n     */\r\n    ndx: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    /**\r\n     * Title of the graph\r\n     */\r\n    title: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    /**\r\n     * Label to display in the axis\r\n     */\r\n    valueLabel: {\r\n      type: String,\r\n      default: 'records'\r\n    },\r\n    /**\r\n     * The height of the graph\r\n     * the width is dynamically computed from it's parent\r\n     */\r\n    height: {\r\n      type: Number,\r\n      default: 250\r\n    },\r\n    /**\r\n     * Position of the graph in the dashboard\r\n     * Determine the color to pick in colorPalette\r\n     */\r\n    position: {\r\n      type: Number,\r\n      required: true\r\n    },\r\n    /**\r\n     * Colors to use in the graph\r\n     * Default to Set 3: https://observablehq.com/@d3/color-schemes\r\n     */\r\n    colorPalette: {\r\n      type: Array,\r\n      default: () => ['#bebada', '#8dd3c7', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#bc80bd', '#ccebc5']\r\n    }\r\n    /**\r\n     '#58539E',\r\n        '#847CEB',\r\n        '#605BAB',\r\n        '#4A4685',\r\n        '#35325E'\r\n     */\r\n  },\r\n  data() {\r\n    return {\r\n      graphId: 'graph_' + this._uid\r\n    }\r\n  },\r\n  mounted() {\r\n    this.drawViz()\r\n  },\r\n  watch: {\r\n    values() {\r\n      this.drawViz()\r\n    }\r\n  },\r\n  methods: {\r\n    createTextFilterWidget(parent, placeholder = 'Search') {\r\n      const widget = new TextFilterWidget(parent)\r\n      widget.placeHolder(this.$t(placeholder))\r\n      return widget\r\n    }\r\n  }\r\n}\r\n","import * as d3 from 'd3'\r\nimport * as dc from 'dc'\r\n\r\n// Functions to add x-label & y-label to Row Charts (Unsupported by dc.js)\r\n// https://www.intothevoid.io/data-visualization/row-chart-axis-labels-dc-js/\r\n// Use with:\r\n// contentChart.on('postRender', function (chart) {\r\n//  addXLabel(chart, 'Hours watched')\r\n// })\r\nexport function addXLabel(chartToUpdate, displayText) {\r\n  const textSelection = chartToUpdate\r\n    .svg()\r\n    .append('text')\r\n    .attr('class', 'x-axis-label')\r\n    .attr('text-anchor', 'middle')\r\n    .attr('x', chartToUpdate.width() / 2)\r\n    .attr('y', chartToUpdate.height() - 10)\r\n    .text(displayText)\r\n  const textDims = textSelection.node().getBBox()\r\n  const chartMargins = chartToUpdate.margins()\r\n\r\n  // Dynamically adjust positioning after reading text dimension from DOM\r\n  textSelection\r\n    .attr(\r\n      'x',\r\n      chartMargins.left +\r\n        (chartToUpdate.width() - chartMargins.left - chartMargins.right) / 2\r\n    )\r\n    .attr('y', chartToUpdate.height() - Math.ceil(textDims.height) / 2)\r\n}\r\nexport function addYLabel(chartToUpdate, displayText) {\r\n  const textSelection = chartToUpdate\r\n    .svg()\r\n    .append('text')\r\n    .attr('class', 'y-axis-label')\r\n    .attr('text-anchor', 'middle')\r\n    .attr('transform', 'rotate(-90)')\r\n    .attr('x', -chartToUpdate.height() / 2)\r\n    .attr('y', 10)\r\n    .text(displayText)\r\n  const textDims = textSelection.node().getBBox()\r\n  const chartMargins = chartToUpdate.margins()\r\n\r\n  // Dynamically adjust positioning after reading text dimension from DOM\r\n  textSelection\r\n    .attr(\r\n      'x',\r\n      -chartMargins.top -\r\n        (chartToUpdate.height() - chartMargins.top - chartMargins.bottom) / 2\r\n    )\r\n    .attr(\r\n      'y',\r\n      Math.max(\r\n        Math.ceil(textDims.height),\r\n        chartMargins.left - Math.ceil(textDims.height) - 5\r\n      )\r\n    )\r\n}\r\n\r\n/**\r\n * Transform a simple group to a cumulative one in order\r\n * to make cumulative line chart\r\n * @param {Crossfilter group} group the group to transform\r\n * @returns the cumulative group\r\n */\r\nexport function createCumulativeGroup(group) {\r\n  return {\r\n    all() {\r\n      const cumulate = {}\r\n      return group.all().map(function(d) {\r\n        if (cumulate[d.key[0]]) {\r\n          cumulate[d.key[0]] += d.value\r\n        } else {\r\n          cumulate[d.key[0]] = d.value\r\n        }\r\n        return { key: d.key, value: cumulate[d.key[0]] }\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Remove datapoints that are null in a crossfilter group\r\n * Used to hide empty bins in a bar graph\r\n * @param {Crossfilter group} group the group to transform\r\n * @returns the cleaned group\r\n */\r\nexport function removeEmptyBins(group) {\r\n  return {\r\n    top(n) {\r\n      return group\r\n        .top(Infinity)\r\n        .filter(function(d) {\r\n          return d.value.count !== 0 && d.value !== 0\r\n        })\r\n        .slice(0, n)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addPiePercentage(chart) {\r\n  chart.selectAll('text.pie-slice.pie-label').call(function(t) {\r\n    t.each(function(d) {\r\n      const self = d3.select(this)\r\n      let text = self.text()\r\n      if (text.length > 14) { text = text.substring(0, 14) + '.. ' }\r\n      if (text.length > 0) {\r\n        text =\r\n          text +\r\n          ' (' +\r\n          dc.utils.printSingleValue(\r\n            ((d.endAngle - d.startAngle) / (2 * Math.PI)) * 100\r\n          ) +\r\n          '%)'\r\n      }\r\n      self.text(text)\r\n    })\r\n  })\r\n}\r\n"],"names":["render","_vm","this","_c","_self","attrs","graphId","_v","_s","title","directives","name","rawName","value","expression","staticClass","timeUnit","staticRenderFns","dc","config","defaultColors","components","ChartViewTextSelectTimeRange","mixins","mixin","props","dateAccessor","type","String","required","dateFormat","default","valueAccessor","defaultValue","Number","cumulativeGroup","Boolean","data","timeUnits","day","accessor","d","dateParser","xUnits","round","month","year","dateFormatter","computed","Date","methods","drawViz","lineChart","LineChart","rangeChart","BarChart","on","filterAll","redrawAll","dateExtent","ndx","all","nbMonths","dateDimension","dimension","valueGroup","group","reduceSum","reduceCount","width","node","getBoundingClientRect","margins","top","left","right","bottom","transitionDuration","turnOnControls","curve","xyTipsOn","height","brushOn","renderArea","createCumulativeGroup","x","domain","elasticY","renderDataPoints","radius","fillOpacity","strokeOpacity","key","valueLabel","clipPadding","yAxisLabel","ordinalColors","colorPalette","xAxis","ticks","yAxis","centerBar","gap","label","alwaysUseRounding","renderAll","component","$t","staticStyle","domProps","_t","script","Object","position","Array","_uid","mounted","watch","values","createTextFilterWidget","parent","placeholder","widget","TextFilterWidget","placeHolder","addXLabel","chartToUpdate","displayText","textSelection","svg","append","attr","text","textDims","getBBox","chartMargins","Math","ceil","addYLabel","max","cumulate","map","removeEmptyBins","n","Infinity","filter","count","slice","addPiePercentage","chart","selectAll","call","t","each","self","length","substring","endAngle","startAngle","PI"],"sourceRoot":""}