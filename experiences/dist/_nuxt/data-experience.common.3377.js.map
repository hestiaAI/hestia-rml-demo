{"version":3,"file":"data-experience.common.3377.js","mappings":";;;;;;;;;;;;;;;AAAA,+BAA+B,6BAA6B,+DAA+D,iCAAiC,uBAAuB,aAAa,OAAO,8CAA8C,sBAAsB,0BAA0B,mBAAmB,yCAAyC,iCAAiC,GAAG,YAAY,GAAG,YAAY,aAAa,sBAAsB,QAAQ,kBAAkB;AAC7d;AACA;;;;;;;;ACFe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjBe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnBe,SAAS,OAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnB6B;;AAE7B;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;;;ACtBe;AACf;AACA;AACA;AACA;;;ACJuC;AACJ;AACE;;AAErC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,8BAA8B,MAAM;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf,sCAAsC;AACtC,eAAe;AACf,kBAAkB;AAClB;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kEAAkE,QAAQ;AAC1E;;AAEA;AACA,qEAAqE,QAAQ;AAC7E;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qEAAqE,QAAQ;AAC7E;;AAEA;AACA,qEAAqE,QAAQ;AAC7E;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6BAA6B,aAAa;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,0BAA0B;AAC5C;AACA;AACA;AACA;AACA;;AAEA,8BAA8B,MAAM;AACpC;AACA;AACA,qBAAqB,GAAG,2BAA2B,GAAG;AACtD;AACA;AACA;;AAEA,8BAA8B,MAAM;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA+B,MAAM;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8BAA8B,MAAM;AACpC,cAAc,GAAG;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,OAAG,iDAAiD,GAAG;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,kBAAkB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,GAAG;AACtC;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;AACA,oBAAoB,eAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA,oBAAoB,eAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,kBAAkB;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B,yBAAyB;AACtD;AACA,kBAAkB,SAAS,cAAc;AACzC;AACA;AACA,kBAAkB,SAAS,cAAc;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,0BAA0B;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,qBAAqB;AACrC;AACA;AACA;AACA,gBAAgB,qBAAqB;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,qBAAqB;AACrC;AACA;AACA;AACA,gBAAgB,qBAAqB;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AChXA;AACA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B;AAC9B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,6CAAe,IAAI,EAAC;;;ACjIb;;;ACAP,6BAAe,sBAAS;AACxB;AACA;AACA;AACA;;;ACJO,SAAS,OAAC;AACjB;AACA;;AAEO,SAAS,OAAC;AACjB;AACA;;;ACN6B;AACK;AACI;AACe;AACT;;AAE5C;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAAS,SAAI;AACb;AACA;AACA,UAAU,OAAM;AAChB,UAAU,OAAM;AAChB;;AAEA;AACA,uBAAuB,UAAU;AACjC,qCAAqC,QAAI;AACzC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iEAAiE,YAAQ;AACzE;;AAEA;AACA,iEAAiE,YAAQ;AACzE;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP,SAAS,SAAI;AACb;;AAEO;AACP,SAAS,SAAI;AACb;;AAEO;AACP,UAAU,SAAI;AACd;AACA;AACA;AACA;;;ACnFwC;;AAExC;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6BAAe,gCAAW;AAC1B,SAAS,cAAc;AACvB;AACA;AACA;;;;;;;;ACGwB;AACkB;AACL;AACV;AACoC;;AAE/D,4EAAe;AACf;AACA,qCAAqC;AACrC,WAAW,gBAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,uBACP;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kCAAI,CAAC,kCAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBACL;AACf;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,yBACC;AACrB;AACA,eAAe,wBAAc;AAC7B;AACA,0BAA0B,kBACX;AACf;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBACH;AACf;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,kBACP;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,MACN;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oBAA6B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,kBAAS;AACnB;AACA;AACA,UAAU,kBAAS;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gBAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,kBAAS;AACnB;AACA,UAAU,sBAAY;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,sBAAY;AACtB,UAAU,kBAAS;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AC/PgJ,CAAC,iFAAe,uCAAG,EAAC;;ACArK;;;;;;;AEA0G;AACvC;AACL;AAC9D,CAAwG;;;AAGxG;AACyG;AACzG,gBAAgB,sCAAU;AAC1B,EAAE,4CAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,oDAAe;;;;;;;;;;;;;;;;ACnBf,+BAA+B,6BAA6B,yBAAyB,qBAAqB,wDAAwD,0CAA0C,aAAa,0BAA0B,OAAO,mCAAmC,KAAK,yBAAyB,gBAAgB,8DAA8D,8CAA8C,4BAA4B,uFAAuF,sCAAsC,OAAO,iBAAiB,qBAAqB,wCAAwC;AACrqB;AACA;;;;;;;;;;;;;ACiByE;AACT;AACiC;AACvB;;AAE1E,kFAAe;AACf,0BAA0B,mDAAwB,wDAAiB;AACnE,WAAW,6CAAuB;AAClC,CAAC;;;AC3BsJ,CAAC,uFAAe,6CAAG,EAAC;;;;ACAvE;AAC3B;AACL;;;AAGpE;AACA,CAAyG;AACzG,gBAAgB,sCAAU;AAC1B,EAAE,kDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,0DAAe;;;;;;;;;;;;;;;;;AClBR;;AAEP;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,yEAAyE,8CAA8C;AACvH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gEAAgE,sBAAsB;;AAEtF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,4CAAe,GAAG,EAAC;;;AC1EK;;AAExB,6BAAe,gBAAW;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB,OAAG;AACzB;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,+CAA+C,YAAY,kCAAkC,IAAI;AACjG,yDAAyD,+BAA+B;AACxF;;AAEA;AACA,8BAA8B,kDAAkD;AAChF,2BAA2B,4CAA4C;AACvE,+BAA+B,wDAAwD;AACvF,uBAAuB,cAAc,cAAc;AACnD,gCAAgC,mCAAmC,cAAc;AACjF,kCAAkC,oBAAoB,cAAc;AACpE,0BAA0B,YAAY;AACtC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS,OAAG;AACZ;;AAEA;AACA;AACA;;;ACxE6C;;AAE7C;;AAEA,YAAY,iBAAa;;AAEzB;AACA;AACA;AACA;AACA;AACA,SAAS,MAAM;AACf;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2DAA2D,iBAAiB;;AAE5E;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,4CAAe,mDAAG,IAAC;;;ACtCnB,6BAAe,cAAS;AACxB;AACA;AACA;AACA;;;ACJuC;AACF;AACA;AACE;AACI;AACE;;;;;;;;;;;;;ACLR;AACJ;AACjC;AACmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB;AACxB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,iBAAiB;AACjB;AACA,yBAAyB,gDAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,+DAAe,8DAAK,QAAQ,qEAAe,CAAC","sources":["webpack://data-experience/./src/components/chart/view/ChartViewSankey.vue?028d","webpack://data-experience/./node_modules/d3-sankey/node_modules/d3-array/src/sum.js","webpack://data-experience/./node_modules/d3-sankey/node_modules/d3-array/src/max.js","webpack://data-experience/./node_modules/d3-sankey/node_modules/d3-array/src/min.js","webpack://data-experience/./node_modules/d3-sankey/src/align.js","webpack://data-experience/./node_modules/d3-sankey/src/constant.js","webpack://data-experience/./node_modules/d3-sankey/src/sankey.js","webpack://data-experience/./node_modules/d3-sankey/node_modules/d3-path/src/path.js","webpack://data-experience/./node_modules/d3-sankey/node_modules/d3-shape/src/array.js","webpack://data-experience/./node_modules/d3-sankey/node_modules/d3-shape/src/constant.js","webpack://data-experience/./node_modules/d3-sankey/node_modules/d3-shape/src/point.js","webpack://data-experience/./node_modules/d3-sankey/node_modules/d3-shape/src/link/index.js","webpack://data-experience/./node_modules/d3-sankey/src/sankeyLinkHorizontal.js","webpack://data-experience/src/components/chart/view/ChartViewSankey.vue","webpack://data-experience/./src/components/chart/view/ChartViewSankey.vue?c534","webpack://data-experience/./src/components/chart/view/ChartViewSankey.vue?4d46","webpack://data-experience/./src/components/chart/view/ChartViewSankey.vue?3b3c","webpack://data-experience/./src/components/chart/view/ChartViewSankey.vue","webpack://data-experience/./src/components/chart/view/ChartViewVRowWebShare.vue?ea0d","webpack://data-experience/src/components/chart/view/ChartViewVRowWebShare.vue","webpack://data-experience/./src/components/chart/view/ChartViewVRowWebShare.vue?2101","webpack://data-experience/./src/components/chart/view/ChartViewVRowWebShare.vue","webpack://data-experience/./node_modules/d3-collection/src/map.js","webpack://data-experience/./node_modules/d3-collection/src/nest.js","webpack://data-experience/./node_modules/d3-collection/src/set.js","webpack://data-experience/./node_modules/d3-collection/src/keys.js","webpack://data-experience/./node_modules/d3-collection/src/index.js","webpack://data-experience/./src/components/chart/view/mixin.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('VContainer',[_c('ChartViewVRowWebShare',[_c('VCol',{staticClass:\"text-center\",attrs:{\"cols\":\"12\",\"md\":\"12\"}},[_c('i18n',{attrs:{\"path\":_vm.kViewBlock('labelTotal'),\"tag\":\"p\"},scopedSlots:_vm._u([{key:\"total\",fn:function(){return [_c('span',{staticClass:\"font-weight-bold\",domProps:{\"textContent\":_vm._s(_vm.total)}})]},proxy:true}])}),_c('div',{staticStyle:{\"position\":\"relative\"},attrs:{\"id\":_vm.graphId}})],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default function sum(values, valueof) {\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        sum += value;\n      }\n    }\n  }\n  return sum;\n}\n","export default function max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n","export default function min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n","import {min} from \"d3-array\";\n\nfunction targetDepth(d) {\n  return d.target.depth;\n}\n\nexport function left(node) {\n  return node.depth;\n}\n\nexport function right(node, n) {\n  return n - 1 - node.height;\n}\n\nexport function justify(node, n) {\n  return node.sourceLinks.length ? node.depth : n - 1;\n}\n\nexport function center(node) {\n  return node.targetLinks.length ? node.depth\n      : node.sourceLinks.length ? min(node.sourceLinks, targetDepth) - 1\n      : 0;\n}\n","export default function constant(x) {\n  return function() {\n    return x;\n  };\n}\n","import {max, min, sum} from \"d3-array\";\nimport {justify} from \"./align.js\";\nimport constant from \"./constant.js\";\n\nfunction ascendingSourceBreadth(a, b) {\n  return ascendingBreadth(a.source, b.source) || a.index - b.index;\n}\n\nfunction ascendingTargetBreadth(a, b) {\n  return ascendingBreadth(a.target, b.target) || a.index - b.index;\n}\n\nfunction ascendingBreadth(a, b) {\n  return a.y0 - b.y0;\n}\n\nfunction value(d) {\n  return d.value;\n}\n\nfunction defaultId(d) {\n  return d.index;\n}\n\nfunction defaultNodes(graph) {\n  return graph.nodes;\n}\n\nfunction defaultLinks(graph) {\n  return graph.links;\n}\n\nfunction find(nodeById, id) {\n  const node = nodeById.get(id);\n  if (!node) throw new Error(\"missing: \" + id);\n  return node;\n}\n\nfunction computeLinkBreadths({nodes}) {\n  for (const node of nodes) {\n    let y0 = node.y0;\n    let y1 = y0;\n    for (const link of node.sourceLinks) {\n      link.y0 = y0 + link.width / 2;\n      y0 += link.width;\n    }\n    for (const link of node.targetLinks) {\n      link.y1 = y1 + link.width / 2;\n      y1 += link.width;\n    }\n  }\n}\n\nexport default function Sankey() {\n  let x0 = 0, y0 = 0, x1 = 1, y1 = 1; // extent\n  let dx = 24; // nodeWidth\n  let dy = 8, py; // nodePadding\n  let id = defaultId;\n  let align = justify;\n  let sort;\n  let linkSort;\n  let nodes = defaultNodes;\n  let links = defaultLinks;\n  let iterations = 6;\n\n  function sankey() {\n    const graph = {nodes: nodes.apply(null, arguments), links: links.apply(null, arguments)};\n    computeNodeLinks(graph);\n    computeNodeValues(graph);\n    computeNodeDepths(graph);\n    computeNodeHeights(graph);\n    computeNodeBreadths(graph);\n    computeLinkBreadths(graph);\n    return graph;\n  }\n\n  sankey.update = function(graph) {\n    computeLinkBreadths(graph);\n    return graph;\n  };\n\n  sankey.nodeId = function(_) {\n    return arguments.length ? (id = typeof _ === \"function\" ? _ : constant(_), sankey) : id;\n  };\n\n  sankey.nodeAlign = function(_) {\n    return arguments.length ? (align = typeof _ === \"function\" ? _ : constant(_), sankey) : align;\n  };\n\n  sankey.nodeSort = function(_) {\n    return arguments.length ? (sort = _, sankey) : sort;\n  };\n\n  sankey.nodeWidth = function(_) {\n    return arguments.length ? (dx = +_, sankey) : dx;\n  };\n\n  sankey.nodePadding = function(_) {\n    return arguments.length ? (dy = py = +_, sankey) : dy;\n  };\n\n  sankey.nodes = function(_) {\n    return arguments.length ? (nodes = typeof _ === \"function\" ? _ : constant(_), sankey) : nodes;\n  };\n\n  sankey.links = function(_) {\n    return arguments.length ? (links = typeof _ === \"function\" ? _ : constant(_), sankey) : links;\n  };\n\n  sankey.linkSort = function(_) {\n    return arguments.length ? (linkSort = _, sankey) : linkSort;\n  };\n\n  sankey.size = function(_) {\n    return arguments.length ? (x0 = y0 = 0, x1 = +_[0], y1 = +_[1], sankey) : [x1 - x0, y1 - y0];\n  };\n\n  sankey.extent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], sankey) : [[x0, y0], [x1, y1]];\n  };\n\n  sankey.iterations = function(_) {\n    return arguments.length ? (iterations = +_, sankey) : iterations;\n  };\n\n  function computeNodeLinks({nodes, links}) {\n    for (const [i, node] of nodes.entries()) {\n      node.index = i;\n      node.sourceLinks = [];\n      node.targetLinks = [];\n    }\n    const nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d]));\n    for (const [i, link] of links.entries()) {\n      link.index = i;\n      let {source, target} = link;\n      if (typeof source !== \"object\") source = link.source = find(nodeById, source);\n      if (typeof target !== \"object\") target = link.target = find(nodeById, target);\n      source.sourceLinks.push(link);\n      target.targetLinks.push(link);\n    }\n    if (linkSort != null) {\n      for (const {sourceLinks, targetLinks} of nodes) {\n        sourceLinks.sort(linkSort);\n        targetLinks.sort(linkSort);\n      }\n    }\n  }\n\n  function computeNodeValues({nodes}) {\n    for (const node of nodes) {\n      node.value = node.fixedValue === undefined\n          ? Math.max(sum(node.sourceLinks, value), sum(node.targetLinks, value))\n          : node.fixedValue;\n    }\n  }\n\n  function computeNodeDepths({nodes}) {\n    const n = nodes.length;\n    let current = new Set(nodes);\n    let next = new Set;\n    let x = 0;\n    while (current.size) {\n      for (const node of current) {\n        node.depth = x;\n        for (const {target} of node.sourceLinks) {\n          next.add(target);\n        }\n      }\n      if (++x > n) throw new Error(\"circular link\");\n      current = next;\n      next = new Set;\n    }\n  }\n\n  function computeNodeHeights({nodes}) {\n    const n = nodes.length;\n    let current = new Set(nodes);\n    let next = new Set;\n    let x = 0;\n    while (current.size) {\n      for (const node of current) {\n        node.height = x;\n        for (const {source} of node.targetLinks) {\n          next.add(source);\n        }\n      }\n      if (++x > n) throw new Error(\"circular link\");\n      current = next;\n      next = new Set;\n    }\n  }\n\n  function computeNodeLayers({nodes}) {\n    const x = max(nodes, d => d.depth) + 1;\n    const kx = (x1 - x0 - dx) / (x - 1);\n    const columns = new Array(x);\n    for (const node of nodes) {\n      const i = Math.max(0, Math.min(x - 1, Math.floor(align.call(null, node, x))));\n      node.layer = i;\n      node.x0 = x0 + i * kx;\n      node.x1 = node.x0 + dx;\n      if (columns[i]) columns[i].push(node);\n      else columns[i] = [node];\n    }\n    if (sort) for (const column of columns) {\n      column.sort(sort);\n    }\n    return columns;\n  }\n\n  function initializeNodeBreadths(columns) {\n    const ky = min(columns, c => (y1 - y0 - (c.length - 1) * py) / sum(c, value));\n    for (const nodes of columns) {\n      let y = y0;\n      for (const node of nodes) {\n        node.y0 = y;\n        node.y1 = y + node.value * ky;\n        y = node.y1 + py;\n        for (const link of node.sourceLinks) {\n          link.width = link.value * ky;\n        }\n      }\n      y = (y1 - y + py) / (nodes.length + 1);\n      for (let i = 0; i < nodes.length; ++i) {\n        const node = nodes[i];\n        node.y0 += y * (i + 1);\n        node.y1 += y * (i + 1);\n      }\n      reorderLinks(nodes);\n    }\n  }\n\n  function computeNodeBreadths(graph) {\n    const columns = computeNodeLayers(graph);\n    py = Math.min(dy, (y1 - y0) / (max(columns, c => c.length) - 1));\n    initializeNodeBreadths(columns);\n    for (let i = 0; i < iterations; ++i) {\n      const alpha = Math.pow(0.99, i);\n      const beta = Math.max(1 - alpha, (i + 1) / iterations);\n      relaxRightToLeft(columns, alpha, beta);\n      relaxLeftToRight(columns, alpha, beta);\n    }\n  }\n\n  // Reposition each node based on its incoming (target) links.\n  function relaxLeftToRight(columns, alpha, beta) {\n    for (let i = 1, n = columns.length; i < n; ++i) {\n      const column = columns[i];\n      for (const target of column) {\n        let y = 0;\n        let w = 0;\n        for (const {source, value} of target.targetLinks) {\n          let v = value * (target.layer - source.layer);\n          y += targetTop(source, target) * v;\n          w += v;\n        }\n        if (!(w > 0)) continue;\n        let dy = (y / w - target.y0) * alpha;\n        target.y0 += dy;\n        target.y1 += dy;\n        reorderNodeLinks(target);\n      }\n      if (sort === undefined) column.sort(ascendingBreadth);\n      resolveCollisions(column, beta);\n    }\n  }\n\n  // Reposition each node based on its outgoing (source) links.\n  function relaxRightToLeft(columns, alpha, beta) {\n    for (let n = columns.length, i = n - 2; i >= 0; --i) {\n      const column = columns[i];\n      for (const source of column) {\n        let y = 0;\n        let w = 0;\n        for (const {target, value} of source.sourceLinks) {\n          let v = value * (target.layer - source.layer);\n          y += sourceTop(source, target) * v;\n          w += v;\n        }\n        if (!(w > 0)) continue;\n        let dy = (y / w - source.y0) * alpha;\n        source.y0 += dy;\n        source.y1 += dy;\n        reorderNodeLinks(source);\n      }\n      if (sort === undefined) column.sort(ascendingBreadth);\n      resolveCollisions(column, beta);\n    }\n  }\n\n  function resolveCollisions(nodes, alpha) {\n    const i = nodes.length >> 1;\n    const subject = nodes[i];\n    resolveCollisionsBottomToTop(nodes, subject.y0 - py, i - 1, alpha);\n    resolveCollisionsTopToBottom(nodes, subject.y1 + py, i + 1, alpha);\n    resolveCollisionsBottomToTop(nodes, y1, nodes.length - 1, alpha);\n    resolveCollisionsTopToBottom(nodes, y0, 0, alpha);\n  }\n\n  // Push any overlapping nodes down.\n  function resolveCollisionsTopToBottom(nodes, y, i, alpha) {\n    for (; i < nodes.length; ++i) {\n      const node = nodes[i];\n      const dy = (y - node.y0) * alpha;\n      if (dy > 1e-6) node.y0 += dy, node.y1 += dy;\n      y = node.y1 + py;\n    }\n  }\n\n  // Push any overlapping nodes up.\n  function resolveCollisionsBottomToTop(nodes, y, i, alpha) {\n    for (; i >= 0; --i) {\n      const node = nodes[i];\n      const dy = (node.y1 - y) * alpha;\n      if (dy > 1e-6) node.y0 -= dy, node.y1 -= dy;\n      y = node.y0 - py;\n    }\n  }\n\n  function reorderNodeLinks({sourceLinks, targetLinks}) {\n    if (linkSort === undefined) {\n      for (const {source: {sourceLinks}} of targetLinks) {\n        sourceLinks.sort(ascendingTargetBreadth);\n      }\n      for (const {target: {targetLinks}} of sourceLinks) {\n        targetLinks.sort(ascendingSourceBreadth);\n      }\n    }\n  }\n\n  function reorderLinks(nodes) {\n    if (linkSort === undefined) {\n      for (const {sourceLinks, targetLinks} of nodes) {\n        sourceLinks.sort(ascendingTargetBreadth);\n        targetLinks.sort(ascendingSourceBreadth);\n      }\n    }\n  }\n\n  // Returns the target.y0 that would produce an ideal link from source to target.\n  function targetTop(source, target) {\n    let y = source.y0 - (source.sourceLinks.length - 1) * py / 2;\n    for (const {target: node, width} of source.sourceLinks) {\n      if (node === target) break;\n      y += width + py;\n    }\n    for (const {source: node, width} of target.targetLinks) {\n      if (node === source) break;\n      y -= width;\n    }\n    return y;\n  }\n\n  // Returns the source.y0 that would produce an ideal link from source to target.\n  function sourceTop(source, target) {\n    let y = target.y0 - (target.targetLinks.length - 1) * py / 2;\n    for (const {source: node, width} of target.targetLinks) {\n      if (node === source) break;\n      y += width + py;\n    }\n    for (const {target: node, width} of source.sourceLinks) {\n      if (node === target) break;\n      y -= width;\n    }\n    return y;\n  }\n\n  return sankey;\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport {slice} from \"../array.js\";\nimport constant from \"../constant.js\";\nimport {x as pointX, y as pointY} from \"../point.js\";\nimport pointRadial from \"../pointRadial.js\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x = pointX,\n      y = pointY,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nexport function linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nexport function linkVertical() {\n  return link(curveVertical);\n}\n\nexport function linkRadial() {\n  var l = link(curveRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n","import {linkHorizontal} from \"d3-shape\";\n\nfunction horizontalSource(d) {\n  return [d.source.x1, d.y0];\n}\n\nfunction horizontalTarget(d) {\n  return [d.target.x0, d.y1];\n}\n\nexport default function() {\n  return linkHorizontal()\n      .source(horizontalSource)\n      .target(horizontalTarget);\n}\n","<template>\r\n  <VContainer>\r\n    <ChartViewVRowWebShare>\r\n      <VCol cols=\"12\" md=\"12\" class=\"text-center\">\r\n        <!-- https://kazupon.github.io/vue-i18n/guide/interpolation.html#slots-syntax-usage -->\r\n        <i18n :path=\"kViewBlock('labelTotal')\" tag=\"p\">\r\n          <template #total>\r\n            <span class=\"font-weight-bold\" v-text=\"total\" />\r\n          </template>\r\n        </i18n>\r\n        <div :id=\"graphId\" style=\"position: relative\" />\r\n      </VCol>\r\n    </ChartViewVRowWebShare>\r\n  </VContainer>\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from 'd3'\r\nimport { nest, keys } from 'd3-collection'\r\nimport * as d3Sankey from 'd3-sankey'\r\nimport mixin from './mixin'\r\nimport ChartViewVRowWebShare from './ChartViewVRowWebShare.vue'\r\n\r\nexport default {\r\n  name: 'ChartViewSankey',\r\n  components: { ChartViewVRowWebShare },\r\n  mixins: [mixin],\r\n  props: {\r\n    topN: {\r\n      type: Number,\r\n      default: 10\r\n    },\r\n    displayLinksLabels: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    nodeWidth: {\r\n      type: Number,\r\n      default: 40\r\n    },\r\n    nodePadding: {\r\n      type: Number,\r\n      default: 40\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      total: 0\r\n    }\r\n  },\r\n  methods: {\r\n    k(key) {\r\n      return `chart-view.sankey.${key}`\r\n    },\r\n    toJSONGraph(data) {\r\n      // group, count each similar links and limit to top n links\r\n      const groupedData = d3\r\n        .flatRollup(data, v => v.length, d => d.source, d => d.target)\r\n        .map((d) => {\r\n          return { source: d[0], target: d[1], value: d[2] }\r\n        })\r\n        .filter(d => d.source !== '' &&\r\n                d.target !== '' &&\r\n                d.value &&\r\n                d.source !== d.target)\r\n        .sort((a, b) => d3.descending(+a.value, +b.value))\r\n        .slice(0, this.topN)\r\n      const graph = { nodes: [], links: [] }\r\n      groupedData.forEach(function(d) {\r\n        d.sourceName = d.source\r\n        d.targetName = d.target\r\n        // Avoid circular links\r\n        d.source = d.source + 's'\r\n        d.target = d.target + 't'\r\n        graph.nodes.push({ id: d.source })\r\n        graph.nodes.push({ id: d.target })\r\n        graph.links.push({\r\n          source: d.source,\r\n          target: d.target,\r\n          sourceName: d.sourceName,\r\n          targetName: d.targetName,\r\n          value: d.value\r\n        })\r\n      })\r\n      // return only the distinct / unique nodes\r\n      graph.nodes = keys(nest()\r\n        .key(d => d.id)\r\n        .object(graph.nodes))\r\n      // loop through each link replacing the text with its index from node\r\n      graph.links.forEach(function(d, i) {\r\n        graph.links[i].source = graph.nodes.indexOf(graph.links[i].source)\r\n        graph.links[i].target = graph.nodes.indexOf(graph.links[i].target)\r\n      })\r\n      // make nodes an array of objects instead than an array of strings\r\n      graph.nodes.forEach(function(d, i) {\r\n        graph.nodes[i] = { name: d }\r\n      })\r\n      return graph\r\n    },\r\n    drawViz() {\r\n      this.total = this.values.length\r\n      // transform to graph format\r\n      const linksData = this.toJSONGraph(this.values)\r\n      // set the dimensions and margins of the graph\r\n      const margin = { top: 50, right: 250, bottom: 10, left: 250 }\r\n      const width = d3\r\n        .select('#' + this.graphId)\r\n        .node()\r\n        .getBoundingClientRect().width -\r\n                margin.left -\r\n                margin.right\r\n      const height = this.topN * 50 - margin.top - margin.bottom\r\n      // format variables\r\n      const color = d3\r\n        .scaleOrdinal()\r\n        .domain(linksData.nodes.map(d => d.name.slice(0, -1)))\r\n        .range(d3.schemeDark2)\r\n      // create a tooltip for the links and append it to the viz\r\n      const linkTooltip = d3\r\n        .select('#' + this.graphId)\r\n        .append('div')\r\n        .style('opacity', 1)\r\n        .html(`(${this.$t(this.k('hoverMessage'))})`)\r\n        .style('left', width / 2 + margin.left + 'px')\r\n        .style('top', 0 + 'px')\r\n      // append the svg object to the viz\r\n      const svg = d3\r\n        .select('#' + this.graphId)\r\n        .append('svg')\r\n        .attr('width', width + margin.left + margin.right)\r\n        .attr('height', height + margin.top + margin.bottom)\r\n        .append('g')\r\n        .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\r\n      // create a tooltip\r\n      const tooltip = d3\r\n        .select('#' + this.graphId)\r\n        .append('div')\r\n        .style('opacity', 0)\r\n        .attr('class', 'tooltip')\r\n      // Add source text (on the left)\r\n      svg\r\n        .append('text')\r\n        .attr('class', 'label')\r\n        .attr('x', 0)\r\n        .attr('y', -margin.top / 2)\r\n        .text(this.$t(this.kViewBlock('sourceText')))\r\n      // Add target text (on the right)\r\n      svg\r\n        .append('text')\r\n        .attr('class', 'label')\r\n        .attr('x', width)\r\n        .attr('y', -margin.top / 2)\r\n        .attr('text-anchor', 'end')\r\n        .text(this.$t(this.kViewBlock('targetText')))\r\n      // Set the sankey diagram properties\r\n      const sankey = d3Sankey\r\n        .sankey()\r\n        .nodeWidth(this.nodeWidth)\r\n        .nodePadding(this.nodePadding)\r\n        .size([width, height])\r\n      sankey.links()\r\n      // set up graph in same style as original example but empty\r\n      const graph = sankey(linksData)\r\n      svg\r\n        .append('g')\r\n        .selectAll('#' + this.graphId + '.link')\r\n        .data(graph.links)\r\n        .enter()\r\n        .append('path')\r\n        .attr('class', 'link')\r\n        .attr('d', d3Sankey.sankeyLinkHorizontal())\r\n        .attr('stroke-width', d => d.width)\r\n        .attr('opacity', 0.2)\r\n        .on('mouseover', (evt, d) => {\r\n          const textToDisplay = this.$t(this.kViewBlock('linkMouseoverHTML'), d)\r\n          linkTooltip.html(textToDisplay).style('opacity', 1)\r\n          // highlight current one\r\n          d3.select(this).attr('opacity', 0.7)\r\n        })\r\n        .on('mouseleave', function(d) {\r\n          d3.select(this).attr('opacity', 0.2)\r\n          linkTooltip.style('opacity', 0)\r\n        })\r\n      // add in the nodes\r\n      const node = svg\r\n        .append('g')\r\n        .selectAll('#' + this.graphId + '.node')\r\n        .data(graph.nodes)\r\n        .enter()\r\n        .append('g')\r\n        .attr('class', 'node')\r\n      // add the rectangles for the nodes\r\n      node\r\n        .append('rect')\r\n        .attr('x', d => d.x0)\r\n        .attr('y', d => d.y0)\r\n        .attr('height', d => d.y1 - d.y0)\r\n        .attr('width', sankey.nodeWidth())\r\n        .style('fill', d => (d.color = color(d.name.slice(0, -1))))\r\n        .style('stroke', function(d) {\r\n          return d3.rgb(d.color).darker(1)\r\n        })\r\n      node\r\n        .on('mouseover', (evt, d) => {\r\n          const textToDisplay = this.$t(this.kViewBlock('nodeMouseoverHTML'), {\r\n            name: d.name.slice(0, -1),\r\n            value: d.value,\r\n            fromTo: this.$t(this.kViewBlock(d.name.slice(-1) === 's' ? 'from' : 'to'))\r\n          })\r\n          // const x = d.x1 // (d.x0 + d.x1) / 2\r\n          // const tooltipWidth = tooltip.node().getBoundingClientRect().width\r\n          // const tooltipHeight = tooltip.node().getBoundingClientRect().height\r\n          // const mapWidth = svg.node().getBoundingClientRect().width\r\n          const labelHeight = linkTooltip.node().getBoundingClientRect().height\r\n          tooltip\r\n            .html(textToDisplay)\r\n            .style('left', d.x1 + margin.left + 8 + 'px')\r\n            .style('top', d.y0 + labelHeight + 35 + 'px')\r\n          tooltip.style('opacity', 1)\r\n          // highlight current node\r\n          d3.select(this).attr('opacity', 0.7)\r\n          // Fade all the links.\r\n          d3.selectAll('#' + this.graphId + '.link').attr('opacity', 0.2)\r\n          // Then highlight only those that are linked to the current node.\r\n          svg\r\n            .selectAll('#' + this.graphId + '.link')\r\n            .filter(link => d.index === link.source.index || d.index === link.target.index)\r\n            .attr('opacity', 0.7)\r\n        })\r\n        .on('mouseleave', function(d) {\r\n          d3.selectAll('#' + this.graphId + '.link').attr('opacity', 0.2)\r\n          d3.select(this).attr('opacity', 1)\r\n          tooltip.style('opacity', 0)\r\n        })\r\n      // add in the title for the nodes\r\n      if (this.displayLinksLabels) {\r\n        node\r\n          .append('text')\r\n          .attr('x', d => d.x1 + 6)\r\n          .attr('y', d => (d.y1 + d.y0) / 2)\r\n          .attr('dy', '0.35em')\r\n          .attr('text-anchor', 'start')\r\n          .text((d) => {\r\n            let name = d.name.split(',')[0]\r\n            if (name.length > 20) {\r\n              name = name.slice(0, 20) + '..'\r\n            }\r\n            return name\r\n          })\r\n          .filter(d => d.x0 < width / 2)\r\n          .attr('x', d => d.x0 - 6)\r\n          .attr('text-anchor', 'end')\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n::v-deep body {\r\n  font-family: 'Roboto';\r\n  color: #22313f;\r\n}\r\n\r\n::v-deep .node rect {\r\n  fill-opacity: 0.9;\r\n  shape-rendering: crispEdges;\r\n}\r\n\r\n::v-deep .node text {\r\n  pointer-events: none;\r\n  text-shadow: 0 1px 0 #fff;\r\n}\r\n\r\n::v-deep .link {\r\n  fill: none;\r\n  stroke: rgb(87, 86, 87);\r\n}\r\n\r\n::v-deep .label {\r\n  font-size: 1.1rem;\r\n  font-weight: bold;\r\n}\r\n\r\n::v-deep .tooltip {\r\n  font-size: 0.7rem;\r\n  background-color: white;\r\n  border: solid white;\r\n  border-width: 2px;\r\n  border-radius: 5px;\r\n  text-align: left;\r\n  padding: 5px;\r\n  position: absolute;\r\n  width: 150px;\r\n  pointer-events: none;\r\n  webkit-box-shadow: 0px 0px 10px grey;\r\n  moz-box-shadow: 0px 0px 10px grey;\r\n  box-shadow: 0px 0px 10px grey;\r\n}\r\n::v-deep .tooltip:before {\r\n  content: '';\r\n  display: block;\r\n  width: 0;\r\n  height: 0;\r\n  position: absolute;\r\n  border-top: 8px solid transparent;\r\n  border-bottom: 8px solid transparent;\r\n  border-right: 8px solid white;\r\n  left: -9px;\r\n  top: 7px;\r\n}\r\n</style>\r\n","import mod from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewSankey.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewSankey.vue?vue&type=script&lang=js&\"","// extracted by mini-css-extract-plugin\nexport {};","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-12.use[0]!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-12.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-12.use[2]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewSankey.vue?vue&type=style&index=0&id=654c5e13&prod&scoped=true&lang=css&\"","import { render, staticRenderFns } from \"./ChartViewSankey.vue?vue&type=template&id=654c5e13&scoped=true&\"\nimport script from \"./ChartViewSankey.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewSankey.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ChartViewSankey.vue?vue&type=style&index=0&id=654c5e13&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"654c5e13\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('VRow',_vm._b({ref:\"domToImageNode\"},'VRow',_vm.$attrs,false),[_vm._t(\"default\"),_c('VCol',{staticClass:\"dom-to-image-exclude\",attrs:{\"cols\":\"12\"}},[_c('BaseButton',_vm._b({attrs:{\"icon\":\"mdiExport\",\"text\":\"Export\"},on:{\"click\":_vm.exportImage}},'BaseButton',{ progress: _vm.progress, status: _vm.status, error: _vm.error },false)),_c('BaseButtonDownloadData',_vm._b({},'BaseButtonDownloadData',{ disabled: !_vm.blob, extension: _vm.extension, filename: _vm.filename, data: _vm.blob },false)),_c('BaseButtonShare',_vm._b({attrs:{\"file-share\":\"\"}},'BaseButtonShare',{ files: _vm.files, disabled: !_vm.files },false))],1)],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <VRow ref=\"domToImageNode\" v-bind=\"$attrs\">\r\n    <slot />\r\n    <VCol cols=\"12\" class=\"dom-to-image-exclude\">\r\n      <BaseButton\r\n        icon=\"mdiExport\"\r\n        text=\"Export\"\r\n        v-bind=\"{ progress, status, error }\"\r\n        @click=\"exportImage\"\r\n      />\r\n      <BaseButtonDownloadData\r\n        v-bind=\"{ disabled: !blob, extension, filename, data: blob }\"\r\n      />\r\n      <BaseButtonShare file-share v-bind=\"{ files, disabled: !files }\" />\r\n    </VCol>\r\n  </VRow>\r\n</template>\r\n\r\n<script>\r\nimport exportImageMixinFactory from '@/mixins/export-image-mixin-factory'\r\nimport BaseButton from '@/components/base/button/BaseButton.vue'\r\nimport BaseButtonDownloadData from '@/components/base/button/download/BaseButtonDownloadData.vue'\r\nimport BaseButtonShare from '@/components/base/button/BaseButtonShare.vue'\r\n\r\nexport default {\r\n  components: { BaseButton, BaseButtonDownloadData, BaseButtonShare },\r\n  mixins: [exportImageMixinFactory()]\r\n}\r\n</script>\r\n","import mod from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewVRowWebShare.vue?vue&type=template&id=53512c70&\"\nimport script from \"./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","export default function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n}\n","export {default as nest} from \"./nest\";\nexport {default as set} from \"./set\";\nexport {default as map} from \"./map\";\nexport {default as keys} from \"./keys\";\nexport {default as values} from \"./values\";\nexport {default as entries} from \"./entries\";\n","import { TextFilterWidget } from 'dc'\r\nimport { merge } from 'lodash-es'\r\n\r\nimport kViewBlockMixin from '@/mixins/k-view-block'\r\n\r\nconst mixin = {\r\n  props: {\r\n    values: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    headers: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    messages: {\r\n      type: Object,\r\n      default: () => ({})\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      graphId: 'graph_' + this.$store.state.xp.currentTab,\r\n      totalCount: 0,\r\n      filterCount: 0\r\n    }\r\n  },\r\n  mounted() {\r\n    this.drawViz()\r\n  },\r\n  watch: {\r\n    values() {\r\n      this.drawViz()\r\n    }\r\n  },\r\n  methods: {\r\n    drawViz() { },\r\n    createTextFilterWidget(parent, placeholder = 'Search') {\r\n      const widget = new TextFilterWidget(parent)\r\n      widget.placeHolder(this.$tev(placeholder, placeholder))\r\n      return widget\r\n    }\r\n  }\r\n}\r\n\r\nexport default merge(mixin, kViewBlockMixin)\r\n"],"names":[],"sourceRoot":""}