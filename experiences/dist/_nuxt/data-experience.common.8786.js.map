{"version":3,"file":"data-experience.common.8786.js","mappings":";;;;;;;;;;;;;;;AAAA,+BAA+B,6BAA6B,oDAAoD,OAAO,YAAY,aAAa,OAAO,YAAY,aAAa,OAAO,YAAY,aAAa,OAAO,aAAa,YAAY,OAAO,uCAAuC,aAAa,yCAAyC,kDAAkD,uCAAuC,iCAAiC,kCAAkC,0DAA0D,OAAO,YAAY,aAAa,OAAO,YAAY,YAAY,OAAO,iCAAiC,aAAa,aAAa,wEAAwE,iCAAiC,0CAA0C,OAAO,YAAY,YAAY,OAAO,iCAAiC,aAAa,yCAAyC,2CAA2C,kDAAkD,OAAO,YAAY,YAAY,OAAO,oCAAoC,aAAa,yCAAyC,oDAAoD,+DAA+D,OAAO,YAAY,aAAa,OAAO,YAAY,YAAY,OAAO,iCAAiC,aAAa,yCAAyC,gDAAgD,0CAA0C,OAAO,YAAY,YAAY,OAAO,oCAAoC,aAAa,yCAAyC,+CAA+C,0CAA0C,OAAO,YAAY,YAAY,OAAO,mCAAmC,aAAa,yCAAyC,8CAA8C,wDAAwD,mCAAmC,oCAAoC,sCAAsC,yBAAyB,yCAAyC;AAC/mE;AACA;;;;;;;;;;;;;;;;;;;;;AC+DwB;AACA;AACc;AACX;AACoC;AACmB;AACrB;AAC+B;;AAE5F;AACA,uBAAuB,CAAC,yBAAe;;AAEvC,qFAAe;AACf,qCAAqC,gEAA8B,2DAAkB,kDAAqB;AAC1G,WAAW,gBAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,sBAAY;AAC3C,yBAAyB,uBAAa;AACtC,2BAA2B,mBAAS;AACpC;AACA;AACA;AACA;AACA;AACA,kBAAkB,sBAAY;AAC9B;AACA,iBAAiB,qBAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,uBAAW;AAC7B;AACA;AACA,6BAA6B,YAAY;AACzC,6BAA6B,WAAW;AACxC,4BAA4B,WAAW;AACvC,+BAA+B,WAAW;AAC1C,+BAA+B,WAAW;AAC1C,4BAA4B,WAAW;AACvC,8BAA8B,WAAW;AACzC,4BAA4B,WAAW;AACvC,6BAA6B,YAAY;AACzC;AACA,MAAM,kBAAS;AACf;AACA;AACA,QAAQ,YAAY;AACpB;AACA,MAAM,kBAAS;AACf;AACA,QAAQ,YAAY;AACpB;AACA,MAAM,kBAAS;AACf;AACA,QAAQ,YAAY;AACpB;AACA,MAAM,kBAAS;AACf;AACA,QAAQ,YAAY;AACpB;AACA,MAAM,kBAAS;AACf;AACA,QAAQ,YAAY;AACpB;AACA,MAAM,kBAAS;AACf;AACA,QAAQ,YAAY;AACpB;AACA,MAAM,kBAAS;AACf;AACA,QAAQ,YAAY;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBACH;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,2BAAiB;AAChC,WAAW,qBACS;AACpB;AACA,YAAY,mCAAkB;AAC9B,YAAY,mCAAkB;AAC9B;AACA,WAAW,wBAAc;AACzB;AACA;AACA;AACA,gBAAgB,qBAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBACS;AACpB;AACA,YAAY,mCAAkB;AAC9B,YAAY,mCAAkB;AAC9B;AACA,eAAe,gCAAgB;AAC/B;AACA;AACA,gBAAgB,qBAAW;AAC3B;AACA;AACA;AACA;AACA,cAAc,kBACC;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,kBAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,yBAAyB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,kBACC;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,kBACC;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBACE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wBAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,kBACC;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,kBACC;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,kBAAS;AACnB,YAAY,YAAY;AACxB,YAAY,YAAY;AACxB;AACA;AACA,MAAM,YAAY;AAClB;AACA;AACA,CAAC;;;AC3byJ,CAAC,0FAAe,gDAAG,EAAC;;;;ACAvE;AAC3B;AACL;;;AAGvE;AACA,CAAyG;AACzG,gBAAgB,sCAAU;AAC1B,EAAE,qDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,6DAAe;;;;;;;;;;;;;;;;AClBf,+BAA+B,6BAA6B,yBAAyB,qBAAqB,wDAAwD,0CAA0C,aAAa,0BAA0B,OAAO,mCAAmC,KAAK,yBAAyB,gBAAgB,8DAA8D,8CAA8C,4BAA4B,uFAAuF,sCAAsC,OAAO,iBAAiB,qBAAqB,wCAAwC;AACrqB;AACA;;;;;;;;;;;;;ACiByE;AACT;AACiC;AACvB;;AAE1E,kFAAe;AACf,0BAA0B,mDAAwB,wDAAiB;AACnE,WAAW,6CAAuB;AAClC,CAAC;;;AC3BsJ,CAAC,uFAAe,6CAAG,EAAC;;;;ACAvE;AAC3B;AACL;;;AAGpE;AACA,CAAyG;AACzG,gBAAgB,sCAAU;AAC1B,EAAE,kDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,0DAAe;;;;;;;;;;;;;;;;AClBf,+BAA+B,6BAA6B,eAAe,sBAAsB,yEAAyE,qBAAqB,YAAY,aAAa,4DAA4D,mCAAmC,kBAAkB;AACzU;AACA;;;;;ACSA,6EAAe;;AAEf,CAAC;;;ACboJ,CAAC,qFAAe,wCAAG,EAAC;;;;ACA1E;AAC3B;AACL;;;AAG/D;AACA,CAA4G;AAC5G,gBAAgB,sCAAU;AAC1B,EAAE,gDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,qDAAe;;;;;;;;;;;;;;;;AClBf,+BAA+B,6BAA6B,eAAe,yDAAyD,aAAa,UAAU,iDAAiD;AAC5M;AACA;;;;;;ACF2G;AAC3G;;;AAGA;AACA,CAA4G;AAC5G,gBAAgB,sCAAU;AAC1B;AACA,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe;;;;;;;;;;;;ACjBsB;AACJ;AACjC;AACmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB;AACxB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,iBAAiB;AACjB;AACA,yBAAyB,gDAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,+DAAe,8DAAK,QAAQ,qEAAe,CAAC","sources":["webpack://data-experience/./src/components/chart/view/ChartViewOverviewNetflix.vue?2a57","webpack://data-experience/src/components/chart/view/ChartViewOverviewNetflix.vue","webpack://data-experience/./src/components/chart/view/ChartViewOverviewNetflix.vue?3a62","webpack://data-experience/./src/components/chart/view/ChartViewOverviewNetflix.vue","webpack://data-experience/./src/components/chart/view/ChartViewVRowWebShare.vue?ea0d","webpack://data-experience/src/components/chart/view/ChartViewVRowWebShare.vue","webpack://data-experience/./src/components/chart/view/ChartViewVRowWebShare.vue?2101","webpack://data-experience/./src/components/chart/view/ChartViewVRowWebShare.vue","webpack://data-experience/./src/components/chart/view/filters/ChartViewFilters.vue?cff0","webpack://data-experience/src/components/chart/view/filters/ChartViewFilters.vue","webpack://data-experience/./src/components/chart/view/filters/ChartViewFilters.vue?e912","webpack://data-experience/./src/components/chart/view/filters/ChartViewFilters.vue","webpack://data-experience/./src/components/chart/view/text/ChartViewTextSelectTimeRange.vue?13ad","webpack://data-experience/./src/components/chart/view/text/ChartViewTextSelectTimeRange.vue","webpack://data-experience/./src/components/chart/view/mixin.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('VContainer',[_c('ChartViewVRowWebShare',{attrs:{\"dense\":\"\"}},[_c('VCol',{attrs:{\"cols\":\"8\"}},[_c('VRow',{attrs:{\"dense\":\"\"}},[_c('VCol',{attrs:{\"cols\":\"12\"}},[_c('div',{attrs:{\"id\":'watch-time-chart' + _vm.graphId}},[_c('span',{staticClass:\"font-weight-bold\",domProps:{\"textContent\":_vm._s(_vm.messages['watch-time'])}}),_c('ChartViewFilters')],1),_c('div',{staticClass:\"range-chart\",attrs:{\"id\":'range-chart' + _vm.graphId}},[_c('ChartViewTextSelectTimeRange')],1)])],1),_c('VRow',{attrs:{\"dense\":\"\"}},[_c('VCol',{attrs:{\"cols\":\"8\"}},[_c('div',{attrs:{\"id\":'hour-chart' + _vm.graphId}},[_c('span',{directives:[{name:\"t\",rawName:\"v-t\",value:('time-of-day'),expression:\"'time-of-day'\"}],staticClass:\"font-weight-bold\"}),_c('ChartViewFilters')],1)]),_c('VCol',{attrs:{\"cols\":\"4\"}},[_c('div',{attrs:{\"id\":'week-chart' + _vm.graphId}},[_c('span',{staticClass:\"font-weight-bold\",domProps:{\"textContent\":_vm._s(_vm.messages['day'])}}),_c('ChartViewFilters')],1)])],1)],1),_c('VCol',{attrs:{\"cols\":\"4\"}},[_c('div',{attrs:{\"id\":'content-chart' + _vm.graphId}},[_c('span',{staticClass:\"font-weight-bold\",domProps:{\"textContent\":_vm._s(_vm.messages['most-watched'])}}),_c('ChartViewFilters')],1)])],1),_c('ChartViewVRowWebShare',{attrs:{\"dense\":\"\"}},[_c('VCol',{attrs:{\"cols\":\"4\"}},[_c('div',{attrs:{\"id\":'user-chart' + _vm.graphId}},[_c('span',{staticClass:\"font-weight-bold\",domProps:{\"textContent\":_vm._s(_vm.messages['Profiles'])}}),_c('ChartViewFilters')],1)]),_c('VCol',{attrs:{\"cols\":\"4\"}},[_c('div',{attrs:{\"id\":'country-chart' + _vm.graphId}},[_c('span',{staticClass:\"font-weight-bold\",domProps:{\"textContent\":_vm._s(_vm.messages['country'])}}),_c('ChartViewFilters')],1)]),_c('VCol',{attrs:{\"cols\":\"4\"}},[_c('div',{attrs:{\"id\":'device-chart' + _vm.graphId}},[_c('span',{staticClass:\"font-weight-bold\",domProps:{\"textContent\":_vm._s(_vm.messages['device'])}}),_c('ChartViewFilters')],1)])],1),_c('VRow',[_c('div',{staticClass:\"dc-data-count\",attrs:{\"id\":'dc-data-count' + _vm.graphId}})]),_c('UnitFilterableTable',_vm._b({},'UnitFilterableTable',{ headers: _vm.header, items: _vm.results },false))],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <VContainer>\r\n    <ChartViewVRowWebShare dense>\r\n      <VCol cols=\"8\">\r\n        <VRow dense>\r\n          <VCol cols=\"12\">\r\n            <div :id=\"'watch-time-chart' + graphId\">\r\n              <span class=\"font-weight-bold\" v-text=\"messages['watch-time']\" />\r\n              <ChartViewFilters />\r\n            </div>\r\n            <div :id=\"'range-chart' + graphId\" class=\"range-chart\">\r\n              <ChartViewTextSelectTimeRange />\r\n            </div>\r\n          </VCol>\r\n        </VRow>\r\n        <VRow dense>\r\n          <VCol cols=\"8\">\r\n            <div :id=\"'hour-chart' + graphId\">\r\n              <span v-t=\"'time-of-day'\" class=\"font-weight-bold\" />\r\n              <ChartViewFilters />\r\n            </div>\r\n          </VCol>\r\n          <VCol cols=\"4\">\r\n            <div :id=\"'week-chart' + graphId\">\r\n              <span class=\"font-weight-bold\" v-text=\"messages['day']\" />\r\n              <ChartViewFilters />\r\n            </div>\r\n          </VCol>\r\n        </VRow>\r\n      </VCol>\r\n      <VCol cols=\"4\">\r\n        <div :id=\"'content-chart' + graphId\">\r\n          <span class=\"font-weight-bold\" v-text=\"messages['most-watched']\" />\r\n          <ChartViewFilters />\r\n        </div>\r\n      </VCol>\r\n    </ChartViewVRowWebShare>\r\n    <ChartViewVRowWebShare dense>\r\n      <VCol cols=\"4\">\r\n        <div :id=\"'user-chart' + graphId\">\r\n          <span class=\"font-weight-bold\" v-text=\"messages['Profiles']\" />\r\n          <ChartViewFilters />\r\n        </div>\r\n      </VCol>\r\n      <VCol cols=\"4\">\r\n        <div :id=\"'country-chart' + graphId\">\r\n          <span class=\"font-weight-bold\" v-text=\"messages['country']\" />\r\n          <ChartViewFilters />\r\n        </div>\r\n      </VCol>\r\n      <VCol cols=\"4\">\r\n        <div :id=\"'device-chart' + graphId\">\r\n          <span class=\"font-weight-bold\" v-text=\"messages['device']\" />\r\n          <ChartViewFilters />\r\n        </div>\r\n      </VCol>\r\n    </ChartViewVRowWebShare>\r\n    <VRow>\r\n      <div :id=\"'dc-data-count' + graphId\" class=\"dc-data-count\" />\r\n    </VRow>\r\n    <UnitFilterableTable v-bind=\"{ headers: header, items: results }\" />\r\n  </VContainer>\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from 'd3'\r\nimport * as dc from 'dc'\r\nimport crossfilter from 'crossfilter2'\r\nimport mixin from './mixin'\r\nimport ChartViewVRowWebShare from './ChartViewVRowWebShare.vue'\r\nimport ChartViewTextSelectTimeRange from './text/ChartViewTextSelectTimeRange.vue'\r\nimport ChartViewFilters from './filters/ChartViewFilters.vue'\r\nimport UnitFilterableTable from '@/components/unit/filterable-table/UnitFilterableTable.vue'\r\n\r\n// Remove warning on default colorscheme, even if not used..\r\ndc.config.defaultColors(d3.schemePaired)\r\n\r\nexport default {\r\n  components: { ChartViewVRowWebShare, ChartViewTextSelectTimeRange, ChartViewFilters, UnitFilterableTable },\r\n  mixins: [mixin],\r\n  data() {\r\n    return {\r\n      header: [\r\n        { text: 'Date', value: 'startTime' },\r\n        { text: 'Duration', value: 'duration' },\r\n        { text: 'Content', value: 'title' },\r\n        { text: 'User', value: 'profileName' },\r\n        { text: 'Country', value: 'country' }\r\n      ],\r\n      results: []\r\n    }\r\n  },\r\n  methods: {\r\n    k(key) {\r\n      return `chart-view.overview-netflix.${key}`\r\n    },\r\n    removeEmptyBins(group) {\r\n      return {\r\n        top(n) {\r\n          return group\r\n            .top(Infinity)\r\n            .filter(function(d) {\r\n              return d.value.count !== 0 && d.value !== 0\r\n            })\r\n            .slice(0, n)\r\n        },\r\n        all() {\r\n          return group.all()\r\n        }\r\n      }\r\n    },\r\n    drawViz() {\r\n      const colorPalette = [\r\n        '#7570b3',\r\n        // '#371D52',\r\n        // '#35334A',\r\n        '#6652A1',\r\n        '#859ED5',\r\n        '#CC94F2',\r\n        '#9A5BD9',\r\n        '#6F36BF',\r\n        '#3F1973',\r\n        '#58539E'\r\n      ]\r\n      // Format data to correct types 2021-09-19 22:58:12\r\n      const dateFormatParser = d3.timeParse('%Y-%m-%d %H:%M:%S')\r\n      const formatTime = d3.timeFormat('%B %d, %Y')\r\n      const formatNumber = d3.format('.1f')\r\n      // Keeps only movies and tv shows (not trailer etc..)\r\n      this.results = this.values.filter(d => d.supplementalVideoType === '')\r\n      this.results.forEach((d) => {\r\n        const time = d.duration.split(':')\r\n        d.date = dateFormatParser(d.startTime)\r\n        d.month = d3.timeMonth(d.date) // pre-calculate months for better performance\r\n        d.dateStr = formatTime(d.day)\r\n        d.hour = d3.timeHour(d.date).getHours()\r\n        const title = d.title.split(':')\r\n        d.content = title[0].includes('HIDDEN TITLE') ? title[1] : title[0]\r\n        d.device = d.deviceType === '' ? 'Unknown' : d.deviceType\r\n        d.durationHour = +time[0] + +time[1] / 60 + +time[2] / 60 / 60\r\n        d.user = d.profileName\r\n      })\r\n      // Create crossfilter indexing\r\n      const ndx = crossfilter(this.results)\r\n      const all = ndx.groupAll()\r\n      // Create and bind charts to their respective divs\r\n      const watchChart = new dc.LineChart('#watch-time-chart' + this.graphId)\r\n      const rangeChart = new dc.BarChart('#range-chart' + this.graphId)\r\n      const userChart = new dc.PieChart('#user-chart' + this.graphId)\r\n      const countryChart = new dc.RowChart('#country-chart' + this.graphId)\r\n      const contentChart = new dc.RowChart('#content-chart' + this.graphId)\r\n      const weekChart = new dc.RowChart('#week-chart' + this.graphId)\r\n      const deviceChart = new dc.RowChart('#device-chart' + this.graphId)\r\n      const hourChart = new dc.BarChart('#hour-chart' + this.graphId)\r\n      const tableCount = new dc.DataCount('#dc-data-count' + this.graphId)\r\n      // Bind reset filters links\r\n      d3.select('#watch-time-chart' + this.graphId + ' a.reset').on('click', function() {\r\n        rangeChart.filterAll()\r\n        watchChart.filterAll()\r\n        dc.redrawAll()\r\n      })\r\n      d3.select('#user-chart' + this.graphId + ' a.reset').on('click', function() {\r\n        userChart.filterAll()\r\n        dc.redrawAll()\r\n      })\r\n      d3.select('#country-chart' + this.graphId + ' a.reset').on('click', function() {\r\n        countryChart.filterAll()\r\n        dc.redrawAll()\r\n      })\r\n      d3.select('#content-chart' + this.graphId + ' a.reset').on('click', function() {\r\n        contentChart.filterAll()\r\n        dc.redrawAll()\r\n      })\r\n      d3.select('#week-chart' + this.graphId + ' a.reset').on('click', function() {\r\n        weekChart.filterAll()\r\n        dc.redrawAll()\r\n      })\r\n      d3.select('#device-chart' + this.graphId + ' a.reset').on('click', function() {\r\n        deviceChart.filterAll()\r\n        dc.redrawAll()\r\n      })\r\n      d3.select('#hour-chart' + this.graphId + ' a.reset').on('click', function() {\r\n        hourChart.filterAll()\r\n        dc.redrawAll()\r\n      })\r\n      // Create dimensions\r\n      const monthDimension = ndx.dimension(d => d.month)\r\n      // const typeDimension = ndx.dimension(d => d.type)\r\n      const userDimension = ndx.dimension(d => d.user)\r\n      const deviceDimension = ndx.dimension(d => d.device)\r\n      const contentDimension = ndx.dimension(d => d.content)\r\n      const countryDimension = ndx.dimension(d => d.country)\r\n      const hourDimension = ndx.dimension(d => d.hour)\r\n      const weekDimension = ndx.dimension((d) => {\r\n        const day = d.date.getDay()\r\n        const name = this.$days()\r\n        return `${name[day]}`\r\n      })\r\n      // Create groups from dimension\r\n      const monthGroup = monthDimension.group().reduceSum(d => d.durationHour)\r\n      // const typeGroup = typeDimension.group().reduceSum(d => d.duration)\r\n      const userGroup = userDimension.group().reduceSum(d => d.durationHour)\r\n      const deviceGroup = deviceDimension.group().reduceSum(d => d.durationHour)\r\n      const contentGroup = contentDimension.group().reduceSum(d => d.durationHour)\r\n      const countryGroup = countryDimension.group().reduceSum(d => d.durationHour)\r\n      const hourGroup = hourDimension.group().reduceSum(d => d.durationHour)\r\n      const weekGroup = weekDimension.group().reduceSum(d => d.durationHour)\r\n      // Render watch time line chart\r\n      const minDate = monthDimension.bottom(1)[0].date\r\n      const maxDate = monthDimension.top(1)[0].date\r\n      const maxValue = monthGroup.top(1)[0].value + 2\r\n      let width = d3\r\n        .select('#watch-time-chart' + this.graphId)\r\n        .node()\r\n        .getBoundingClientRect().width\r\n      let height = 150\r\n      watchChart\r\n        .renderArea(true)\r\n        .width(width)\r\n        .height(height)\r\n        .transitionDuration(1000)\r\n        .margins({ top: 20, right: 50, bottom: 25, left: 40 })\r\n        .group(monthGroup)\r\n        .dimension(monthDimension)\r\n        .curve(d3.curveMonotoneX)\r\n        .x(d3\r\n          .scaleTime()\r\n          .domain([\r\n            d3.timeHour.offset(minDate, 0),\r\n            d3.timeHour.offset(maxDate, 2)\r\n          ]))\r\n        .y(d3.scaleLinear().domain([0, maxValue]))\r\n        .ordinalColors([colorPalette[1]])\r\n        .valueAccessor(d => d.value)\r\n        .title(d => formatTime(d.key) + ': ' + formatNumber(d.value) + ' hours watched')\r\n        .xUnits(d3.timeHour)\r\n        .brushOn(false)\r\n        .elasticX(false)\r\n        .elasticY(true)\r\n        .xyTipsOn(true)\r\n        .mouseZoomable(false)\r\n        .rangeChart(rangeChart)\r\n        .renderHorizontalGridLines(false)\r\n      // .dashStyle([3,1,1,1])\r\n        .renderDataPoints({\r\n          radius: 3,\r\n          fillOpacity: 0.8,\r\n          strokeOpacity: 0\r\n        })\r\n        .yAxisLabel('Hours watched')\r\n        .clipPadding(10)\r\n      // .xAxisLabel(\"Date\")\r\n        .yAxis()\r\n        .ticks(5)\r\n      watchChart.xAxis().ticks(5)\r\n      // range chart date picker\r\n      rangeChart\r\n        .width(width)\r\n        .height(30)\r\n        .margins({ top: 0, right: 50, bottom: 20, left: 40 })\r\n        .dimension(monthDimension)\r\n        .group(monthGroup)\r\n        .centerBar(true)\r\n        .elasticY(true)\r\n        .gap(1)\r\n        .x(d3\r\n          .scaleTime()\r\n          .domain([\r\n            d3.timeHour.offset(minDate, 0),\r\n            d3.timeHour.offset(maxDate, 2)\r\n          ]))\r\n        .round(d3.timeDay.round)\r\n        .valueAccessor(d => d.value)\r\n        .alwaysUseRounding(true)\r\n        .xUnits(d3.timeDays)\r\n        .ordinalColors(colorPalette)\r\n        .yAxis()\r\n        .ticks(0)\r\n      // Render user pie chart\r\n      width = d3\r\n        .select('#user-chart' + this.graphId)\r\n        .node()\r\n        .getBoundingClientRect().width\r\n      height = 250\r\n      const scale = Math.min(width, height)\r\n      userChart\r\n        .width(width)\r\n        .height(height)\r\n        .slicesCap(10)\r\n        .radius(scale / 4)\r\n        .innerRadius(scale / 8)\r\n        .externalLabels(50)\r\n        .dimension(userDimension)\r\n        .group(userGroup)\r\n        .valueAccessor(d => d.value)\r\n        .title(d => d.key + ': ' + formatNumber(d.value) + ' hours watched')\r\n        .drawPaths(true)\r\n        .minAngleForLabel(0.1)\r\n        .ordinalColors(colorPalette)\r\n      userChart.on('pretransition', function(chart) {\r\n        chart.selectAll('text.pie-slice.pie-label').call(function(t) {\r\n          t.each(function(d) {\r\n            const self = d3.select(this)\r\n            let text = self.text()\r\n            if (text.length > 14) {\r\n              text = text.substring(0, 14) + '.. '\r\n            }\r\n            if (text.length > 0) {\r\n              text =\r\n                                text +\r\n                                    ' (' +\r\n                                    dc.utils.printSingleValue(((d.endAngle - d.startAngle) / (2 * Math.PI)) * 100) +\r\n                                    '%)'\r\n            }\r\n            self.text(text)\r\n          })\r\n        })\r\n      })\r\n      // Render country row chart\r\n      width = d3\r\n        .select('#country-chart' + this.graphId)\r\n        .node()\r\n        .getBoundingClientRect().width\r\n      height = 200\r\n      countryChart\r\n        .width(width)\r\n        .height(height)\r\n        .margins({ top: 20, left: 10, right: 10, bottom: 20 })\r\n        .group(countryGroup)\r\n        .dimension(countryDimension)\r\n        .ordinalColors(colorPalette)\r\n        .valueAccessor(d => d.value)\r\n        .label(d => d.key)\r\n        .data(group => group.top(10))\r\n      // .labelOffsetX(0)\r\n        .title(d => d.key + ': ' + formatNumber(d.value) + ' hours watched')\r\n        .elasticX(true)\r\n        .xAxis()\r\n        .ticks(4)\r\n      // Render day of week row chart\r\n      width = d3\r\n        .select('#week-chart' + this.graphId)\r\n        .node()\r\n        .getBoundingClientRect().width\r\n      height = 150\r\n      weekChart\r\n        .width(width)\r\n        .height(height)\r\n        .margins({ top: 20, left: 10, right: 10, bottom: 20 })\r\n        .group(weekGroup)\r\n        .dimension(weekDimension)\r\n        .valueAccessor(d => d.value)\r\n        .ordinalColors(colorPalette)\r\n        .label(d => d.key)\r\n        .title(d => formatNumber(d.value) + ' hours watched')\r\n        .elasticX(true)\r\n        .xAxis()\r\n        .ticks(4)\r\n      weekChart.ordering(d => this.$days().indexOf(d.key))\r\n      // Render hour bar chart\r\n      hourChart\r\n        .width(d3\r\n          .select('#hour-chart' + this.graphId)\r\n          .node()\r\n          .getBoundingClientRect().width)\r\n        .height(150)\r\n        .margins({ top: 20, right: 10, bottom: 20, left: 40 })\r\n        .dimension(hourDimension)\r\n        .group(hourGroup)\r\n        .valueAccessor(d => d.value)\r\n        .centerBar(false)\r\n        .gap(1)\r\n        .x(d3.scaleLinear().domain([0, 24]))\r\n        .ordinalColors(colorPalette)\r\n        .yAxisLabel('Hours watched')\r\n        .yAxis()\r\n        .ticks(5)\r\n      hourChart\r\n        .xAxis()\r\n        .tickFormat(d => d + ':00')\r\n        .ticks(7)\r\n      // Render content row chart\r\n      width = d3\r\n        .select('#content-chart' + this.graphId)\r\n        .node()\r\n        .getBoundingClientRect().width\r\n      height = 420\r\n      contentChart\r\n        .width(width)\r\n        .height(height)\r\n        .margins({ top: 20, left: 10, right: 10, bottom: 20 })\r\n        .group(contentGroup)\r\n        .dimension(contentDimension)\r\n        .ordinalColors([colorPalette[0]])\r\n        .valueAccessor(d => d.value)\r\n        .title(d => d.key + ': ' + formatNumber(d.value) + ' hours watched')\r\n        .label(d => d.key)\r\n        .data(group => group.top(20))\r\n      // .labelOffsetX(0)\r\n        .elasticX(true)\r\n        .xAxis()\r\n        .ticks(4)\r\n      // Render device row chart\r\n      width = d3\r\n        .select('#device-chart' + this.graphId)\r\n        .node()\r\n        .getBoundingClientRect().width\r\n      height = 200\r\n      deviceChart\r\n        .width(width)\r\n        .height(height)\r\n        .margins({ top: 20, left: 10, right: 10, bottom: 20 })\r\n        .group(this.removeEmptyBins(deviceGroup))\r\n        .dimension(deviceDimension)\r\n        .ordinalColors([colorPalette[2]])\r\n        .valueAccessor(d => d.value)\r\n        .title(d => formatTime(d.key) + ': ' + formatNumber(d.value) + ' hours watched')\r\n        .label(d => d.key)\r\n        .data(group => group.top(10))\r\n      // .labelOffsetX(0)\r\n        .title(d => d.key + ': ' + formatNumber(d.value) + ' hours watched')\r\n        .elasticX(true)\r\n        .xAxis()\r\n        .ticks(4)\r\n      // Render counter and table\r\n      tableCount\r\n        .crossfilter(ndx)\r\n        .groupAll(all)\r\n        .html({\r\n          some: `<strong>%filter-count</strong> ${this.$t('selected-out-of')} <strong>%total-count</strong> ` +\r\n                    `${this.$t(this.k('views'))} | <a class='resetAll'>${this.$t('Reset All')}</a>`,\r\n          all: `Total: <strong>%total-count</strong> ${this.$t(this.k('views'))}. ${this.$t('click-graph')}`\r\n        })\r\n        .on('pretransition', (chart, filter) => {\r\n          this.results = monthDimension.top(all.value())\r\n          d3.select('#dc-data-count' + this.graphId + ' a.resetAll').on('click', () => {\r\n            dc.filterAll()\r\n            dc.renderAll()\r\n          })\r\n        })\r\n      dc.renderAll()\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewOverviewNetflix.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewOverviewNetflix.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewOverviewNetflix.vue?vue&type=template&id=530fc662&\"\nimport script from \"./ChartViewOverviewNetflix.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewOverviewNetflix.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('VRow',_vm._b({ref:\"domToImageNode\"},'VRow',_vm.$attrs,false),[_vm._t(\"default\"),_c('VCol',{staticClass:\"dom-to-image-exclude\",attrs:{\"cols\":\"12\"}},[_c('BaseButton',_vm._b({attrs:{\"icon\":\"mdiExport\",\"text\":\"Export\"},on:{\"click\":_vm.exportImage}},'BaseButton',{ progress: _vm.progress, status: _vm.status, error: _vm.error },false)),_c('BaseButtonDownloadData',_vm._b({},'BaseButtonDownloadData',{ disabled: !_vm.blob, extension: _vm.extension, filename: _vm.filename, data: _vm.blob },false)),_c('BaseButtonShare',_vm._b({attrs:{\"file-share\":\"\"}},'BaseButtonShare',{ files: _vm.files, disabled: !_vm.files },false))],1)],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <VRow ref=\"domToImageNode\" v-bind=\"$attrs\">\r\n    <slot />\r\n    <VCol cols=\"12\" class=\"dom-to-image-exclude\">\r\n      <BaseButton\r\n        icon=\"mdiExport\"\r\n        text=\"Export\"\r\n        v-bind=\"{ progress, status, error }\"\r\n        @click=\"exportImage\"\r\n      />\r\n      <BaseButtonDownloadData\r\n        v-bind=\"{ disabled: !blob, extension, filename, data: blob }\"\r\n      />\r\n      <BaseButtonShare file-share v-bind=\"{ files, disabled: !files }\" />\r\n    </VCol>\r\n  </VRow>\r\n</template>\r\n\r\n<script>\r\nimport exportImageMixinFactory from '@/mixins/export-image-mixin-factory'\r\nimport BaseButton from '@/components/base/button/BaseButton.vue'\r\nimport BaseButtonDownloadData from '@/components/base/button/download/BaseButtonDownloadData.vue'\r\nimport BaseButtonShare from '@/components/base/button/BaseButtonShare.vue'\r\n\r\nexport default {\r\n  components: { BaseButton, BaseButtonDownloadData, BaseButtonShare },\r\n  mixins: [exportImageMixinFactory()]\r\n}\r\n</script>\r\n","import mod from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewVRowWebShare.vue?vue&type=template&id=53512c70&\"\nimport script from \"./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('p',{staticClass:\"filters\"},[_c('span',[_vm._v(\" \"+_vm._s(_vm.$t('Current filter'))+\" \"),_c('span',{staticClass:\"filter\"})]),_c('a',{directives:[{name:\"t\",rawName:\"v-t\",value:('reset'),expression:\"'reset'\"}],staticClass:\"reset\",staticStyle:{\"display\":\"none\"}})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <p class=\"filters\">\r\n    <span>\r\n      {{ $t('Current filter') }}\r\n      <span class=\"filter\" />\r\n    </span>\r\n    <a v-t=\"'reset'\" class=\"reset\" style=\"display: none\" />\r\n  </p>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n\r\n}\r\n</script>\r\n","import mod from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewFilters.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewFilters.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewFilters.vue?vue&type=template&id=2f9280d1&\"\nimport script from \"./ChartViewFilters.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewFilters.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('p',{staticClass:\"muted pull-right text-subtitle-2 mr-4 mb-1\"},[_c('span',{domProps:{\"innerHTML\":_vm._s(_vm.$t('select-time-range'))}}),_vm._t(\"default\")],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./ChartViewTextSelectTimeRange.vue?vue&type=template&id=46f28fc2&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { TextFilterWidget } from 'dc'\r\nimport { merge } from 'lodash-es'\r\n\r\nimport kViewBlockMixin from '@/mixins/k-view-block'\r\n\r\nconst mixin = {\r\n  props: {\r\n    values: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    headers: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    messages: {\r\n      type: Object,\r\n      default: () => ({})\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      graphId: 'graph_' + this.$store.state.xp.currentTab,\r\n      totalCount: 0,\r\n      filterCount: 0\r\n    }\r\n  },\r\n  mounted() {\r\n    this.drawViz()\r\n  },\r\n  watch: {\r\n    values() {\r\n      this.drawViz()\r\n    }\r\n  },\r\n  methods: {\r\n    drawViz() { },\r\n    createTextFilterWidget(parent, placeholder = 'Search') {\r\n      const widget = new TextFilterWidget(parent)\r\n      widget.placeHolder(this.$tev(placeholder, placeholder))\r\n      return widget\r\n    }\r\n  }\r\n}\r\n\r\nexport default merge(mixin, kViewBlockMixin)\r\n"],"names":[],"sourceRoot":""}