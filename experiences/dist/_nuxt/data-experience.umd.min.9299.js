"use strict";(("undefined"!=typeof self?self:this).webpackChunkdata_experience=("undefined"!=typeof self?self:this).webpackChunkdata_experience||[]).push([[9299],{79299:function(e,t,i){i.r(t),i.d(t,{default:function(){return c}});var a=i(83068),r=i(46187),n=i(35619),l=i(4031),h=i(96963),o={name:"UnitFileExplorerViewerXlsx",components:{BaseButton:l.Z,UnitFilterableTable:h.Z},mixins:[r.Z,n.Z],data:()=>({loading:!0,error:!1,file:null,sheets:{},headers:[],items:[]}),watch:{filename:{async handler(e){await this.getContentFromFilename(e)},immediate:!0}},methods:{k:e=>`file-explorer.viewer.xlsx.${e}`,async getContentFromFilename(e){this.setLoading(!0),this.file=this.fileManager.fileDict[e];try{const e=(await(0,a.Z)(this.file,{getSheets:!0})).map((e=>e.name)),t=await Promise.all(e.map((e=>(0,a.Z)(this.file,{sheet:e}))));this.sheets=Object.fromEntries(t.map(((t,i)=>{const s=Array.from({length:Math.max(...t.map((e=>e.length)))},((e,t)=>"Column "+(t+1))),r=t.map((e=>Object.fromEntries(s.map(((t,i)=>[t,e[i]])))));return[e[i],{headers:s,items:r}]}))),this.setSheet(e[0]),this.error=!1}catch(e){this.error=!0}this.setLoading(!1)},setSheet(e){this.headers=this.sheets[e].headers,this.items=this.sheets[e].items}}},m=o,d=(0,i(1001).Z)(m,(function(){var e=this,t=e._self._c;return e.loading?t("div",{directives:[{name:"t",rawName:"v-t",value:"Loading",expression:"'Loading'"}]}):e.error?t("div",[t("p",{directives:[{name:"t",rawName:"v-t",value:e.k("errorText"),expression:"k('errorText')"}]})]):t("div",[e._l(e.sheets,(function(i,s,r){return t("BaseButton",{key:r,attrs:{text:s},on:{click:t=>e.setSheet(s)}})})),t("UnitFilterableTable",e._b({},"UnitFilterableTable",{headers:e.headers,items:e.items},!1))],2)}),[],!1,null,null,null),c=d.exports}}]);