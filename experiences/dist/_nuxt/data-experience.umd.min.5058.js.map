{"version":3,"file":"data-experience.umd.min.5058.js","mappings":"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","sources":["webpack://data-experience/./src/components/chart/view/dc/TopChart.vue?5207","webpack://data-experience/src/components/chart/view/dc/TopChart.vue","webpack://data-experience/./src/components/chart/view/dc/TopChart.vue?b9f6","webpack://data-experience/./src/components/chart/view/dc/TopChart.vue","webpack://data-experience/./src/components/chart/view/filters/ChartViewFilters.vue?cff0","webpack://data-experience/src/components/chart/view/filters/ChartViewFilters.vue","webpack://data-experience/./src/components/chart/view/filters/ChartViewFilters.vue?e912","webpack://data-experience/./src/components/chart/view/filters/ChartViewFilters.vue","webpack://data-experience/./src/components/chart/view/dc/mixin.js","webpack://data-experience/./src/components/chart/view/utils/dc-helpers.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('VContainer',[_c('div',{attrs:{\"id\":`top-chart-${_vm.graphId}`}},[_c('div',{staticStyle:{\"display\":\"flex\"}},[_c('strong',[_vm._v(_vm._s(_vm.title))]),_c('VSpacer'),_c('div',{attrs:{\"id\":`top-search-${_vm.graphId}`}})],1),_c('ChartViewFilters')],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <VContainer>\r\n    <div :id=\"`top-chart-${graphId}`\">\r\n      <div style=\"display: flex\">\r\n        <strong>{{ title }}</strong>\r\n        <VSpacer />\r\n        <div :id=\"`top-search-${graphId}`\" />\r\n      </div>\r\n      <ChartViewFilters />\r\n    </div>\r\n  </VContainer>\r\n</template>\r\n<script>\r\nimport * as d3 from 'd3'\r\nimport * as dc from 'dc'\r\nimport { removeEmptyBins } from '../utils/dc-helpers'\r\nimport mixin from './mixin'\r\nimport ChartViewFilters from '../filters/ChartViewFilters.vue'\r\n\r\n// Remove warning on default colorscheme, even if not used..\r\ndc.config.defaultColors(d3.schemePaired)\r\n\r\nexport default {\r\n  components: { ChartViewFilters },\r\n  mixins: [mixin],\r\n  props: {\r\n    /**\r\n     * Column name of the {values} to be displayed/compared in the graph\r\n     */\r\n    valueAccessor: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    /**\r\n     * If defined, calculates the sum of the column named {sumAccessor} over {valueAccessor}.\r\n     * Otherwise, takes the count of the unique {valueAccessor}.\r\n     */\r\n    sumAccessor: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    /**\r\n     * Number of bars to display in descendant order\r\n     */\r\n    topK: {\r\n      type: Number,\r\n      default: 10\r\n    },\r\n    /**\r\n     * If one of {valueAccessor} is null, replace the value with a default\r\n     */\r\n    defaultValue: {\r\n      type: String,\r\n      default: ''\r\n    }\r\n  },\r\n  data() {\r\n    return {}\r\n  },\r\n  methods: {\r\n    drawViz() {\r\n      // Init top row chart & search\r\n      const topChart = new dc.RowChart(`#top-chart-${this.graphId}`)\r\n      const topSearch = this.createTextFilterWidget(`#top-search-${this.graphId}`)\r\n\r\n      // Bind reset filters link\r\n      d3.select(`#top-chart-${this.graphId} a.reset`).on('click', function() {\r\n        topChart.filterAll()\r\n        dc.redrawAll()\r\n      })\r\n\r\n      // Create dimensions\r\n      const topDimension = this.ndx.dimension(d => d[this.valueAccessor] || this.defaultValue)\r\n      topSearch.dimension(this.ndx.dimension(d => (d[this.valueAccessor] || this.defaultValue).toLowerCase()))\r\n\r\n      // Create group\r\n      const topGroup = this.sumAccessor ? topDimension.group().reduceSum(d => d[this.sumAccessor]) : topDimension.group().reduceCount()\r\n\r\n      // Create top row chart\r\n      topChart\r\n        .width(\r\n          d3.select(`#top-chart-${this.graphId}`).node().getBoundingClientRect()\r\n            .width\r\n        )\r\n        .height(this.height)\r\n        .margins({ top: 20, left: 10, right: 10, bottom: 20 })\r\n        .group(removeEmptyBins(topGroup))\r\n        .dimension(topDimension)\r\n        .ordinalColors(this.colorPalette)\r\n        .label(d => d.key)\r\n        .data(group => group.top(this.topK))\r\n        .title(d => `${d.value} ${this.valueLabel}`)\r\n        .elasticX(true)\r\n        .xAxis()\r\n        .ticks(4)\r\n\r\n      dc.renderAll()\r\n      // addXLabel(topChart, this.valueLabel)\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n::v-deep .dc-text-filter-input {\r\n  background: none;\r\n  color: #596471;\r\n  border-bottom: 1px solid #596471;\r\n  outline: none;\r\n}\r\n</style>\r\n","import mod from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TopChart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TopChart.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TopChart.vue?vue&type=template&id=354955f3&scoped=true&\"\nimport script from \"./TopChart.vue?vue&type=script&lang=js&\"\nexport * from \"./TopChart.vue?vue&type=script&lang=js&\"\nimport style0 from \"./TopChart.vue?vue&type=style&index=0&id=354955f3&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"354955f3\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('p',{staticClass:\"filters\"},[_c('span',[_vm._v(\" \"+_vm._s(_vm.$t('Current filter'))+\" \"),_c('span',{staticClass:\"filter\"})]),_c('a',{directives:[{name:\"t\",rawName:\"v-t\",value:('reset'),expression:\"'reset'\"}],staticClass:\"reset\",staticStyle:{\"display\":\"none\"}})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <p class=\"filters\">\r\n    <span>\r\n      {{ $t('Current filter') }}\r\n      <span class=\"filter\" />\r\n    </span>\r\n    <a v-t=\"'reset'\" class=\"reset\" style=\"display: none\" />\r\n  </p>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n\r\n}\r\n</script>\r\n","import mod from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewFilters.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewFilters.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewFilters.vue?vue&type=template&id=2f9280d1&\"\nimport script from \"./ChartViewFilters.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewFilters.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { TextFilterWidget } from 'dc'\r\n\r\nexport default {\r\n  props: {\r\n    /**\r\n     * The crossfilter object that contains the values and filters\r\n     * e,g: crossfilter(this.results)\r\n     */\r\n    ndx: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    /**\r\n     * Title of the graph\r\n     */\r\n    title: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    /**\r\n     * Label to display in the axis\r\n     */\r\n    valueLabel: {\r\n      type: String,\r\n      default: 'records'\r\n    },\r\n    /**\r\n     * The height of the graph\r\n     * the width is dynamically computed from it's parent\r\n     */\r\n    height: {\r\n      type: Number,\r\n      default: 250\r\n    },\r\n    /**\r\n     * Colors to use in the graph\r\n     */\r\n    colorPalette: {\r\n      type: Array,\r\n      default: () => [\r\n        '#58539E',\r\n        '#847CEB',\r\n        '#605BAB',\r\n        '#4A4685',\r\n        '#35325E'\r\n      ]\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      graphId: 'graph_' + this.$store.state.xp.currentTab\r\n    }\r\n  },\r\n  mounted() {\r\n    this.drawViz()\r\n  },\r\n  watch: {\r\n    values() {\r\n      this.drawViz()\r\n    }\r\n  },\r\n  methods: {\r\n    createTextFilterWidget(parent, placeholder = 'Search') {\r\n      const widget = new TextFilterWidget(parent)\r\n      widget.placeHolder(this.$t(placeholder))\r\n      return widget\r\n    }\r\n  }\r\n}\r\n","import * as d3 from 'd3'\r\nimport * as dc from 'dc'\r\n\r\n// Functions to add x-label & y-label to Row Charts (Unsupported by dc.js)\r\n// https://www.intothevoid.io/data-visualization/row-chart-axis-labels-dc-js/\r\n// Use with:\r\n// contentChart.on('postRender', function (chart) {\r\n//  addXLabel(chart, 'Hours watched')\r\n// })\r\nexport function addXLabel(chartToUpdate, displayText) {\r\n  const textSelection = chartToUpdate\r\n    .svg()\r\n    .append('text')\r\n    .attr('class', 'x-axis-label')\r\n    .attr('text-anchor', 'middle')\r\n    .attr('x', chartToUpdate.width() / 2)\r\n    .attr('y', chartToUpdate.height() - 10)\r\n    .text(displayText)\r\n  const textDims = textSelection.node().getBBox()\r\n  const chartMargins = chartToUpdate.margins()\r\n\r\n  // Dynamically adjust positioning after reading text dimension from DOM\r\n  textSelection\r\n    .attr(\r\n      'x',\r\n      chartMargins.left +\r\n        (chartToUpdate.width() - chartMargins.left - chartMargins.right) / 2\r\n    )\r\n    .attr('y', chartToUpdate.height() - Math.ceil(textDims.height) / 2)\r\n}\r\nexport function addYLabel(chartToUpdate, displayText) {\r\n  const textSelection = chartToUpdate\r\n    .svg()\r\n    .append('text')\r\n    .attr('class', 'y-axis-label')\r\n    .attr('text-anchor', 'middle')\r\n    .attr('transform', 'rotate(-90)')\r\n    .attr('x', -chartToUpdate.height() / 2)\r\n    .attr('y', 10)\r\n    .text(displayText)\r\n  const textDims = textSelection.node().getBBox()\r\n  const chartMargins = chartToUpdate.margins()\r\n\r\n  // Dynamically adjust positioning after reading text dimension from DOM\r\n  textSelection\r\n    .attr(\r\n      'x',\r\n      -chartMargins.top -\r\n        (chartToUpdate.height() - chartMargins.top - chartMargins.bottom) / 2\r\n    )\r\n    .attr(\r\n      'y',\r\n      Math.max(\r\n        Math.ceil(textDims.height),\r\n        chartMargins.left - Math.ceil(textDims.height) - 5\r\n      )\r\n    )\r\n}\r\n\r\n/**\r\n * Transform a simple group to a cumulative one in order\r\n * to make cumulative line chart\r\n * @param {Crossfilter group} group the group to transform\r\n * @returns the cumulative group\r\n */\r\nexport function createCumulativeGroup(group) {\r\n  return {\r\n    all() {\r\n      const cumulate = {}\r\n      return group.all().map(function(d) {\r\n        if (cumulate[d.key[0]]) {\r\n          cumulate[d.key[0]] += d.value\r\n        } else {\r\n          cumulate[d.key[0]] = d.value\r\n        }\r\n        return { key: d.key, value: cumulate[d.key[0]] }\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Remove datapoints that are null in a crossfilter group\r\n * Used to hide empty bins in a bar graph\r\n * @param {Crossfilter group} group the group to transform\r\n * @returns the cleaned group\r\n */\r\nexport function removeEmptyBins(group) {\r\n  return {\r\n    top(n) {\r\n      return group\r\n        .top(Infinity)\r\n        .filter(function(d) {\r\n          return d.value.count !== 0 && d.value !== 0\r\n        })\r\n        .slice(0, n)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addPiePercentage(chart) {\r\n  chart.selectAll('text.pie-slice.pie-label').call(function(t) {\r\n    t.each(function(d) {\r\n      const self = d3.select(this)\r\n      let text = self.text()\r\n      if (text.length > 14) { text = text.substring(0, 14) + '.. ' }\r\n      if (text.length > 0) {\r\n        text =\r\n          text +\r\n          ' (' +\r\n          dc.utils.printSingleValue(\r\n            ((d.endAngle - d.startAngle) / (2 * Math.PI)) * 100\r\n          ) +\r\n          '%)'\r\n      }\r\n      self.text(text)\r\n    })\r\n  })\r\n}\r\n"],"names":["render","_vm","this","_c","_self","attrs","graphId","staticStyle","_v","_s","title","staticRenderFns","dc","config","defaultColors","components","ChartViewFilters","mixins","mixin","props","valueAccessor","type","String","required","sumAccessor","default","topK","Number","defaultValue","data","methods","drawViz","topChart","RowChart","topSearch","createTextFilterWidget","on","filterAll","redrawAll","topDimension","ndx","dimension","d","toLowerCase","topGroup","group","reduceSum","reduceCount","width","node","getBoundingClientRect","height","margins","top","left","right","bottom","removeEmptyBins","ordinalColors","colorPalette","label","key","value","valueLabel","elasticX","xAxis","ticks","renderAll","component","staticClass","$t","directives","name","rawName","expression","Object","Array","$store","state","xp","currentTab","mounted","watch","values","parent","placeholder","widget","TextFilterWidget","placeHolder","addXLabel","chartToUpdate","displayText","textSelection","svg","append","attr","text","textDims","getBBox","chartMargins","Math","ceil","addYLabel","max","createCumulativeGroup","all","cumulate","map","n","Infinity","filter","count","slice","addPiePercentage","chart","selectAll","call","t","each","self","length","substring","endAngle","startAngle","PI"],"sourceRoot":""}