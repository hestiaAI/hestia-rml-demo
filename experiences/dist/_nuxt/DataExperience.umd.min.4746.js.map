{"version":3,"file":"DataExperience.umd.min.4746.js","mappings":"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","sources":["webpack://DataExperience/./src/components/chart/view/dc/TopChart.vue?71b1","webpack://DataExperience/src/components/chart/view/dc/TopChart.vue","webpack://DataExperience/./src/components/chart/view/dc/TopChart.vue?b9f6","webpack://DataExperience/./src/components/chart/view/dc/TopChart.vue","webpack://DataExperience/./src/components/chart/view/filters/ChartViewFilters.vue?cff0","webpack://DataExperience/src/components/chart/view/filters/ChartViewFilters.vue","webpack://DataExperience/./src/components/chart/view/filters/ChartViewFilters.vue?e912","webpack://DataExperience/./src/components/chart/view/filters/ChartViewFilters.vue","webpack://DataExperience/./src/components/chart/view/dc/mixin.js","webpack://DataExperience/./src/components/chart/view/utils/dc-axis.js","webpack://DataExperience/./src/components/chart/view/utils/dc-helpers.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('VContainer',{style:(_vm.cssProps)},[_c('div',{staticStyle:{\"display\":\"flex\"}},[_c('strong',[_vm._v(_vm._s(_vm.title))]),_c('VSpacer'),_c('div',{attrs:{\"id\":`top-search-${_vm.graphId}`}})],1),_c('ChartViewFilters'),_c('div',{class:{ isScrollable: _vm.isScrollable },attrs:{\"id\":`top-chart-${_vm.graphId}`}}),_c('div',{attrs:{\"id\":`top-chart-${_vm.graphId}-axis`}}),(_vm.topK < _vm.total)?_c('div',{directives:[{name:\"t\",rawName:\"v-t\",value:({ path: 'show-top-n', args: { n: _vm.topK, m: _vm.total } }),expression:\"{ path: 'show-top-n', args: { n: topK, m: total } }\"}],staticClass:\"text-caption\"}):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <VContainer :style=\"cssProps\">\r\n    <div style=\"display: flex\">\r\n        <strong>{{ title }}</strong>\r\n        <VSpacer />\r\n        <div :id=\"`top-search-${graphId}`\" />\r\n    </div>\r\n    <ChartViewFilters />\r\n    <div :id=\"`top-chart-${graphId}`\" :class=\"{ isScrollable }\"></div>\r\n    <div :id=\"`top-chart-${graphId}-axis`\"></div>\r\n    <div v-if=\"topK < total\" class=\"text-caption\" v-t=\"{ path: 'show-top-n', args: { n: topK, m: total } }\"></div>\r\n  </VContainer>\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from 'd3'\r\nimport * as dc from 'dc'\r\nimport { removeEmptyBins } from '../utils/dc-helpers'\r\nimport mixin from './mixin'\r\nimport ChartViewFilters from '../filters/ChartViewFilters.vue'\r\nimport '../utils/dc-axis.js'\r\n\r\n// Remove warning on default colorscheme, even if not used..\r\ndc.config.defaultColors(d3.schemePaired)\r\n\r\nexport default {\r\n  components: { ChartViewFilters },\r\n  mixins: [mixin],\r\n  props: {\r\n    /**\r\n     * Column name of the {values} to be displayed/compared in the graph\r\n     */\r\n    valueAccessor: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    /**\r\n     * Whether or not each value should be considered as an array\r\n     * eg here col2 should be considered and an array:\r\n     * [ { col1: \"test\", col2: [\"test1\", \"test2\"] }, ... ]\r\n     */\r\n    valueAsArray: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    /**\r\n     * If defined, calculates the sum of the column named {sumAccessor} over {valueAccessor}.\r\n     * Otherwise, takes the count of the unique {valueAccessor}.\r\n     */\r\n    sumAccessor: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    /**\r\n     * Number of bars to display in descendant order\r\n     */\r\n    topK: {\r\n      type: Number,\r\n      default: 10\r\n    },\r\n    /**\r\n     * Define if the chart should be scrollable to see all values\r\n     */\r\n    isScrollable: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    /**\r\n     * If one of {valueAccessor} is null, replace the value with a default\r\n     */\r\n    defaultValue: {\r\n      type: String,\r\n      default: ''\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      total: 'N/A'\r\n    }\r\n  },\r\n  computed: {\r\n    cssProps() {\r\n      return {\r\n        '--height': (this.height + 6.5) + 'px'\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    drawViz() {\r\n      // Init top row chart & search\r\n      const topChart = new dc.RowChart(`#top-chart-${this.graphId}`)\r\n      const topSearch = this.createTextFilterWidget(`#top-search-${this.graphId}`)\r\n\r\n      // Bind reset filters link\r\n      d3.select(`#top-chart-${this.graphId} a.reset`).on('click', function() {\r\n        topChart.filterAll()\r\n        dc.redrawAll()\r\n      })\r\n\r\n      // Create dimensions\r\n      const topDimension = this.ndx.dimension((d) => {\r\n        if (this.valueAsArray) {\r\n          return JSON.parse(d[this.valueAccessor]) || [this.defaultValue]\r\n        } else {\r\n          return d[this.valueAccessor] || this.defaultValue\r\n        }\r\n      }, this.valueAsArray)\r\n\r\n      topSearch.dimension(this.ndx.dimension((d) => {\r\n        if (this.valueAsArray) {\r\n          return JSON.parse(d[this.valueAccessor].toLowerCase()) || [this.defaultValue.toLowerCase()]\r\n        } else {\r\n          return (d[this.valueAccessor] || this.defaultValue).toLowerCase()\r\n        }\r\n      }, this.valueAsArray))\r\n\r\n      // Create group\r\n      const topGroup = this.sumAccessor ? topDimension.group().reduceSum(d => d[this.sumAccessor]) : topDimension.group().reduceCount()\r\n      this.total = topGroup.size()\r\n      const height = this.isScrollable ? Math.max(Math.min(this.topK, topGroup.size()) * 20, this.height) : this.height\r\n      const width = d3.select(`#top-chart-${this.graphId}`).node().getBoundingClientRect().width\r\n\r\n      // Create top row chart\r\n      topChart\r\n        .width(width)\r\n        .height(height)\r\n        .margins({ top: 20, left: 10, right: 10, bottom: -5 })\r\n        .group(this.isScrollable ? topGroup : removeEmptyBins(topGroup))\r\n        .dimension(topDimension)\r\n        .ordinalColors([this.colorPalette[this.position % this.colorPalette.length]])\r\n        .label(d => d.key)\r\n        .data(group => group.top(this.topK))\r\n        .title(d => `${d.value} ${this.valueLabel}`)\r\n        .elasticX(true)\r\n        .xAxis()\r\n        .ticks(4)\r\n\r\n      dc.axisChart(`#top-chart-${this.graphId}-axis`)\r\n        .margins({ top: 0, left: 10, right: 10, bottom: 10 })\r\n        .height(20)\r\n        .width(width)\r\n        .dimension(topDimension)\r\n        .group(topGroup)\r\n        .elastic(true)\r\n        .axis()\r\n        .ticks(4)\r\n\r\n      dc.renderAll()\r\n      // addXLabel(topChart, this.valueLabel)\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n::v-deep .dc-text-filter-input {\r\n  background: none;\r\n  color: #596471;\r\n  border-bottom: 1px solid #596471;\r\n  outline: none;\r\n}\r\n.isScrollable {\r\n  overflow-y: auto;\r\n  height: var(--height);\r\n}\r\n</style>\r\n","import mod from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TopChart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TopChart.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TopChart.vue?vue&type=template&id=bf05c918&scoped=true&\"\nimport script from \"./TopChart.vue?vue&type=script&lang=js&\"\nexport * from \"./TopChart.vue?vue&type=script&lang=js&\"\nimport style0 from \"./TopChart.vue?vue&type=style&index=0&id=bf05c918&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"bf05c918\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('p',{staticClass:\"filters\"},[_c('span',[_vm._v(\" \"+_vm._s(_vm.$t('Current filter'))+\" \"),_c('span',{staticClass:\"filter\"})]),_c('a',{directives:[{name:\"t\",rawName:\"v-t\",value:('reset'),expression:\"'reset'\"}],staticClass:\"reset\",staticStyle:{\"display\":\"none\"}})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <p class=\"filters\">\r\n    <span>\r\n      {{ $t('Current filter') }}\r\n      <span class=\"filter\" />\r\n    </span>\r\n    <a v-t=\"'reset'\" class=\"reset\" style=\"display: none\" />\r\n  </p>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n\r\n}\r\n</script>\r\n","import mod from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewFilters.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewFilters.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewFilters.vue?vue&type=template&id=2f9280d1&\"\nimport script from \"./ChartViewFilters.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewFilters.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { TextFilterWidget } from 'dc'\r\n\r\nexport default {\r\n  props: {\r\n    /**\r\n     * The crossfilter object that contains the values and filters\r\n     * e,g: crossfilter(this.results)\r\n     */\r\n    ndx: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    /**\r\n     * Title of the graph\r\n     */\r\n    title: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    /**\r\n     * Label to display in the axis\r\n     */\r\n    valueLabel: {\r\n      type: String,\r\n      default: 'records'\r\n    },\r\n    /**\r\n     * The height of the graph\r\n     * the width is dynamically computed from it's parent\r\n     */\r\n    height: {\r\n      type: Number,\r\n      default: 250\r\n    },\r\n    /**\r\n     * Position of the graph in the dashboard\r\n     * Determine the color to pick in colorPalette\r\n     */\r\n    position: {\r\n      type: Number,\r\n      required: true\r\n    },\r\n    /**\r\n     * Colors to use in the graph\r\n     * Default to Set 3: https://observablehq.com/@d3/color-schemes\r\n     */\r\n    colorPalette: {\r\n      type: Array,\r\n      default: () => ['#bebada', '#8dd3c7', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#bc80bd', '#ccebc5']\r\n    }\r\n    /**\r\n     '#58539E',\r\n        '#847CEB',\r\n        '#605BAB',\r\n        '#4A4685',\r\n        '#35325E'\r\n     */\r\n  },\r\n  data() {\r\n    return {\r\n      graphId: 'graph_' + this._uid\r\n    }\r\n  },\r\n  mounted() {\r\n    this.drawViz()\r\n  },\r\n  watch: {\r\n    values() {\r\n      this.drawViz()\r\n    }\r\n  },\r\n  methods: {\r\n    createTextFilterWidget(parent, placeholder = 'Search') {\r\n      const widget = new TextFilterWidget(parent)\r\n      widget.placeHolder(this.$t(placeholder))\r\n      return widget\r\n    }\r\n  }\r\n}\r\n","/* eslint-disable no-import-assign */\r\nimport * as d3 from 'd3'\r\nimport * as dc from 'dc'\r\n/**\r\n * Separate axis implementation.\r\n * by @ialarmedalien\r\n * Source / Author: https://gist.github.com/gordonwoodhull/13689975c3ec069a4e0bef380846157b\r\n * Examples:\r\n * - {@link https://bl.ocks.org/ialarmedalien/0a4bf25ffc0fb96ae569a20f91957bc1 eslint on dc.js source}\r\n * @class axisChart\r\n * @memberof dc\r\n * @mixes dc.capMixin\r\n * @mixes dc.marginMixin\r\n * @mixes dc.baseMixin\r\n * @example\r\n * // create an axis under #chart-container1 element using the default global chart group\r\n * var chart1 = dc.axisChart('#chart-container1');\r\n * // create an axis under #chart-container2 element using chart group A\r\n * var chart2 = dc.axisChart('#chart-container2', 'chartGroupA');\r\n * @param {String|node|d3.selection} parent - Any valid\r\n * {@link https://github.com/d3/d3-selection d3 single selector} specifying\r\n * a dom block element such as a div; or a dom element or d3 selection.\r\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\r\n * Interaction with a chart will only trigger events and redraws within the chart's group.\r\n * @returns {dc.axisChart} a dc axis chart\r\n */\r\ndc.axisChart = function(parent, chartGroup) {\r\n  let _g\r\n\r\n  const _chart = new (dc.CapMixin(dc.MarginMixin))()\r\n\r\n  let _scale\r\n\r\n  let _elastic\r\n\r\n  let _type\r\n\r\n  let _theAxis = d3.axisBottom()\r\n\r\n  let _axisData\r\n\r\n  const validAxisTypes = ['axisBottom', 'axisTop', 'axisLeft', 'axisRight']\r\n\r\n  _chart.axisCap = _chart.cap\r\n\r\n  function calculateAxisScale() {\r\n    if (!_scale || _elastic) {\r\n      const extent = d3.extent(_axisData, d => _chart.cappedValueAccessor(d))\r\n      if (extent[0] > 0) {\r\n        extent[0] = 0\r\n      }\r\n      if (extent[1] < 0) {\r\n        extent[1] = 0\r\n      }\r\n      _scale = d3.scaleLinear().domain(extent)\r\n        .range([0, _chart.effectiveWidth()])\r\n    }\r\n    _theAxis.scale(_scale)\r\n  }\r\n\r\n  function drawAxis() {\r\n    let axisG = _g.select('g.axis')\r\n\r\n    calculateAxisScale()\r\n\r\n    if (axisG.empty()) {\r\n      axisG = _g.append('g').attr('class', 'axis')\r\n    }\r\n\r\n    dc.transition(axisG, _chart.transitionDuration(), _chart.transitionDelay())\r\n      .call(_theAxis)\r\n  }\r\n\r\n  _chart._doRender = function() {\r\n    _chart.resetSvg()\r\n\r\n    _g = _chart.svg()\r\n      .append('g')\r\n      .attr('transform', 'translate(' + _chart.margins().left + ',' + _chart.margins().top + ')')\r\n\r\n    drawChart()\r\n\r\n    return _chart\r\n  }\r\n\r\n  /**\r\n     * Gets or sets the axis type. The axis type can be any valid\r\n     * {@link https://github.com/d3/d3-axis d3 axis}. The default is\r\n     * axisBottom (a bottom axis).\r\n     * @method type\r\n     * @memberof dc.axisChart\r\n     * @instance\r\n     * @see {@link https://github.com/d3/d3-axis d3 axis}\r\n     * @param {d3.type} [type]\r\n     * @returns {string|dc.axisChart} no args: type string; args: axis chart\r\n     */\r\n\r\n  _chart.type = function(type) {\r\n    if (!arguments.length) {\r\n      return _type\r\n    }\r\n    // set the axis type here\r\n    if (validAxisTypes.indexOf(type) !== -1) {\r\n      _theAxis = d3[type]()\r\n      _type = type\r\n    } else {\r\n      console.error(type + ' is not a valid d3 axis type')\r\n    }\r\n\r\n    return _chart\r\n  }\r\n\r\n  /**\r\n     * Gets or sets the axis scale. The axis scale can be any d3\r\n     * {@link https://github.com/d3/d3-scale quantitive scale}.\r\n     * @method scale\r\n     * @memberof dc.axisChart\r\n     * @instance\r\n     * @see {@link https://github.com/d3/d3-scale quantitive scale}\r\n     * @param {d3.scale} [scale] any value d3 scale\r\n     * @returns {d3.scale|dc.axisChart} no args: chart scale; args: axis chart\r\n     */\r\n  _chart.scale = function(scale) {\r\n    if (!arguments.length) {\r\n      return _scale\r\n    }\r\n    _scale = scale\r\n    return _chart\r\n  }\r\n\r\n  /**\r\n     * Get or set the elasticity on the axis. If this attribute is set to true,\r\n     * then the axis will rescale to auto-fit the data range when filtered.\r\n     * @method elastic\r\n     * @memberof dc.axisChart\r\n     * @instance\r\n     * @param {Boolean} [elastic] any valid boolean\r\n     * @returns {Boolean|dc.axisChart} no args: boolean; args: axis chart\r\n     */\r\n  _chart.elastic = function(elastic) {\r\n    if (!arguments.length) {\r\n      return _elastic\r\n    }\r\n    _elastic = elastic\r\n    return _chart\r\n  }\r\n\r\n  /**\r\n     * Get the axis for the axis chart instance.\r\n     * See the {@link https://github.com/d3/d3-axis d3 axis object}\r\n     * documention for more information.\r\n     * @method axis\r\n     * @memberof dc.axisChart\r\n     * @instance\r\n     * @see {@link https://github.com/d3/d3-axis d3.axis}\r\n     * @example\r\n     * // customize axis tick format\r\n     * chart.axis().tickFormat(function (v) {return v + '%';});\r\n     * // customize axis tick values\r\n     * chart.axis().tickValues([0, 100, 200, 300]);\r\n     * @returns {d3.axis} d3 axis\r\n     */\r\n  _chart.axis = function() {\r\n    return _theAxis\r\n  }\r\n\r\n  function drawChart() {\r\n    _axisData = _chart.data()\r\n    drawAxis()\r\n  }\r\n\r\n  _chart._doRedraw = function() {\r\n    drawChart()\r\n    return _chart\r\n  }\r\n\r\n  return _chart.anchor(parent, chartGroup)\r\n}\r\n","import * as d3 from 'd3'\r\nimport * as dc from 'dc'\r\n\r\n// Functions to add x-label & y-label to Row Charts (Unsupported by dc.js)\r\n// https://www.intothevoid.io/data-visualization/row-chart-axis-labels-dc-js/\r\n// Use with:\r\n// contentChart.on('postRender', function (chart) {\r\n//  addXLabel(chart, 'Hours watched')\r\n// })\r\nexport function addXLabel(chartToUpdate, displayText) {\r\n  const textSelection = chartToUpdate\r\n    .svg()\r\n    .append('text')\r\n    .attr('class', 'x-axis-label')\r\n    .attr('text-anchor', 'middle')\r\n    .attr('x', chartToUpdate.width() / 2)\r\n    .attr('y', chartToUpdate.height() - 10)\r\n    .text(displayText)\r\n  const textDims = textSelection.node().getBBox()\r\n  const chartMargins = chartToUpdate.margins()\r\n\r\n  // Dynamically adjust positioning after reading text dimension from DOM\r\n  textSelection\r\n    .attr(\r\n      'x',\r\n      chartMargins.left +\r\n        (chartToUpdate.width() - chartMargins.left - chartMargins.right) / 2\r\n    )\r\n    .attr('y', chartToUpdate.height() - Math.ceil(textDims.height) / 2)\r\n}\r\nexport function addYLabel(chartToUpdate, displayText) {\r\n  const textSelection = chartToUpdate\r\n    .svg()\r\n    .append('text')\r\n    .attr('class', 'y-axis-label')\r\n    .attr('text-anchor', 'middle')\r\n    .attr('transform', 'rotate(-90)')\r\n    .attr('x', -chartToUpdate.height() / 2)\r\n    .attr('y', 10)\r\n    .text(displayText)\r\n  const textDims = textSelection.node().getBBox()\r\n  const chartMargins = chartToUpdate.margins()\r\n\r\n  // Dynamically adjust positioning after reading text dimension from DOM\r\n  textSelection\r\n    .attr(\r\n      'x',\r\n      -chartMargins.top -\r\n        (chartToUpdate.height() - chartMargins.top - chartMargins.bottom) / 2\r\n    )\r\n    .attr(\r\n      'y',\r\n      Math.max(\r\n        Math.ceil(textDims.height),\r\n        chartMargins.left - Math.ceil(textDims.height) - 5\r\n      )\r\n    )\r\n}\r\n\r\n/**\r\n * Transform a simple group to a cumulative one in order\r\n * to make cumulative line chart\r\n * @param {Crossfilter group} group the group to transform\r\n * @returns the cumulative group\r\n */\r\nexport function createCumulativeGroup(group) {\r\n  return {\r\n    all() {\r\n      const cumulate = {}\r\n      return group.all().map(function(d) {\r\n        if (cumulate[d.key[0]]) {\r\n          cumulate[d.key[0]] += d.value\r\n        } else {\r\n          cumulate[d.key[0]] = d.value\r\n        }\r\n        return { key: d.key, value: cumulate[d.key[0]] }\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Remove datapoints that are null in a crossfilter group\r\n * Used to hide empty bins in a bar graph\r\n * @param {Crossfilter group} group the group to transform\r\n * @returns the cleaned group\r\n */\r\nexport function removeEmptyBins(group) {\r\n  return {\r\n    top(n) {\r\n      return group\r\n        .top(Infinity)\r\n        .filter(function(d) {\r\n          return d.value.count !== 0 && d.value !== 0\r\n        })\r\n        .slice(0, n)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addPiePercentage(chart) {\r\n  chart.selectAll('text.pie-slice.pie-label').call(function(t) {\r\n    t.each(function(d) {\r\n      const self = d3.select(this)\r\n      let text = self.text()\r\n      if (text.length > 14) { text = text.substring(0, 14) + '.. ' }\r\n      if (text.length > 0) {\r\n        text =\r\n          text +\r\n          ' (' +\r\n          dc.utils.printSingleValue(\r\n            ((d.endAngle - d.startAngle) / (2 * Math.PI)) * 100\r\n          ) +\r\n          '%)'\r\n      }\r\n      self.text(text)\r\n    })\r\n  })\r\n}\r\n"],"names":["render","_vm","this","_c","_self","style","staticStyle","_v","_s","title","attrs","graphId","class","isScrollable","topK","total","directives","name","rawName","value","path","args","n","m","expression","staticClass","_e","staticRenderFns","dc","config","defaultColors","components","ChartViewFilters","mixins","mixin","props","valueAccessor","type","String","required","valueAsArray","Boolean","default","sumAccessor","Number","defaultValue","data","computed","cssProps","height","methods","drawViz","topChart","RowChart","topSearch","createTextFilterWidget","on","filterAll","redrawAll","topDimension","ndx","dimension","d","JSON","parse","toLowerCase","topGroup","group","reduceSum","reduceCount","size","Math","max","min","width","node","getBoundingClientRect","margins","top","left","right","bottom","removeEmptyBins","ordinalColors","colorPalette","position","length","label","key","valueLabel","elasticX","xAxis","ticks","axisChart","elastic","axis","renderAll","component","$t","Object","Array","_uid","mounted","watch","values","parent","placeholder","widget","TextFilterWidget","placeHolder","chartGroup","_g","_chart","_scale","_elastic","_type","_axisData","_theAxis","validAxisTypes","calculateAxisScale","extent","cappedValueAccessor","domain","range","effectiveWidth","scale","drawAxis","axisG","select","empty","append","attr","transitionDuration","transitionDelay","call","drawChart","axisCap","cap","_doRender","resetSvg","svg","arguments","indexOf","console","error","_doRedraw","anchor","addXLabel","chartToUpdate","displayText","textSelection","text","textDims","getBBox","chartMargins","ceil","addYLabel","createCumulativeGroup","all","cumulate","map","Infinity","filter","count","slice","addPiePercentage","chart","selectAll","t","each","self","substring","endAngle","startAngle","PI"],"sourceRoot":""}