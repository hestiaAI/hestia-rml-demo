{"version":3,"file":"data-experience.umd.5808.js","mappings":";;;;;;;;;;;;;;;AAAA,+BAA+B,6BAA6B,+DAA+D,OAAO,aAAa,wBAAwB,OAAO,sBAAsB,YAAY,OAAO,kBAAkB,YAAY,GAAG,YAAY,aAAa,kBAAkB,iBAAiB,OAAO,4BAA4B,sBAAsB,8BAA8B,WAAW,EAAE,oCAAoC,yDAAyD,GAAG,gGAAgG,OAAO,mBAAmB,YAAY,GAAG,8CAA8C,OAAO,sBAAsB,YAAY,OAAO,qBAAqB,YAAY,GAAG,YAAY,aAAa,kBAAkB,iBAAiB,OAAO,4BAA4B,sBAAsB,8BAA8B,WAAW,EAAE,oCAAoC,iDAAiD,GAAG,yFAAyF,OAAO,sBAAsB,YAAY,GAAG,8CAA8C,OAAO,sBAAsB,YAAY,OAAO,yBAAyB,YAAY,GAAG,YAAY,aAAa,kBAAkB,iBAAiB,OAAO,4BAA4B,sBAAsB,8BAA8B,WAAW,EAAE,oCAAoC,yDAAyD,GAAG,2NAA2N,OAAO,sBAAsB,YAAY,OAAO,sBAAsB,YAAY,GAAG,YAAY,aAAa,kBAAkB,iBAAiB,OAAO,4BAA4B,sBAAsB,8BAA8B,WAAW,EAAE,oCAAoC,kDAAkD,GAAG,wGAAwG,OAAO,uBAAuB,YAAY,GAAG,8CAA8C,OAAO,sBAAsB,YAAY,OAAO,0BAA0B,YAAY,GAAG,YAAY,aAAa,kBAAkB,iBAAiB,OAAO,4BAA4B,sBAAsB,8BAA8B,WAAW,EAAE,oCAAoC,uDAAuD,GAAG,2FAA2F,OAAO,2BAA2B,YAAY,GAAG,8CAA8C,OAAO,sBAAsB,YAAY,OAAO,4BAA4B,YAAY,GAAG,YAAY,aAAa,kBAAkB,iBAAiB,OAAO,4BAA4B,sBAAsB,8BAA8B,WAAW,EAAE,oCAAoC,+DAA+D,GAAG,mJAAmJ,mCAAmC,sBAAsB,YAAY,GAAG,0BAA0B,OAAO,aAAa,oCAAoC,yBAAyB,yCAAyC;AACn9G;AACA;;;;;;;;;;;;;;;;;;;;;AC+GwB;AACA;AACc;AACX;AACyB;AACW;AACF;AAC+B;;AAE5F;AACA,uBAAuB,CAAC,gBAAe;;AAEvC,wFAAe;AACf,qCAAqC,oDAAkB,kDAAqB;AAC5E,WAAW,gBAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,YAAY;AAClB,MAAM,YAAY;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,WAAW;AACnC;AACA;AACA,MAAM,UAAS;AACf;AACA;AACA,QAAQ,YAAY;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,UACL;AACf;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,8BAAe;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,WAAW;AACnC;AACA,MAAM,UAAS;AACf;AACA,QAAQ,YAAY;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,UACL;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,UAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,yBAAyB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,uBAAW;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,YAAY;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,UAAS;AACnB,YAAY,YAAY;AACxB,YAAY,YAAY;AACxB;AACA;AACA,MAAM,YAAY;AAClB;AACA;AACA,CAAC;;;AClS4J,CAAC,6FAAe,mDAAG,EAAC;;;;ACAvE;AAC3B;AACL;;;AAG1E;AACA,CAAyG;AACzG,gBAAgB,sCAAU;AAC1B,EAAE,wDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,gEAAe;;;;;;;;;;;;;;;;AClBf,+BAA+B,6BAA6B,yBAAyB,qBAAqB,wDAAwD,0CAA0C,aAAa,0BAA0B,OAAO,mCAAmC,KAAK,yBAAyB,gBAAgB,8DAA8D,8CAA8C,4BAA4B,uFAAuF,sCAAsC,OAAO,iBAAiB,qBAAqB,wCAAwC;AACrqB;AACA;;;;;;;;;;;;;ACiByE;AACT;AACiC;AACvB;;AAE1E,kFAAe;AACf,0BAA0B,mDAAwB,wDAAiB;AACnE,WAAW,6CAAuB;AAClC,CAAC;;;AC3BsJ,CAAC,uFAAe,6CAAG,EAAC;;;;ACAvE;AAC3B;AACL;;;AAGpE;AACA,CAAyG;AACzG,gBAAgB,sCAAU;AAC1B,EAAE,kDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,0DAAe;;;;;;;;;;;;;;;;AClBf,+BAA+B,6BAA6B,eAAe,sBAAsB,yEAAyE,qBAAqB,YAAY,aAAa,4DAA4D,mCAAmC,kBAAkB;AACzU;AACA;;;;;ACSA,6EAAe;;AAEf,CAAC;;;ACboJ,CAAC,qFAAe,wCAAG,EAAC;;;;ACA1E;AAC3B;AACL;;;AAG/D;AACA,CAA4G;AAC5G,gBAAgB,sCAAU;AAC1B,EAAE,gDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,qDAAe;;;;;;;;;;;;AClBsB;AACJ;;AAEkB;;AAEnD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB;AACxB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,iBAAiB;AACjB;AACA,yBAAyB,gDAAgB;AACzC;AACA;AACA;AACA;AACA;;AAEA,+DAAe,8DAAK,QAAQ,qEAAe,CAAC;;;;;;;;;;;;;;;;;;;AC7CpB;AACA;;AAExB;AACA;AACA;AACA;AACA;AACA,IAAI;AACG;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,iBAAiB;AACjB,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,mBAAmB,sCAAS;AAC5B;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,UAAU,sDAAyB;AACnC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH","sources":["webpack://data-experience/./src/components/chart/view/ChartViewIOSNetworkActivity.vue?a635","webpack://data-experience/src/components/chart/view/ChartViewIOSNetworkActivity.vue","webpack://data-experience/./src/components/chart/view/ChartViewIOSNetworkActivity.vue?5b07","webpack://data-experience/./src/components/chart/view/ChartViewIOSNetworkActivity.vue","webpack://data-experience/./src/components/chart/view/ChartViewVRowWebShare.vue?ea0d","webpack://data-experience/src/components/chart/view/ChartViewVRowWebShare.vue","webpack://data-experience/./src/components/chart/view/ChartViewVRowWebShare.vue?2101","webpack://data-experience/./src/components/chart/view/ChartViewVRowWebShare.vue","webpack://data-experience/./src/components/chart/view/filters/ChartViewFilters.vue?cff0","webpack://data-experience/src/components/chart/view/filters/ChartViewFilters.vue","webpack://data-experience/./src/components/chart/view/filters/ChartViewFilters.vue?e912","webpack://data-experience/./src/components/chart/view/filters/ChartViewFilters.vue","webpack://data-experience/./src/components/chart/view/mixin.js","webpack://data-experience/./src/components/chart/view/utils/dc-helpers.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('VContainer',[_c('ChartViewVRowWebShare',[_c('VCol',{attrs:{\"cols\":\"12\"}},[_c('VRow',[_c('VCol',{attrs:{\"cols\":\"12\",\"md\":\"4\"}},[_c('div',{attrs:{\"id\":`app-chart-${_vm.graphId}`}},[_c('div',{staticStyle:{\"display\":\"flex\"}},[_c('VTooltip',{attrs:{\"left\":\"\",\"max-width\":\"200\"},scopedSlots:_vm._u([{key:\"activator\",fn:function({ on, attrs }){return [_c('strong',_vm._g(_vm._b({},'strong',attrs,false),on),[_vm._v(\"Application ID\")])]}}])},[_c('span',[_vm._v(\"The bundle identifier of the initiating app.\")])]),_c('VSpacer'),_c('div',{attrs:{\"id\":`app-search-${_vm.graphId}`}})],1),_c('ChartViewFilters')],1)]),_c('VCol',{attrs:{\"cols\":\"12\",\"md\":\"4\"}},[_c('div',{attrs:{\"id\":`domain-chart-${_vm.graphId}`}},[_c('div',{staticStyle:{\"display\":\"flex\"}},[_c('VTooltip',{attrs:{\"left\":\"\",\"max-width\":\"200\"},scopedSlots:_vm._u([{key:\"activator\",fn:function({ on, attrs }){return [_c('strong',_vm._g(_vm._b({},'strong',attrs,false),on),[_vm._v(\"Domain\")])]}}])},[_c('span',[_vm._v(\"The domain of the network connection.\")])]),_c('VSpacer'),_c('div',{attrs:{\"id\":`domain-search-${_vm.graphId}`}})],1),_c('ChartViewFilters')],1)]),_c('VCol',{attrs:{\"cols\":\"12\",\"md\":\"4\"}},[_c('div',{attrs:{\"id\":`domainType-chart-${_vm.graphId}`}},[_c('div',{staticStyle:{\"display\":\"flex\"}},[_c('VTooltip',{attrs:{\"left\":\"\",\"max-width\":\"200\"},scopedSlots:_vm._u([{key:\"activator\",fn:function({ on, attrs }){return [_c('strong',_vm._g(_vm._b({},'strong',attrs,false),on),[_vm._v(\"Profiling user\")])]}}])},[_c('span',[_vm._v(\"Whether the domain has been identified as potentially collecting information across apps and sites, and potentially profiling users.\")])])],1),_c('ChartViewFilters')],1)])],1),_c('VRow',[_c('VCol',{attrs:{\"cols\":\"12\",\"md\":\"4\"}},[_c('div',{attrs:{\"id\":`context-chart-${_vm.graphId}`}},[_c('div',{staticStyle:{\"display\":\"flex\"}},[_c('VTooltip',{attrs:{\"left\":\"\",\"max-width\":\"200\"},scopedSlots:_vm._u([{key:\"activator\",fn:function({ on, attrs }){return [_c('strong',_vm._g(_vm._b({},'strong',attrs,false),on),[_vm._v(\"Context\")])]}}])},[_c('span',[_vm._v(\"The website that made the connection, if applicable.\")])]),_c('VSpacer'),_c('div',{attrs:{\"id\":`context-search-${_vm.graphId}`}})],1),_c('ChartViewFilters')],1)]),_c('VCol',{attrs:{\"cols\":\"12\",\"md\":\"4\"}},[_c('div',{attrs:{\"id\":`domainOwner-chart-${_vm.graphId}`}},[_c('div',{staticStyle:{\"display\":\"flex\"}},[_c('VTooltip',{attrs:{\"left\":\"\",\"max-width\":\"200\"},scopedSlots:_vm._u([{key:\"activator\",fn:function({ on, attrs }){return [_c('strong',_vm._g(_vm._b({},'strong',attrs,false),on),[_vm._v(\"Domain owner\")])]}}])},[_c('span',[_vm._v(\"The owner of the domain, if applicable.\")])]),_c('VSpacer'),_c('div',{attrs:{\"id\":`domainOwner-search-${_vm.graphId}`}})],1),_c('ChartViewFilters')],1)]),_c('VCol',{attrs:{\"cols\":\"12\",\"md\":\"4\"}},[_c('div',{attrs:{\"id\":`initiatedType-chart-${_vm.graphId}`}},[_c('div',{staticStyle:{\"display\":\"flex\"}},[_c('VTooltip',{attrs:{\"left\":\"\",\"max-width\":\"200\"},scopedSlots:_vm._u([{key:\"activator\",fn:function({ on, attrs }){return [_c('strong',_vm._g(_vm._b({},'strong',attrs,false),on),[_vm._v(\"Initiated by the app\")])]}}])},[_c('span',[_vm._v(\"Whether the app or the user initiated the connection.\")])])],1),_c('ChartViewFilters')],1)])],1)],1)],1),_c('VRow',[_c('div',{staticClass:\"dc-data-count\",attrs:{\"id\":`dc-data-count-${_vm.graphId}`}})]),_c('VRow',[_c('VCol',{attrs:{\"cols\":\"12\"}},[_c('UnitFilterableTable',_vm._b({},'UnitFilterableTable',{ headers: _vm.header, items: _vm.results },false))],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <VContainer>\n    <ChartViewVRowWebShare>\n      <VCol cols=\"12\">\n        <VRow>\n          <VCol cols=\"12\" md=\"4\">\n            <div :id=\"`app-chart-${graphId}`\">\n              <div style=\"display: flex\">\n                <VTooltip left max-width=\"200\">\n                  <template #activator=\"{ on, attrs }\">\n                    <strong v-bind=\"attrs\" v-on=\"on\">Application ID</strong>\n                  </template>\n                  <span>The bundle identifier of the initiating app.</span>\n                </VTooltip>\n                <VSpacer />\n                <div :id=\"`app-search-${graphId}`\" />\n              </div>\n              <ChartViewFilters />\n            </div>\n          </VCol>\n          <VCol cols=\"12\" md=\"4\">\n            <div :id=\"`domain-chart-${graphId}`\">\n              <div style=\"display: flex\">\n                <VTooltip left max-width=\"200\">\n                  <template #activator=\"{ on, attrs }\">\n                    <strong v-bind=\"attrs\" v-on=\"on\">Domain</strong>\n                  </template>\n                  <span>The domain of the network connection.</span>\n                </VTooltip>\n                <VSpacer />\n                <div :id=\"`domain-search-${graphId}`\" />\n              </div>\n              <ChartViewFilters />\n            </div>\n          </VCol>\n          <VCol cols=\"12\" md=\"4\">\n            <div :id=\"`domainType-chart-${graphId}`\">\n              <div style=\"display: flex\">\n                <VTooltip left max-width=\"200\">\n                  <template #activator=\"{ on, attrs }\">\n                    <strong v-bind=\"attrs\" v-on=\"on\">Profiling user</strong>\n                  </template>\n                  <span>Whether the domain has been identified as potentially\n                    collecting information across apps and sites, and\n                    potentially profiling users.</span>\n                </VTooltip>\n              </div>\n              <ChartViewFilters />\n            </div>\n          </VCol>\n        </VRow>\n        <VRow>\n          <VCol cols=\"12\" md=\"4\">\n            <div :id=\"`context-chart-${graphId}`\">\n              <div style=\"display: flex\">\n                <VTooltip left max-width=\"200\">\n                  <template #activator=\"{ on, attrs }\">\n                    <strong v-bind=\"attrs\" v-on=\"on\">Context</strong>\n                  </template>\n                  <span>The website that made the connection, if applicable.</span>\n                </VTooltip>\n                <VSpacer />\n                <div :id=\"`context-search-${graphId}`\" />\n              </div>\n              <ChartViewFilters />\n            </div>\n          </VCol>\n          <VCol cols=\"12\" md=\"4\">\n            <div :id=\"`domainOwner-chart-${graphId}`\">\n              <div style=\"display: flex\">\n                <VTooltip left max-width=\"200\">\n                  <template #activator=\"{ on, attrs }\">\n                    <strong v-bind=\"attrs\" v-on=\"on\">Domain owner</strong>\n                  </template>\n                  <span>The owner of the domain, if applicable.</span>\n                </VTooltip>\n                <VSpacer />\n                <div :id=\"`domainOwner-search-${graphId}`\" />\n              </div>\n              <ChartViewFilters />\n            </div>\n          </VCol>\n          <VCol cols=\"12\" md=\"4\">\n            <div :id=\"`initiatedType-chart-${graphId}`\">\n              <div style=\"display: flex\">\n                <VTooltip left max-width=\"200\">\n                  <template #activator=\"{ on, attrs }\">\n                    <strong\n                      v-bind=\"attrs\"\n                      v-on=\"on\"\n                    >Initiated by the app</strong>\n                  </template>\n                  <span>Whether the app or the user initiated the connection.</span>\n                </VTooltip>\n              </div>\n              <ChartViewFilters />\n            </div>\n          </VCol>\n        </VRow>\n      </VCol>\n    </ChartViewVRowWebShare>\n    <VRow>\n      <div :id=\"`dc-data-count-${graphId}`\" class=\"dc-data-count\" />\n    </VRow>\n    <VRow>\n      <VCol cols=\"12\">\n        <UnitFilterableTable v-bind=\"{ headers: header, items: results }\" />\n      </VCol>\n    </VRow>\n  </VContainer>\n</template>\n\n<script>\nimport * as d3 from 'd3'\nimport * as dc from 'dc'\nimport crossfilter from 'crossfilter2'\nimport mixin from './mixin'\nimport { removeEmptyBins } from './utils/dc-helpers'\nimport ChartViewVRowWebShare from './ChartViewVRowWebShare.vue'\nimport ChartViewFilters from './filters/ChartViewFilters.vue'\nimport UnitFilterableTable from '@/components/unit/filterable-table/UnitFilterableTable.vue'\n\n// Remove warning on default colorscheme, even if not used..\ndc.config.defaultColors(d3.schemePaired)\n\nexport default {\n  components: { ChartViewVRowWebShare, ChartViewFilters, UnitFilterableTable },\n  mixins: [mixin],\n  props: {},\n  data() {\n    return {\n      header: [\n        { text: 'App', value: 'bundleId' },\n        { text: 'Domain', value: 'domain' },\n        { text: 'Domain Type', value: 'domainType' },\n        { text: 'Domain Owner', value: 'domainOwner' },\n        { text: 'Context', value: 'context' },\n        { text: 'Initated by', value: 'initiatedType' },\n        { text: 'Hits', value: 'hits' }\n      ],\n      results: [],\n      colorPalette: ['#58539E', '#847CEB', '#605BAB', '#4A4685', '#9498F2']\n    }\n  },\n  methods: {\n    resetAll() {\n      dc.filterAll()\n      dc.renderAll()\n    },\n    decodeDefault(str) {\n      try {\n        return str && str !== 'undefined'\n          ? decodeURIComponent(escape(str))\n          : 'Unknown'\n      } catch (e) {\n        console.error(e)\n        return str || 'Unknown'\n      }\n    },\n    createTopRowChart(ndx, fieldAccessor, valueAccessor) {\n      // Create and bind charts to their respective divs\n      const chart = new dc.RowChart(`#${fieldAccessor}-chart-${this.graphId}`)\n      const search = this.createTextFilterWidget(`#${fieldAccessor}-search-${this.graphId}`)\n      // Bind reset filters buttons\n      d3.select(`#${fieldAccessor}-chart-${this.graphId} a.reset`).on('click', function() {\n        chart.filterAll()\n        search.filterAll()\n        dc.redrawAll()\n      })\n      // Create dimensions\n      const chartDimension = ndx.dimension(d => d[fieldAccessor])\n      search.dimension(ndx.dimension(d => d[fieldAccessor].toLowerCase()))\n      // Create groups\n      const chartGroup = chartDimension\n        .group()\n        .reduceSum(d => (valueAccessor ? d[valueAccessor] : 1))\n      // Render top row chart\n      const width = d3\n        .select(`#${fieldAccessor}-chart-${this.graphId}`)\n        .node()\n        .getBoundingClientRect().width\n      chart\n        .width(width)\n        .height(252)\n        .margins({ top: 20, left: 10, right: 10, bottom: 20 })\n        .group(removeEmptyBins(chartGroup))\n        .dimension(chartDimension)\n        .ordinalColors(this.colorPalette)\n        .label(d => d.key)\n        .data(group => group.top(10))\n        .title(d => d.value)\n        .elasticX(true)\n        .xAxis()\n        .ticks(4)\n    },\n    createPieChart(ndx, fieldAccessor, valueAccessor) {\n      // Create and bind charts to their respective divs\n      const chart = new dc.PieChart(`#${fieldAccessor}-chart-${this.graphId}`)\n      // Bind reset filters buttons\n      d3.select(`#${fieldAccessor}-chart-${this.graphId} a.reset`).on('click', function() {\n        chart.filterAll()\n        dc.redrawAll()\n      })\n      // Create dimensions\n      const chartDimension = ndx.dimension(d => d[fieldAccessor])\n      // Create groups\n      const chartGroup = chartDimension\n        .group()\n        .reduceSum(d => (valueAccessor ? d[valueAccessor] : 1))\n      // Render pie chart\n      const width = d3\n        .select(`#${fieldAccessor}-chart-${this.graphId}`)\n        .node()\n        .getBoundingClientRect().width\n      chart\n        .width(width)\n        .height(220)\n        .radius(width / 2.5)\n        .innerRadius(width / 8)\n        .dimension(chartDimension)\n        .group(chartGroup)\n        .valueAccessor(d => d.value)\n        .title(d => d.value + ' records')\n        .ordinalColors(this.colorPalette)\n      chart.on('pretransition', function(chart) {\n        chart.selectAll('text.pie-slice.pie-label').call(function(t) {\n          t.each(function(d) {\n            const self = d3.select(this)\n            let text = self.text()\n            if (text.length > 14) {\n              text = text.substring(0, 14) + '.. '\n            }\n            if (text.length > 0) {\n              text =\n                                text +\n                                    ' (' +\n                                    dc.utils.printSingleValue(((d.endAngle - d.startAngle) / (2 * Math.PI)) * 100) +\n                                    '%)'\n            }\n            self.text(text)\n          })\n        })\n      })\n    },\n    drawViz() {\n      // Parse and format data\n      this.results = this.values.map((d) => {\n        return {\n          app: this.decodeDefault(d.bundleId),\n          domain: this.decodeDefault(d.domain),\n          domainType: d.domainType === '2' || d.domainType === 'false' ? 'No' : 'Yes',\n          domainOwner: this.decodeDefault(d.domainOwner),\n          context: this.decodeDefault(d.context),\n          initiatedType: d.initiatedType === 'NonAppInitiated' || d.initiatedType === 'false'\n            ? 'No'\n            : 'Yes',\n          hits: +d.hits\n        }\n      })\n      const ndx = crossfilter(this.results)\n      this.createTopRowChart(ndx, 'app', 'hits')\n      this.createTopRowChart(ndx, 'domain', 'hits')\n      this.createTopRowChart(ndx, 'context', 'hits')\n      this.createTopRowChart(ndx, 'domainOwner', 'hits')\n      this.createPieChart(ndx, 'domainType', 'hits')\n      this.createPieChart(ndx, 'initiatedType', 'hits')\n      // const tableCount = new dc.DataCount(`#dc-data-count-${this.graphId}`)\n      // Render counter and table\n      const all = ndx.groupAll()\n      const allDim = ndx.dimension(d => d)\n      const tableCount = new dc.DataCount(`#dc-data-count-${this.graphId}`)\n      tableCount\n        .crossfilter(ndx)\n        .groupAll(all)\n        .html({\n          some: '<strong>%filter-count</strong> selected out of <strong>%total-count</strong> records' +\n                    \" | <a class='resetAll'>Reset All</a>\",\n          all: 'All <strong>%total-count</strong> records' +\n                    ' selected. Please click on the graph to apply filters.'\n        })\n        .on('pretransition', (chart, filter) => {\n          this.results = allDim.top(all.value())\n          d3.select(`#dc-data-count-${this.graphId} a.resetAll`).on('click', () => {\n            dc.filterAll()\n            dc.renderAll()\n          })\n        })\n      dc.renderAll()\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewIOSNetworkActivity.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewIOSNetworkActivity.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewIOSNetworkActivity.vue?vue&type=template&id=c3e46cb0&\"\nimport script from \"./ChartViewIOSNetworkActivity.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewIOSNetworkActivity.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('VRow',_vm._b({ref:\"domToImageNode\"},'VRow',_vm.$attrs,false),[_vm._t(\"default\"),_c('VCol',{staticClass:\"dom-to-image-exclude\",attrs:{\"cols\":\"12\"}},[_c('BaseButton',_vm._b({attrs:{\"icon\":\"mdiExport\",\"text\":\"Export\"},on:{\"click\":_vm.exportImage}},'BaseButton',{ progress: _vm.progress, status: _vm.status, error: _vm.error },false)),_c('BaseButtonDownloadData',_vm._b({},'BaseButtonDownloadData',{ disabled: !_vm.blob, extension: _vm.extension, filename: _vm.filename, data: _vm.blob },false)),_c('BaseButtonShare',_vm._b({attrs:{\"file-share\":\"\"}},'BaseButtonShare',{ files: _vm.files, disabled: !_vm.files },false))],1)],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <VRow ref=\"domToImageNode\" v-bind=\"$attrs\">\n    <slot />\n    <VCol cols=\"12\" class=\"dom-to-image-exclude\">\n      <BaseButton\n        icon=\"mdiExport\"\n        text=\"Export\"\n        v-bind=\"{ progress, status, error }\"\n        @click=\"exportImage\"\n      />\n      <BaseButtonDownloadData\n        v-bind=\"{ disabled: !blob, extension, filename, data: blob }\"\n      />\n      <BaseButtonShare file-share v-bind=\"{ files, disabled: !files }\" />\n    </VCol>\n  </VRow>\n</template>\n\n<script>\nimport exportImageMixinFactory from '@/mixins/export-image-mixin-factory'\nimport BaseButton from '@/components/base/button/BaseButton.vue'\nimport BaseButtonDownloadData from '@/components/base/button/download/BaseButtonDownloadData.vue'\nimport BaseButtonShare from '@/components/base/button/BaseButtonShare.vue'\n\nexport default {\n  components: { BaseButton, BaseButtonDownloadData, BaseButtonShare },\n  mixins: [exportImageMixinFactory()]\n}\n</script>\n","import mod from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewVRowWebShare.vue?vue&type=template&id=53512c70&\"\nimport script from \"./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('p',{staticClass:\"filters\"},[_c('span',[_vm._v(\" \"+_vm._s(_vm.$t('Current filter'))+\" \"),_c('span',{staticClass:\"filter\"})]),_c('a',{directives:[{name:\"t\",rawName:\"v-t\",value:('reset'),expression:\"'reset'\"}],staticClass:\"reset\",staticStyle:{\"display\":\"none\"}})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <p class=\"filters\">\n    <span>\n      {{ $t('Current filter') }}\n      <span class=\"filter\" />\n    </span>\n    <a v-t=\"'reset'\" class=\"reset\" style=\"display: none\" />\n  </p>\n</template>\n\n<script>\nexport default {\n\n}\n</script>\n","import mod from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewFilters.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewFilters.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewFilters.vue?vue&type=template&id=2f9280d1&\"\nimport script from \"./ChartViewFilters.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewFilters.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { TextFilterWidget } from 'dc'\nimport { merge } from 'lodash-es'\n\nimport kViewBlockMixin from '@/mixins/k-view-block'\n\nconst mixin = {\n  props: {\n    values: {\n      type: Array,\n      default: () => []\n    },\n    headers: {\n      type: Array,\n      default: () => []\n    },\n    messages: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data() {\n    return {\n      graphId: 'graph_' + this._uid,\n      totalCount: 0,\n      filterCount: 0\n    }\n  },\n  mounted() {\n    this.drawViz()\n  },\n  watch: {\n    values() {\n      this.drawViz()\n    }\n  },\n  methods: {\n    drawViz() { },\n    createTextFilterWidget(parent, placeholder = 'Search') {\n      const widget = new TextFilterWidget(parent)\n      widget.placeHolder(this.$tev(placeholder, placeholder))\n      return widget\n    }\n  }\n}\n\nexport default merge(mixin, kViewBlockMixin)\n","import * as d3 from 'd3'\nimport * as dc from 'dc'\n\n// Functions to add x-label & y-label to Row Charts (Unsupported by dc.js)\n// https://www.intothevoid.io/data-visualization/row-chart-axis-labels-dc-js/\n// Use with:\n// contentChart.on('postRender', function (chart) {\n//  addXLabel(chart, 'Hours watched')\n// })\nexport function addXLabel(chartToUpdate, displayText) {\n  const textSelection = chartToUpdate\n    .svg()\n    .append('text')\n    .attr('class', 'x-axis-label')\n    .attr('text-anchor', 'middle')\n    .attr('x', chartToUpdate.width() / 2)\n    .attr('y', chartToUpdate.height() - 10)\n    .text(displayText)\n  const textDims = textSelection.node().getBBox()\n  const chartMargins = chartToUpdate.margins()\n\n  // Dynamically adjust positioning after reading text dimension from DOM\n  textSelection\n    .attr(\n      'x',\n      chartMargins.left +\n        (chartToUpdate.width() - chartMargins.left - chartMargins.right) / 2\n    )\n    .attr('y', chartToUpdate.height() - Math.ceil(textDims.height) / 2)\n}\nexport function addYLabel(chartToUpdate, displayText) {\n  const textSelection = chartToUpdate\n    .svg()\n    .append('text')\n    .attr('class', 'y-axis-label')\n    .attr('text-anchor', 'middle')\n    .attr('transform', 'rotate(-90)')\n    .attr('x', -chartToUpdate.height() / 2)\n    .attr('y', 10)\n    .text(displayText)\n  const textDims = textSelection.node().getBBox()\n  const chartMargins = chartToUpdate.margins()\n\n  // Dynamically adjust positioning after reading text dimension from DOM\n  textSelection\n    .attr(\n      'x',\n      -chartMargins.top -\n        (chartToUpdate.height() - chartMargins.top - chartMargins.bottom) / 2\n    )\n    .attr(\n      'y',\n      Math.max(\n        Math.ceil(textDims.height),\n        chartMargins.left - Math.ceil(textDims.height) - 5\n      )\n    )\n}\n\n/**\n * Transform a simple group to a cumulative one in order\n * to make cumulative line chart\n * @param {Crossfilter group} group the group to transform\n * @returns the cumulative group\n */\nexport function createCumulativeGroup(group) {\n  return {\n    all() {\n      const cumulate = {}\n      return group.all().map(function(d) {\n        if (cumulate[d.key[0]]) {\n          cumulate[d.key[0]] += d.value\n        } else {\n          cumulate[d.key[0]] = d.value\n        }\n        return { key: d.key, value: cumulate[d.key[0]] }\n      })\n    }\n  }\n}\n\n/**\n * Remove datapoints that are null in a crossfilter group\n * Used to hide empty bins in a bar graph\n * @param {Crossfilter group} group the group to transform\n * @returns the cleaned group\n */\nexport function removeEmptyBins(group) {\n  return {\n    top(n) {\n      return group\n        .top(Infinity)\n        .filter(function(d) {\n          return d.value.count !== 0 && d.value !== 0\n        })\n        .slice(0, n)\n    }\n  }\n}\n\nexport function addPiePercentage(chart) {\n  chart.selectAll('text.pie-slice.pie-label').call(function(t) {\n    t.each(function(d) {\n      const self = d3.select(this)\n      let text = self.text()\n      if (text.length > 14) { text = text.substring(0, 14) + '.. ' }\n      if (text.length > 0) {\n        text =\n          text +\n          ' (' +\n          dc.utils.printSingleValue(\n            ((d.endAngle - d.startAngle) / (2 * Math.PI)) * 100\n          ) +\n          '%)'\n      }\n      self.text(text)\n    })\n  })\n}\n"],"names":[],"sourceRoot":""}