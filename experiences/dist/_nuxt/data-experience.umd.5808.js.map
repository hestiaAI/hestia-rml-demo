{"version":3,"file":"data-experience.umd.5808.js","mappings":";;;;;;;;;;;;;;;AAAA,+BAA+B,6BAA6B,+DAA+D,OAAO,aAAa,wBAAwB,OAAO,sBAAsB,YAAY,OAAO,kBAAkB,YAAY,GAAG,YAAY,aAAa,kBAAkB,iBAAiB,OAAO,4BAA4B,sBAAsB,8BAA8B,WAAW,EAAE,oCAAoC,yDAAyD,GAAG,gGAAgG,OAAO,mBAAmB,YAAY,GAAG,8CAA8C,OAAO,sBAAsB,YAAY,OAAO,qBAAqB,YAAY,GAAG,YAAY,aAAa,kBAAkB,iBAAiB,OAAO,4BAA4B,sBAAsB,8BAA8B,WAAW,EAAE,oCAAoC,iDAAiD,GAAG,yFAAyF,OAAO,sBAAsB,YAAY,GAAG,8CAA8C,OAAO,sBAAsB,YAAY,OAAO,yBAAyB,YAAY,GAAG,YAAY,aAAa,kBAAkB,iBAAiB,OAAO,4BAA4B,sBAAsB,8BAA8B,WAAW,EAAE,oCAAoC,yDAAyD,GAAG,2NAA2N,OAAO,sBAAsB,YAAY,OAAO,sBAAsB,YAAY,GAAG,YAAY,aAAa,kBAAkB,iBAAiB,OAAO,4BAA4B,sBAAsB,8BAA8B,WAAW,EAAE,oCAAoC,kDAAkD,GAAG,wGAAwG,OAAO,uBAAuB,YAAY,GAAG,8CAA8C,OAAO,sBAAsB,YAAY,OAAO,0BAA0B,YAAY,GAAG,YAAY,aAAa,kBAAkB,iBAAiB,OAAO,4BAA4B,sBAAsB,8BAA8B,WAAW,EAAE,oCAAoC,uDAAuD,GAAG,2FAA2F,OAAO,2BAA2B,YAAY,GAAG,8CAA8C,OAAO,sBAAsB,YAAY,OAAO,4BAA4B,YAAY,GAAG,YAAY,aAAa,kBAAkB,iBAAiB,OAAO,4BAA4B,sBAAsB,8BAA8B,WAAW,EAAE,oCAAoC,+DAA+D,GAAG,mJAAmJ,mCAAmC,sBAAsB,YAAY,GAAG,0BAA0B,OAAO,aAAa,oCAAoC,yBAAyB,yCAAyC;AACn9G;AACA;;;;;;;;;;;;;;;;;;;;;AC+GwB;AACA;AACc;AACX;AACyB;AACW;AACF;AAC+B;;AAE5F;AACA,uBAAuB,CAAC,yBAAe;;AAEvC,wFAAe;AACf,qCAAqC,oDAAkB,kDAAqB;AAC5E,WAAW,gBAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,YAAY;AAClB,MAAM,YAAY;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,WAAW;AACnC;AACA;AACA,MAAM,kBAAS;AACf;AACA;AACA,QAAQ,YAAY;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBACL;AACf;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,8BAAe;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,WAAW;AACnC;AACA,MAAM,kBAAS;AACf;AACA,QAAQ,YAAY;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBACL;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,kBAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,yBAAyB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,uBAAW;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,YAAY;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,kBAAS;AACnB,YAAY,YAAY;AACxB,YAAY,YAAY;AACxB;AACA;AACA,MAAM,YAAY;AAClB;AACA;AACA,CAAC;;;AClS4J,CAAC,6FAAe,mDAAG,EAAC;;;;ACAvE;AAC3B;AACL;;;AAG1E;AACA,CAAyG;AACzG,gBAAgB,sCAAU;AAC1B,EAAE,wDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,gEAAe;;;;;;;;;;;;;;;;AClBf,+BAA+B,6BAA6B,yBAAyB,qBAAqB,wDAAwD,0CAA0C,aAAa,0BAA0B,OAAO,mCAAmC,KAAK,yBAAyB,gBAAgB,8DAA8D,8CAA8C,4BAA4B,uFAAuF,sCAAsC,OAAO,iBAAiB,qBAAqB,wCAAwC;AACrqB;AACA;;;;;;;;;;;;;ACiByE;AACT;AACiC;AACvB;;AAE1E,kFAAe;AACf,0BAA0B,mDAAwB,wDAAiB;AACnE,WAAW,6CAAuB;AAClC,CAAC;;;AC3BsJ,CAAC,uFAAe,6CAAG,EAAC;;;;ACAvE;AAC3B;AACL;;;AAGpE;AACA,CAAyG;AACzG,gBAAgB,sCAAU;AAC1B,EAAE,kDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,0DAAe;;;;;;;;;;;;;;;;AClBf,+BAA+B,6BAA6B,eAAe,sBAAsB,yEAAyE,qBAAqB,YAAY,aAAa,4DAA4D,mCAAmC,kBAAkB;AACzU;AACA;;;;;ACSA,6EAAe;;AAEf,CAAC;;;ACboJ,CAAC,qFAAe,wCAAG,EAAC;;;;ACA1E;AAC3B;AACL;;;AAG/D;AACA,CAA4G;AAC5G,gBAAgB,sCAAU;AAC1B,EAAE,gDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,qDAAe;;;;;;;;;;;;AClBsB;AACJ;AACjC;AACmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB;AACxB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,iBAAiB;AACjB;AACA,yBAAyB,gDAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,+DAAe,8DAAK,QAAQ,qEAAe,CAAC;;;;;;;;;;;;;;;;;;;AC7CpB;AACA;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACG;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,iBAAiB;AACjB,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,mBAAmB,gDAAS;AAC5B;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,UAAU,sDAAyB;AACnC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH","sources":["webpack://data-experience/./src/components/chart/view/ChartViewIOSNetworkActivity.vue?a635","webpack://data-experience/src/components/chart/view/ChartViewIOSNetworkActivity.vue","webpack://data-experience/./src/components/chart/view/ChartViewIOSNetworkActivity.vue?5b07","webpack://data-experience/./src/components/chart/view/ChartViewIOSNetworkActivity.vue","webpack://data-experience/./src/components/chart/view/ChartViewVRowWebShare.vue?ea0d","webpack://data-experience/src/components/chart/view/ChartViewVRowWebShare.vue","webpack://data-experience/./src/components/chart/view/ChartViewVRowWebShare.vue?2101","webpack://data-experience/./src/components/chart/view/ChartViewVRowWebShare.vue","webpack://data-experience/./src/components/chart/view/filters/ChartViewFilters.vue?cff0","webpack://data-experience/src/components/chart/view/filters/ChartViewFilters.vue","webpack://data-experience/./src/components/chart/view/filters/ChartViewFilters.vue?e912","webpack://data-experience/./src/components/chart/view/filters/ChartViewFilters.vue","webpack://data-experience/./src/components/chart/view/mixin.js","webpack://data-experience/./src/components/chart/view/utils/dc-helpers.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('VContainer',[_c('ChartViewVRowWebShare',[_c('VCol',{attrs:{\"cols\":\"12\"}},[_c('VRow',[_c('VCol',{attrs:{\"cols\":\"12\",\"md\":\"4\"}},[_c('div',{attrs:{\"id\":`app-chart-${_vm.graphId}`}},[_c('div',{staticStyle:{\"display\":\"flex\"}},[_c('VTooltip',{attrs:{\"left\":\"\",\"max-width\":\"200\"},scopedSlots:_vm._u([{key:\"activator\",fn:function({ on, attrs }){return [_c('strong',_vm._g(_vm._b({},'strong',attrs,false),on),[_vm._v(\"Application ID\")])]}}])},[_c('span',[_vm._v(\"The bundle identifier of the initiating app.\")])]),_c('VSpacer'),_c('div',{attrs:{\"id\":`app-search-${_vm.graphId}`}})],1),_c('ChartViewFilters')],1)]),_c('VCol',{attrs:{\"cols\":\"12\",\"md\":\"4\"}},[_c('div',{attrs:{\"id\":`domain-chart-${_vm.graphId}`}},[_c('div',{staticStyle:{\"display\":\"flex\"}},[_c('VTooltip',{attrs:{\"left\":\"\",\"max-width\":\"200\"},scopedSlots:_vm._u([{key:\"activator\",fn:function({ on, attrs }){return [_c('strong',_vm._g(_vm._b({},'strong',attrs,false),on),[_vm._v(\"Domain\")])]}}])},[_c('span',[_vm._v(\"The domain of the network connection.\")])]),_c('VSpacer'),_c('div',{attrs:{\"id\":`domain-search-${_vm.graphId}`}})],1),_c('ChartViewFilters')],1)]),_c('VCol',{attrs:{\"cols\":\"12\",\"md\":\"4\"}},[_c('div',{attrs:{\"id\":`domainType-chart-${_vm.graphId}`}},[_c('div',{staticStyle:{\"display\":\"flex\"}},[_c('VTooltip',{attrs:{\"left\":\"\",\"max-width\":\"200\"},scopedSlots:_vm._u([{key:\"activator\",fn:function({ on, attrs }){return [_c('strong',_vm._g(_vm._b({},'strong',attrs,false),on),[_vm._v(\"Profiling user\")])]}}])},[_c('span',[_vm._v(\"Whether the domain has been identified as potentially collecting information across apps and sites, and potentially profiling users.\")])])],1),_c('ChartViewFilters')],1)])],1),_c('VRow',[_c('VCol',{attrs:{\"cols\":\"12\",\"md\":\"4\"}},[_c('div',{attrs:{\"id\":`context-chart-${_vm.graphId}`}},[_c('div',{staticStyle:{\"display\":\"flex\"}},[_c('VTooltip',{attrs:{\"left\":\"\",\"max-width\":\"200\"},scopedSlots:_vm._u([{key:\"activator\",fn:function({ on, attrs }){return [_c('strong',_vm._g(_vm._b({},'strong',attrs,false),on),[_vm._v(\"Context\")])]}}])},[_c('span',[_vm._v(\"The website that made the connection, if applicable.\")])]),_c('VSpacer'),_c('div',{attrs:{\"id\":`context-search-${_vm.graphId}`}})],1),_c('ChartViewFilters')],1)]),_c('VCol',{attrs:{\"cols\":\"12\",\"md\":\"4\"}},[_c('div',{attrs:{\"id\":`domainOwner-chart-${_vm.graphId}`}},[_c('div',{staticStyle:{\"display\":\"flex\"}},[_c('VTooltip',{attrs:{\"left\":\"\",\"max-width\":\"200\"},scopedSlots:_vm._u([{key:\"activator\",fn:function({ on, attrs }){return [_c('strong',_vm._g(_vm._b({},'strong',attrs,false),on),[_vm._v(\"Domain owner\")])]}}])},[_c('span',[_vm._v(\"The owner of the domain, if applicable.\")])]),_c('VSpacer'),_c('div',{attrs:{\"id\":`domainOwner-search-${_vm.graphId}`}})],1),_c('ChartViewFilters')],1)]),_c('VCol',{attrs:{\"cols\":\"12\",\"md\":\"4\"}},[_c('div',{attrs:{\"id\":`initiatedType-chart-${_vm.graphId}`}},[_c('div',{staticStyle:{\"display\":\"flex\"}},[_c('VTooltip',{attrs:{\"left\":\"\",\"max-width\":\"200\"},scopedSlots:_vm._u([{key:\"activator\",fn:function({ on, attrs }){return [_c('strong',_vm._g(_vm._b({},'strong',attrs,false),on),[_vm._v(\"Initiated by the app\")])]}}])},[_c('span',[_vm._v(\"Whether the app or the user initiated the connection.\")])])],1),_c('ChartViewFilters')],1)])],1)],1)],1),_c('VRow',[_c('div',{staticClass:\"dc-data-count\",attrs:{\"id\":`dc-data-count-${_vm.graphId}`}})]),_c('VRow',[_c('VCol',{attrs:{\"cols\":\"12\"}},[_c('UnitFilterableTable',_vm._b({},'UnitFilterableTable',{ headers: _vm.header, items: _vm.results },false))],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <VContainer>\r\n    <ChartViewVRowWebShare>\r\n      <VCol cols=\"12\">\r\n        <VRow>\r\n          <VCol cols=\"12\" md=\"4\">\r\n            <div :id=\"`app-chart-${graphId}`\">\r\n              <div style=\"display: flex\">\r\n                <VTooltip left max-width=\"200\">\r\n                  <template #activator=\"{ on, attrs }\">\r\n                    <strong v-bind=\"attrs\" v-on=\"on\">Application ID</strong>\r\n                  </template>\r\n                  <span>The bundle identifier of the initiating app.</span>\r\n                </VTooltip>\r\n                <VSpacer />\r\n                <div :id=\"`app-search-${graphId}`\" />\r\n              </div>\r\n              <ChartViewFilters />\r\n            </div>\r\n          </VCol>\r\n          <VCol cols=\"12\" md=\"4\">\r\n            <div :id=\"`domain-chart-${graphId}`\">\r\n              <div style=\"display: flex\">\r\n                <VTooltip left max-width=\"200\">\r\n                  <template #activator=\"{ on, attrs }\">\r\n                    <strong v-bind=\"attrs\" v-on=\"on\">Domain</strong>\r\n                  </template>\r\n                  <span>The domain of the network connection.</span>\r\n                </VTooltip>\r\n                <VSpacer />\r\n                <div :id=\"`domain-search-${graphId}`\" />\r\n              </div>\r\n              <ChartViewFilters />\r\n            </div>\r\n          </VCol>\r\n          <VCol cols=\"12\" md=\"4\">\r\n            <div :id=\"`domainType-chart-${graphId}`\">\r\n              <div style=\"display: flex\">\r\n                <VTooltip left max-width=\"200\">\r\n                  <template #activator=\"{ on, attrs }\">\r\n                    <strong v-bind=\"attrs\" v-on=\"on\">Profiling user</strong>\r\n                  </template>\r\n                  <span>Whether the domain has been identified as potentially\r\n                    collecting information across apps and sites, and\r\n                    potentially profiling users.</span>\r\n                </VTooltip>\r\n              </div>\r\n              <ChartViewFilters />\r\n            </div>\r\n          </VCol>\r\n        </VRow>\r\n        <VRow>\r\n          <VCol cols=\"12\" md=\"4\">\r\n            <div :id=\"`context-chart-${graphId}`\">\r\n              <div style=\"display: flex\">\r\n                <VTooltip left max-width=\"200\">\r\n                  <template #activator=\"{ on, attrs }\">\r\n                    <strong v-bind=\"attrs\" v-on=\"on\">Context</strong>\r\n                  </template>\r\n                  <span>The website that made the connection, if applicable.</span>\r\n                </VTooltip>\r\n                <VSpacer />\r\n                <div :id=\"`context-search-${graphId}`\" />\r\n              </div>\r\n              <ChartViewFilters />\r\n            </div>\r\n          </VCol>\r\n          <VCol cols=\"12\" md=\"4\">\r\n            <div :id=\"`domainOwner-chart-${graphId}`\">\r\n              <div style=\"display: flex\">\r\n                <VTooltip left max-width=\"200\">\r\n                  <template #activator=\"{ on, attrs }\">\r\n                    <strong v-bind=\"attrs\" v-on=\"on\">Domain owner</strong>\r\n                  </template>\r\n                  <span>The owner of the domain, if applicable.</span>\r\n                </VTooltip>\r\n                <VSpacer />\r\n                <div :id=\"`domainOwner-search-${graphId}`\" />\r\n              </div>\r\n              <ChartViewFilters />\r\n            </div>\r\n          </VCol>\r\n          <VCol cols=\"12\" md=\"4\">\r\n            <div :id=\"`initiatedType-chart-${graphId}`\">\r\n              <div style=\"display: flex\">\r\n                <VTooltip left max-width=\"200\">\r\n                  <template #activator=\"{ on, attrs }\">\r\n                    <strong\r\n                      v-bind=\"attrs\"\r\n                      v-on=\"on\"\r\n                    >Initiated by the app</strong>\r\n                  </template>\r\n                  <span>Whether the app or the user initiated the connection.</span>\r\n                </VTooltip>\r\n              </div>\r\n              <ChartViewFilters />\r\n            </div>\r\n          </VCol>\r\n        </VRow>\r\n      </VCol>\r\n    </ChartViewVRowWebShare>\r\n    <VRow>\r\n      <div :id=\"`dc-data-count-${graphId}`\" class=\"dc-data-count\" />\r\n    </VRow>\r\n    <VRow>\r\n      <VCol cols=\"12\">\r\n        <UnitFilterableTable v-bind=\"{ headers: header, items: results }\" />\r\n      </VCol>\r\n    </VRow>\r\n  </VContainer>\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from 'd3'\r\nimport * as dc from 'dc'\r\nimport crossfilter from 'crossfilter2'\r\nimport mixin from './mixin'\r\nimport { removeEmptyBins } from './utils/dc-helpers'\r\nimport ChartViewVRowWebShare from './ChartViewVRowWebShare.vue'\r\nimport ChartViewFilters from './filters/ChartViewFilters.vue'\r\nimport UnitFilterableTable from '@/components/unit/filterable-table/UnitFilterableTable.vue'\r\n\r\n// Remove warning on default colorscheme, even if not used..\r\ndc.config.defaultColors(d3.schemePaired)\r\n\r\nexport default {\r\n  components: { ChartViewVRowWebShare, ChartViewFilters, UnitFilterableTable },\r\n  mixins: [mixin],\r\n  props: {},\r\n  data() {\r\n    return {\r\n      header: [\r\n        { text: 'App', value: 'bundleId' },\r\n        { text: 'Domain', value: 'domain' },\r\n        { text: 'Domain Type', value: 'domainType' },\r\n        { text: 'Domain Owner', value: 'domainOwner' },\r\n        { text: 'Context', value: 'context' },\r\n        { text: 'Initated by', value: 'initiatedType' },\r\n        { text: 'Hits', value: 'hits' }\r\n      ],\r\n      results: [],\r\n      colorPalette: ['#58539E', '#847CEB', '#605BAB', '#4A4685', '#9498F2']\r\n    }\r\n  },\r\n  methods: {\r\n    resetAll() {\r\n      dc.filterAll()\r\n      dc.renderAll()\r\n    },\r\n    decodeDefault(str) {\r\n      try {\r\n        return str && str !== 'undefined'\r\n          ? decodeURIComponent(escape(str))\r\n          : 'Unknown'\r\n      } catch (e) {\r\n        console.error(e)\r\n        return str || 'Unknown'\r\n      }\r\n    },\r\n    createTopRowChart(ndx, fieldAccessor, valueAccessor) {\r\n      // Create and bind charts to their respective divs\r\n      const chart = new dc.RowChart(`#${fieldAccessor}-chart-${this.graphId}`)\r\n      const search = this.createTextFilterWidget(`#${fieldAccessor}-search-${this.graphId}`)\r\n      // Bind reset filters buttons\r\n      d3.select(`#${fieldAccessor}-chart-${this.graphId} a.reset`).on('click', function() {\r\n        chart.filterAll()\r\n        search.filterAll()\r\n        dc.redrawAll()\r\n      })\r\n      // Create dimensions\r\n      const chartDimension = ndx.dimension(d => d[fieldAccessor])\r\n      search.dimension(ndx.dimension(d => d[fieldAccessor].toLowerCase()))\r\n      // Create groups\r\n      const chartGroup = chartDimension\r\n        .group()\r\n        .reduceSum(d => (valueAccessor ? d[valueAccessor] : 1))\r\n      // Render top row chart\r\n      const width = d3\r\n        .select(`#${fieldAccessor}-chart-${this.graphId}`)\r\n        .node()\r\n        .getBoundingClientRect().width\r\n      chart\r\n        .width(width)\r\n        .height(252)\r\n        .margins({ top: 20, left: 10, right: 10, bottom: 20 })\r\n        .group(removeEmptyBins(chartGroup))\r\n        .dimension(chartDimension)\r\n        .ordinalColors(this.colorPalette)\r\n        .label(d => d.key)\r\n        .data(group => group.top(10))\r\n        .title(d => d.value)\r\n        .elasticX(true)\r\n        .xAxis()\r\n        .ticks(4)\r\n    },\r\n    createPieChart(ndx, fieldAccessor, valueAccessor) {\r\n      // Create and bind charts to their respective divs\r\n      const chart = new dc.PieChart(`#${fieldAccessor}-chart-${this.graphId}`)\r\n      // Bind reset filters buttons\r\n      d3.select(`#${fieldAccessor}-chart-${this.graphId} a.reset`).on('click', function() {\r\n        chart.filterAll()\r\n        dc.redrawAll()\r\n      })\r\n      // Create dimensions\r\n      const chartDimension = ndx.dimension(d => d[fieldAccessor])\r\n      // Create groups\r\n      const chartGroup = chartDimension\r\n        .group()\r\n        .reduceSum(d => (valueAccessor ? d[valueAccessor] : 1))\r\n      // Render pie chart\r\n      const width = d3\r\n        .select(`#${fieldAccessor}-chart-${this.graphId}`)\r\n        .node()\r\n        .getBoundingClientRect().width\r\n      chart\r\n        .width(width)\r\n        .height(220)\r\n        .radius(width / 2.5)\r\n        .innerRadius(width / 8)\r\n        .dimension(chartDimension)\r\n        .group(chartGroup)\r\n        .valueAccessor(d => d.value)\r\n        .title(d => d.value + ' records')\r\n        .ordinalColors(this.colorPalette)\r\n      chart.on('pretransition', function(chart) {\r\n        chart.selectAll('text.pie-slice.pie-label').call(function(t) {\r\n          t.each(function(d) {\r\n            const self = d3.select(this)\r\n            let text = self.text()\r\n            if (text.length > 14) {\r\n              text = text.substring(0, 14) + '.. '\r\n            }\r\n            if (text.length > 0) {\r\n              text =\r\n                                text +\r\n                                    ' (' +\r\n                                    dc.utils.printSingleValue(((d.endAngle - d.startAngle) / (2 * Math.PI)) * 100) +\r\n                                    '%)'\r\n            }\r\n            self.text(text)\r\n          })\r\n        })\r\n      })\r\n    },\r\n    drawViz() {\r\n      // Parse and format data\r\n      this.results = this.values.map((d) => {\r\n        return {\r\n          app: this.decodeDefault(d.bundleId),\r\n          domain: this.decodeDefault(d.domain),\r\n          domainType: d.domainType === '2' || d.domainType === 'false' ? 'No' : 'Yes',\r\n          domainOwner: this.decodeDefault(d.domainOwner),\r\n          context: this.decodeDefault(d.context),\r\n          initiatedType: d.initiatedType === 'NonAppInitiated' || d.initiatedType === 'false'\r\n            ? 'No'\r\n            : 'Yes',\r\n          hits: +d.hits\r\n        }\r\n      })\r\n      const ndx = crossfilter(this.results)\r\n      this.createTopRowChart(ndx, 'app', 'hits')\r\n      this.createTopRowChart(ndx, 'domain', 'hits')\r\n      this.createTopRowChart(ndx, 'context', 'hits')\r\n      this.createTopRowChart(ndx, 'domainOwner', 'hits')\r\n      this.createPieChart(ndx, 'domainType', 'hits')\r\n      this.createPieChart(ndx, 'initiatedType', 'hits')\r\n      // const tableCount = new dc.DataCount(`#dc-data-count-${this.graphId}`)\r\n      // Render counter and table\r\n      const all = ndx.groupAll()\r\n      const allDim = ndx.dimension(d => d)\r\n      const tableCount = new dc.DataCount(`#dc-data-count-${this.graphId}`)\r\n      tableCount\r\n        .crossfilter(ndx)\r\n        .groupAll(all)\r\n        .html({\r\n          some: '<strong>%filter-count</strong> selected out of <strong>%total-count</strong> records' +\r\n                    \" | <a class='resetAll'>Reset All</a>\",\r\n          all: 'All <strong>%total-count</strong> records' +\r\n                    ' selected. Please click on the graph to apply filters.'\r\n        })\r\n        .on('pretransition', (chart, filter) => {\r\n          this.results = allDim.top(all.value())\r\n          d3.select(`#dc-data-count-${this.graphId} a.resetAll`).on('click', () => {\r\n            dc.filterAll()\r\n            dc.renderAll()\r\n          })\r\n        })\r\n      dc.renderAll()\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewIOSNetworkActivity.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewIOSNetworkActivity.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewIOSNetworkActivity.vue?vue&type=template&id=c3e46cb0&\"\nimport script from \"./ChartViewIOSNetworkActivity.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewIOSNetworkActivity.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('VRow',_vm._b({ref:\"domToImageNode\"},'VRow',_vm.$attrs,false),[_vm._t(\"default\"),_c('VCol',{staticClass:\"dom-to-image-exclude\",attrs:{\"cols\":\"12\"}},[_c('BaseButton',_vm._b({attrs:{\"icon\":\"mdiExport\",\"text\":\"Export\"},on:{\"click\":_vm.exportImage}},'BaseButton',{ progress: _vm.progress, status: _vm.status, error: _vm.error },false)),_c('BaseButtonDownloadData',_vm._b({},'BaseButtonDownloadData',{ disabled: !_vm.blob, extension: _vm.extension, filename: _vm.filename, data: _vm.blob },false)),_c('BaseButtonShare',_vm._b({attrs:{\"file-share\":\"\"}},'BaseButtonShare',{ files: _vm.files, disabled: !_vm.files },false))],1)],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <VRow ref=\"domToImageNode\" v-bind=\"$attrs\">\r\n    <slot />\r\n    <VCol cols=\"12\" class=\"dom-to-image-exclude\">\r\n      <BaseButton\r\n        icon=\"mdiExport\"\r\n        text=\"Export\"\r\n        v-bind=\"{ progress, status, error }\"\r\n        @click=\"exportImage\"\r\n      />\r\n      <BaseButtonDownloadData\r\n        v-bind=\"{ disabled: !blob, extension, filename, data: blob }\"\r\n      />\r\n      <BaseButtonShare file-share v-bind=\"{ files, disabled: !files }\" />\r\n    </VCol>\r\n  </VRow>\r\n</template>\r\n\r\n<script>\r\nimport exportImageMixinFactory from '@/mixins/export-image-mixin-factory'\r\nimport BaseButton from '@/components/base/button/BaseButton.vue'\r\nimport BaseButtonDownloadData from '@/components/base/button/download/BaseButtonDownloadData.vue'\r\nimport BaseButtonShare from '@/components/base/button/BaseButtonShare.vue'\r\n\r\nexport default {\r\n  components: { BaseButton, BaseButtonDownloadData, BaseButtonShare },\r\n  mixins: [exportImageMixinFactory()]\r\n}\r\n</script>\r\n","import mod from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewVRowWebShare.vue?vue&type=template&id=53512c70&\"\nimport script from \"./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('p',{staticClass:\"filters\"},[_c('span',[_vm._v(\" \"+_vm._s(_vm.$t('Current filter'))+\" \"),_c('span',{staticClass:\"filter\"})]),_c('a',{directives:[{name:\"t\",rawName:\"v-t\",value:('reset'),expression:\"'reset'\"}],staticClass:\"reset\",staticStyle:{\"display\":\"none\"}})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <p class=\"filters\">\r\n    <span>\r\n      {{ $t('Current filter') }}\r\n      <span class=\"filter\" />\r\n    </span>\r\n    <a v-t=\"'reset'\" class=\"reset\" style=\"display: none\" />\r\n  </p>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n\r\n}\r\n</script>\r\n","import mod from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewFilters.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewFilters.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewFilters.vue?vue&type=template&id=2f9280d1&\"\nimport script from \"./ChartViewFilters.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewFilters.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { TextFilterWidget } from 'dc'\r\nimport { merge } from 'lodash-es'\r\n\r\nimport kViewBlockMixin from '@/mixins/k-view-block'\r\n\r\nconst mixin = {\r\n  props: {\r\n    values: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    headers: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    messages: {\r\n      type: Object,\r\n      default: () => ({})\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      graphId: 'graph_' + this.$store.state.xp.currentTab,\r\n      totalCount: 0,\r\n      filterCount: 0\r\n    }\r\n  },\r\n  mounted() {\r\n    this.drawViz()\r\n  },\r\n  watch: {\r\n    values() {\r\n      this.drawViz()\r\n    }\r\n  },\r\n  methods: {\r\n    drawViz() { },\r\n    createTextFilterWidget(parent, placeholder = 'Search') {\r\n      const widget = new TextFilterWidget(parent)\r\n      widget.placeHolder(this.$tev(placeholder, placeholder))\r\n      return widget\r\n    }\r\n  }\r\n}\r\n\r\nexport default merge(mixin, kViewBlockMixin)\r\n","import * as d3 from 'd3'\r\nimport * as dc from 'dc'\r\n\r\n// Functions to add x-label & y-label to Row Charts (Unsupported by dc.js)\r\n// https://www.intothevoid.io/data-visualization/row-chart-axis-labels-dc-js/\r\n// Use with:\r\n// contentChart.on('postRender', function (chart) {\r\n//  addXLabel(chart, 'Hours watched')\r\n// })\r\nexport function addXLabel(chartToUpdate, displayText) {\r\n  const textSelection = chartToUpdate\r\n    .svg()\r\n    .append('text')\r\n    .attr('class', 'x-axis-label')\r\n    .attr('text-anchor', 'middle')\r\n    .attr('x', chartToUpdate.width() / 2)\r\n    .attr('y', chartToUpdate.height() - 10)\r\n    .text(displayText)\r\n  const textDims = textSelection.node().getBBox()\r\n  const chartMargins = chartToUpdate.margins()\r\n\r\n  // Dynamically adjust positioning after reading text dimension from DOM\r\n  textSelection\r\n    .attr(\r\n      'x',\r\n      chartMargins.left +\r\n        (chartToUpdate.width() - chartMargins.left - chartMargins.right) / 2\r\n    )\r\n    .attr('y', chartToUpdate.height() - Math.ceil(textDims.height) / 2)\r\n}\r\nexport function addYLabel(chartToUpdate, displayText) {\r\n  const textSelection = chartToUpdate\r\n    .svg()\r\n    .append('text')\r\n    .attr('class', 'y-axis-label')\r\n    .attr('text-anchor', 'middle')\r\n    .attr('transform', 'rotate(-90)')\r\n    .attr('x', -chartToUpdate.height() / 2)\r\n    .attr('y', 10)\r\n    .text(displayText)\r\n  const textDims = textSelection.node().getBBox()\r\n  const chartMargins = chartToUpdate.margins()\r\n\r\n  // Dynamically adjust positioning after reading text dimension from DOM\r\n  textSelection\r\n    .attr(\r\n      'x',\r\n      -chartMargins.top -\r\n        (chartToUpdate.height() - chartMargins.top - chartMargins.bottom) / 2\r\n    )\r\n    .attr(\r\n      'y',\r\n      Math.max(\r\n        Math.ceil(textDims.height),\r\n        chartMargins.left - Math.ceil(textDims.height) - 5\r\n      )\r\n    )\r\n}\r\n\r\n/**\r\n * Transform a simple group to a cumulative one in order\r\n * to make cumulative line chart\r\n * @param {Crossfilter group} group the group to transform\r\n * @returns the cumulative group\r\n */\r\nexport function createCumulativeGroup(group) {\r\n  return {\r\n    all() {\r\n      const cumulate = {}\r\n      return group.all().map(function(d) {\r\n        if (cumulate[d.key[0]]) {\r\n          cumulate[d.key[0]] += d.value\r\n        } else {\r\n          cumulate[d.key[0]] = d.value\r\n        }\r\n        return { key: d.key, value: cumulate[d.key[0]] }\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Remove datapoints that are null in a crossfilter group\r\n * Used to hide empty bins in a bar graph\r\n * @param {Crossfilter group} group the group to transform\r\n * @returns the cleaned group\r\n */\r\nexport function removeEmptyBins(group) {\r\n  return {\r\n    top(n) {\r\n      return group\r\n        .top(Infinity)\r\n        .filter(function(d) {\r\n          return d.value.count !== 0 && d.value !== 0\r\n        })\r\n        .slice(0, n)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addPiePercentage(chart) {\r\n  chart.selectAll('text.pie-slice.pie-label').call(function(t) {\r\n    t.each(function(d) {\r\n      const self = d3.select(this)\r\n      let text = self.text()\r\n      if (text.length > 14) { text = text.substring(0, 14) + '.. ' }\r\n      if (text.length > 0) {\r\n        text =\r\n          text +\r\n          ' (' +\r\n          dc.utils.printSingleValue(\r\n            ((d.endAngle - d.startAngle) / (2 * Math.PI)) * 100\r\n          ) +\r\n          '%)'\r\n      }\r\n      self.text(text)\r\n    })\r\n  })\r\n}\r\n"],"names":[],"sourceRoot":""}