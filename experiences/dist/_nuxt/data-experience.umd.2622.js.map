{"version":3,"file":"data-experience.umd.2622.js","mappings":";;;;;;;;;;;;;;;AAAA,+BAA+B,6BAA6B,kCAAkC,aAAa,sBAAsB,QAAQ,kBAAkB;AAC3J;AACA;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,0DAAe,aAAa,EAAC;;;;;;AC/FL;AACqB;AAClB;;AAE3B,mFAAe;AACf;AACA,WAAW,gBAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,kBAAS;AACf,iBAAiB,kBACF;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAM;AAC7B;AACA;AACA,uBAAuB,gBAAM;AAC7B;AACA;AACA,mBAAmB,wBAAc;;AAEjC;AACA,yBAAyB,4BACD;AACxB;AACA;AACA,UAAU,qBAAa;AACvB;AACA;AACA;AACA,UAAU,sBAAY;AACtB;AACA;AACA;AACA,yBAAyB,wBAAc;AACvC,yBAAyB,0BAAgB;AACzC;AACA;AACA,UAAU,wBACe;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,iBACO;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;ACzOuJ,CAAC,wFAAe,8CAAG,EAAC;;;;ACAvE;AAC3B;AACL;;;AAGrE;AACA,CAAyG;AACzG,gBAAgB,sCAAU;AAC1B,EAAE,mDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,2DAAe;;;;;;;;;;;;AClBsB;AACJ;AACjC;AACmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB;AACxB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,iBAAiB;AACjB;AACA,yBAAyB,gDAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,+DAAe,8DAAK,QAAQ,qEAAe,CAAC","sources":["webpack://data-experience/./src/components/chart/view/ChartViewDirectedGraph.vue?6cb7","webpack://data-experience/./node_modules/d3-force-boundary/dist/d3-force-boundary.esm.js","webpack://data-experience/src/components/chart/view/ChartViewDirectedGraph.vue","webpack://data-experience/./src/components/chart/view/ChartViewDirectedGraph.vue?69c5","webpack://data-experience/./src/components/chart/view/ChartViewDirectedGraph.vue","webpack://data-experience/./src/components/chart/view/mixin.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('VContainer',[_c('div',{staticStyle:{\"position\":\"relative\"},attrs:{\"id\":_vm.graphId}}),_c('div',[_c('p',[_vm._v(\" \"+_vm._s(_vm.$t('directed-graph-disclaimer'))+\" \")])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","// https://observablehq.com/@john-guerra/d3-force-boundary v0.0.2 Copyright 2022 John Alexis Guerra GÃ³mez\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction forceBoundary(x0, y0, x1, y1) {\n  var strength = constant(0.1),\n      hardBoundary = true,\n      border = constant( Math.min((x1 - x0)/2, (y1 - y0)/2) ),\n      nodes,\n      strengthsX,\n      strengthsY,\n      x0z, x1z,\n      y0z, y1z,\n      borderz,\n      halfX, halfY;\n\n  if (typeof x0 !== \"function\") x0 = constant(x0 == null ? -100 : +x0);\n  if (typeof x1 !== \"function\") x1 = constant(x1 == null ? 100 : +x1);\n  if (typeof y0 !== \"function\") y0 = constant(y0 == null ? -100 : +y0);\n  if (typeof y1 !== \"function\") y1 = constant(y1 == null ? 100 : +y1);\n\n  function getVx(halfX, x, strengthX, border, alpha) {\n    return (halfX - x) *  Math.min(2, Math.abs( halfX - x) / halfX) * strengthX * alpha;\n  }\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i];\n      // debugger;\n      if ((node.x < (x0z[i] + borderz[i]) || node.x > (x1z[i] - borderz[i])) ||\n        (node.y < (y0z[i] + borderz[i]) || node.y > (y1z[i] - borderz[i]))) {\n        node.vx += getVx(halfX[i], node.x, strengthsX[i], borderz[i], alpha);\n        node.vy += getVx(halfY[i], node.y, strengthsY[i], borderz[i], alpha);\n      } else if (node.y < (y0z[i] + borderz[i]) || node.y > (y1z[i] - borderz[i])) ;\n\n      if (hardBoundary) {\n        if (node.x >= x1z[i]) node.vx += x1z[i] - node.x;\n        if (node.x <= x0z[i]) node.vx += x0z[i] - node.x;\n        if (node.y >= y1z[i]) node.vy += y1z[i] - node.y;\n        if (node.y <= y0z[i]) node.vy += y0z[i] - node.y;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengthsX = new Array(n);\n    strengthsY = new Array(n);\n    x0z = new Array(n);\n    y0z = new Array(n);\n    x1z = new Array(n);\n    y1z = new Array(n);\n    halfY = new Array(n);\n    halfX = new Array(n);\n    borderz = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      strengthsX[i] = (isNaN(x0z[i] = +x0(nodes[i], i, nodes)) ||\n        isNaN(x1z[i] = +x1(nodes[i], i, nodes))) ? 0 : +strength(nodes[i], i, nodes);\n      strengthsY[i] = (isNaN(y0z[i] = +y0(nodes[i], i, nodes)) ||\n        isNaN(y1z[i] = +y1(nodes[i], i, nodes))) ? 0 : +strength(nodes[i], i, nodes);\n      halfX[i] = x0z[i] + (x1z[i] - x0z[i])/2,\n      halfY[i] = y0z[i] + (y1z[i] - y0z[i])/2;\n      borderz[i] = +border(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x0;\n  };\n\n  force.x1 = function(_) {\n    return arguments.length ? (x1 = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x1;\n  };\n\n  force.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y0;\n  };\n\n  force.y1 = function(_) {\n    return arguments.length ? (y1 = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y1;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.border = function(_) {\n    return arguments.length ? (border = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : border;\n  };\n\n  force.hardBoundary = function(_) {\n    return arguments.length ? (hardBoundary = _, force) : hardBoundary;\n  };\n\n  return force;\n}\n\nexport default forceBoundary;\n","<template>\r\n  <VContainer>\r\n    <div :id=\"graphId\" style=\"position: relative\" />\r\n    <div>\r\n      <p>\r\n        {{ $t('directed-graph-disclaimer') }}\r\n      </p>\r\n    </div>\r\n  </VContainer>\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from 'd3'\r\nimport forceBoundary from 'd3-force-boundary' // Faire joli TODO check\r\nimport mixin from './mixin'\r\n\r\nexport default {\r\n  name: 'NetworkXGraph',\r\n  mixins: [mixin],\r\n  props: {\r\n    width: {\r\n      type: Number,\r\n      default: () => 900\r\n    },\r\n    height: {\r\n      type: Number,\r\n      default: () => 500\r\n    },\r\n    padding: {\r\n      type: Number,\r\n      default: () => 0\r\n    },\r\n    margin: {\r\n      type: Number,\r\n      default: () => 0\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      jsonData: this.values[0].jsonData || { nodes: [], links: {} }\r\n    }\r\n  },\r\n  methods: {\r\n    drawViz() {\r\n      // Init of everything\r\n      // Init Svg container\r\n      d3.select('#' + this.graphId + ' svg').remove()\r\n      this.svg = d3\r\n        .select('#' + this.graphId)\r\n        .append('svg')\r\n        .attr('preserveAspectRatio', 'xMinYMin meet')\r\n        .attr('viewBox', '0 0 ' + this.width + ' ' + this.height)\r\n        .style('padding', this.padding)\r\n        .style('margin', this.margin)\r\n        .classed('svg-content', true)\r\n      this.updateViz()\r\n    },\r\n    updateViz() {\r\n      // Nodes size scale\r\n      const minValue = d3.min(this.jsonData.nodes, function(d) {\r\n        return +d.size\r\n      })\r\n      const maxValue = d3.max(this.jsonData.nodes, function(d) {\r\n        return +d.size\r\n      })\r\n      const size = d3.scaleLinear().domain([minValue, maxValue]).range([10, 40])\r\n\r\n      // Init simulation\r\n      const simulation = d3\r\n        .forceSimulation()\r\n        .force(\r\n          'boundary',\r\n          forceBoundary(30, 30, this.width - 30, this.height - 30)\r\n        )\r\n        .force(\r\n          'link',\r\n          d3.forceLink().id(function(d) {\r\n            return d.id\r\n          })\r\n        )\r\n        .force('center', d3.forceCenter(this.width / 2, this.height / 2))\r\n        .force('charge', d3.forceManyBody().strength(-400))\r\n        .force(\r\n          'collide',\r\n          d3\r\n            .forceCollide()\r\n            .radius(function(d) {\r\n              return 16 + size(d.size)\r\n            })\r\n            .iterations(2)\r\n        )\r\n\r\n      // Draw links\r\n      // Arrow definition\r\n      //      this.svg\r\n      //        .append('defs')\r\n      //        .append('marker')\r\n      //        .attr({\r\n      //          id: 'arrowhead',\r\n      //          viewBox: '-0 -5 10 10',\r\n      //          refX: 13,\r\n      //          refY: 0,\r\n      //          orient: 'auto',\r\n      //          markerWidth: 13,\r\n      //          markerHeight: 13,\r\n      //          xoverflow: 'visible'\r\n      //        })\r\n      //        .append('svg:path')\r\n      //        .attr('d', 'M 0,-5 L 10 ,0 L 0,5')\r\n      //        .attr('fill', '#999')\r\n      //        .style('stroke', 'none')\r\n\r\n      const link = this.svg\r\n        .append('g')\r\n        .attr('id', 'links')\r\n        .selectAll('line')\r\n        .data(this.jsonData.links)\r\n        .enter()\r\n        .append('line')\r\n        .attr('stroke-width', d => d.weight)\r\n        .attr('stroke', 'grey')\r\n        .attr('fill', 'none')\r\n      //        .attr('marker-end', 'url(#arrow)')\r\n\r\n      // Draw nodes\r\n      const node = this.svg\r\n        .append('g')\r\n        .attr('class', 'nodes')\r\n        .selectAll('g')\r\n        .data(this.jsonData.nodes)\r\n        .enter()\r\n        .append('g')\r\n\r\n      node\r\n        .append('circle')\r\n        .attr('r', d => size(d.size))\r\n        .attr('fill', d => d.color)\r\n        .attr('stroke', 'white')\r\n        .attr('stroke-opacity', 1)\r\n        .attr('stroke-width', function(d) {\r\n          return 0.05 * size(d.size)\r\n        })\r\n        .call(\r\n          d3\r\n            .drag()\r\n            .on('start', dragstarted)\r\n            .on('drag', dragged)\r\n            .on('end', dragended)\r\n        )\r\n\r\n      // Draw labels of nodes\r\n      node\r\n        .append('text')\r\n        .text(d => d.id)\r\n        .attr('x', 0)\r\n        .attr('y', 3)\r\n        .attr('text-anchor', 'middle')\r\n        .attr('text-baseline', 'middle')\r\n        // prevent text-selection\r\n        .style('user-select', 'none')\r\n        // prevent pointer events on text node\r\n        // to enable dragging the circle element\r\n        // when the text element is clicked\r\n        .style('pointer-events', 'none')\r\n\r\n      // Title for nodes\r\n      node.append('title').text(d => d.id)\r\n\r\n      // Start simulation\r\n      simulation.nodes(this.jsonData.nodes).on('tick', ticked)\r\n\r\n      simulation.force('link').links(this.jsonData.links)\r\n\r\n      function ticked() {\r\n        node.attr('transform', function(d) {\r\n          // radius = 3 + Math.sqrt(d.size)*2;\r\n          return 'translate(' + d.x + ',' + d.y + ')'\r\n        })\r\n\r\n        link\r\n          .attr('x1', function(d) {\r\n            return d.source.x\r\n          })\r\n          .attr('y1', function(d) {\r\n            return d.source.y\r\n          })\r\n          .attr('x2', function(d) {\r\n            return d.target.x\r\n          })\r\n          .attr('y2', function(d) {\r\n            return d.target.y\r\n          })\r\n      }\r\n\r\n      // Add Legend\r\n      /*\r\n      svg.append(\"g\")\r\n        .attr(\"class\", \"legend\")\r\n        .style(\"font-size\", \"0.5rem\")\r\n        .attr(\"transform\", \"translate(20,20)\");\r\n\r\n      const colorLegend = d3.legendColor()\r\n        .labelFormat(d3.format(\".0f\"))\r\n        .shape(\"path\", d3.symbol().type(d3.symbolCircle).size(150)())\r\n        .cells(3)\r\n        .title(\"\")\r\n        .labelWrap(40)\r\n        .titleWidth(60)\r\n        .orient(\"vertical\")\r\n        .scale(color)\r\n        .labelOffset(12);\r\n\r\n      svg.select(\".legend\")\r\n        .call(colorLegend);\r\n      */\r\n      function dragstarted(evt) {\r\n        if (!evt.active) { simulation.alphaTarget(0.3).restart() }\r\n        evt.subject.fx = evt.subject.x\r\n        evt.subject.fy = evt.subject.y\r\n      }\r\n\r\n      function dragged(evt) {\r\n        evt.subject.fx = evt.x\r\n        evt.subject.fy = evt.y\r\n      }\r\n\r\n      function dragended(evt) {\r\n        if (!evt.active) { simulation.alphaTarget(0) }\r\n        evt.subject.fx = null\r\n        evt.subject.fy = null\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewDirectedGraph.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewDirectedGraph.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewDirectedGraph.vue?vue&type=template&id=420d79e2&\"\nimport script from \"./ChartViewDirectedGraph.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewDirectedGraph.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { TextFilterWidget } from 'dc'\r\nimport { merge } from 'lodash-es'\r\n\r\nimport kViewBlockMixin from '@/mixins/k-view-block'\r\n\r\nconst mixin = {\r\n  props: {\r\n    values: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    headers: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    messages: {\r\n      type: Object,\r\n      default: () => ({})\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      graphId: 'graph_' + this.$store.state.xp.currentTab,\r\n      totalCount: 0,\r\n      filterCount: 0\r\n    }\r\n  },\r\n  mounted() {\r\n    this.drawViz()\r\n  },\r\n  watch: {\r\n    values() {\r\n      this.drawViz()\r\n    }\r\n  },\r\n  methods: {\r\n    drawViz() { },\r\n    createTextFilterWidget(parent, placeholder = 'Search') {\r\n      const widget = new TextFilterWidget(parent)\r\n      widget.placeHolder(this.$tev(placeholder, placeholder))\r\n      return widget\r\n    }\r\n  }\r\n}\r\n\r\nexport default merge(mixin, kViewBlockMixin)\r\n"],"names":[],"sourceRoot":""}