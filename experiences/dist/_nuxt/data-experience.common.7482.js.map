{"version":3,"file":"data-experience.common.7482.js","mappings":";;;;;;;;;;;;;;;AAAA,+BAA+B,6BAA6B,mCAAmC,OAAO,YAAY,aAAa,OAAO,aAAa,YAAY,OAAO,wCAAwC,aAAa,yCAAyC,wEAAwE,uCAAuC,iCAAiC,kCAAkC,qEAAqE,OAAO,YAAY,YAAY,OAAO,oCAAoC,YAAY,aAAa,kBAAkB,aAAa,yCAAyC,+CAA+C,0BAA0B,OAAO,uBAAuB,8CAA8C,OAAO,YAAY,YAAY,OAAO,iCAAiC,aAAa,aAAa,gFAAgF,iCAAiC,0CAA0C,OAAO,YAAY,YAAY,OAAO,qCAAqC,YAAY,aAAa,kBAAkB,aAAa,aAAa,0FAA0F,iCAAiC,0BAA0B,OAAO,wBAAwB,4EAA4E,4BAA4B,0DAA0D,2CAA2C,yBAAyB,yCAAyC;AAC1oD;AACA;;;;;;;;;;;;;;;;;;;;;;;AC+CwB;AACA;AACc;AACX;AAC+B;AACwB;AACrB;AACO;AACwB;;AAE5F;AACA,uBAAuB,CAAC,yBAAe;;AAEvC,gGAAe;AACf,4CAA4C,2DAAkB,qDAAwB,wDAAqB;AAC3G,WAAW,gBAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uBAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,qBAAW;AAC5B;AACA;AACA;AACA,kBAAkB,uBAAW;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,YAAY;AAC/C,6BAA6B,WAAW;AACxC,+BAA+B,WAAW;AAC1C,gCAAgC,WAAW;AAC3C,4BAA4B,WAAW;AACvC;AACA;AACA;AACA;AACA;AACA,MAAM,kBAAS;AACf;AACA;AACA,QAAQ,YAAY;AACpB;AACA,MAAM,kBAAS;AACf;AACA,QAAQ,YAAY;AACpB;AACA,MAAM,kBAAS;AACf;AACA,QAAQ,YAAY;AACpB;AACA,MAAM,kBAAS;AACf;AACA,QAAQ,YAAY;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBACH;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oCAAqB;AACpC;AACA,eAAe,2BAAiB;AAChC,WAAW,qBACS;AACpB;AACA,YAAY,mCAAkB;AAC9B,YAAY,mCAAkB;AAC9B;AACA,WAAW,wBAAc;AACzB;AACA;AACA;AACA,gBAAgB,qBAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBACS;AACpB;AACA,YAAY,mCAAkB;AAC9B,YAAY,mCAAkB;AAC9B;AACA,eAAe,gCAAgB;AAC/B;AACA;AACA,gBAAgB,qBAAW;AAC3B;AACA;AACA;AACA;AACA,cAAc,kBACC;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,kBACC;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,kBACC;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,YAAY;AAClB;AACA;AACA,CAAC;;;AC1UoK,CAAC,qGAAe,2DAAG,EAAC;;;;ACAvE;AAC3B;AACL;;;AAGlF;AACA,CAAyG;AACzG,gBAAgB,sCAAU;AAC1B,EAAE,gEAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,wEAAe;;;;;;;;;;;;;;;;AClBf,+BAA+B,6BAA6B,mEAAmE,OAAO,kDAAkD,sBAAsB,+BAA+B,mBAAmB,yCAAyC,sCAAsC,GAAG,YAAY,iBAAiB,6BAA6B,8CAA8C,YAAY,kBAAkB,aAAa,aAAa,wEAAwE,EAAE,eAAe,OAAO,mDAAmD,+BAA+B,0DAA0D,gBAAgB,QAAQ,oBAAoB,mBAAmB,+CAA+C,yBAAyB,GAAG,aAAa,kBAAkB,6BAA6B,8CAA8C,YAAY,kBAAkB,mCAAmC,aAAa,oEAAoE,MAAM,sBAAsB;AAChoC;AACA;;;;;;;;;AC0BwB;;AAE2B;;AAEnD,mFAAe;AACf,WAAW,2BAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,YAAY;AAClB,MAAM,YAAY;AAClB;AACA;AACA,CAAC;;;ACtD0J,CAAC,sFAAe,8CAAG,EAAC;;;;ACA1E;AAC3B;AACL;;;AAGrE;AACA,CAA4G;AAC5G,gBAAgB,sCAAU;AAC1B,EAAE,iDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,2DAAe;;;;;;;;;;;;;;;;AClBf,+BAA+B,6BAA6B,eAAe,sBAAsB,yEAAyE,qBAAqB,YAAY,aAAa,4DAA4D,mCAAmC,kBAAkB;AACzU;AACA;;;;;ACSA,6EAAe;;AAEf,CAAC;;;ACboJ,CAAC,qFAAe,wCAAG,EAAC;;;;ACA1E;AAC3B;AACL;;;AAG/D;AACA,CAA4G;AAC5G,gBAAgB,sCAAU;AAC1B,EAAE,gDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,qDAAe;;;;;;;;;;;;;;;;AClBf,+BAA+B,6BAA6B,eAAe,yDAAyD,aAAa,UAAU,iDAAiD;AAC5M;AACA;;;;;;ACF2G;AAC3G;;;AAGA;AACA,CAA4G;AAC5G,gBAAgB,sCAAU;AAC1B;AACA,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe;;;;;;;;;;;;ACjBsB;AACJ;AACjC;AACmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB;AACxB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,iBAAiB;AACjB;AACA,yBAAyB,gDAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,+DAAe,8DAAK,QAAQ,qEAAe,CAAC;;;;;;;;;;;;;;;;;;;AC7CpB;AACA;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACG;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,iBAAiB;AACjB,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,mBAAmB,gDAAS;AAC5B;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,UAAU,sDAAyB;AACnC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH","sources":["webpack://data-experience/./src/components/chart/view/ChartViewOverviewLinkedinConnection.vue?99ce","webpack://data-experience/src/components/chart/view/ChartViewOverviewLinkedinConnection.vue","webpack://data-experience/./src/components/chart/view/ChartViewOverviewLinkedinConnection.vue?f4e1","webpack://data-experience/./src/components/chart/view/ChartViewOverviewLinkedinConnection.vue","webpack://data-experience/./src/components/chart/view/dc/ChartViewDcFilterCount.vue?857a","webpack://data-experience/src/components/chart/view/dc/ChartViewDcFilterCount.vue","webpack://data-experience/./src/components/chart/view/dc/ChartViewDcFilterCount.vue?d2e0","webpack://data-experience/./src/components/chart/view/dc/ChartViewDcFilterCount.vue","webpack://data-experience/./src/components/chart/view/filters/ChartViewFilters.vue?cff0","webpack://data-experience/src/components/chart/view/filters/ChartViewFilters.vue","webpack://data-experience/./src/components/chart/view/filters/ChartViewFilters.vue?e912","webpack://data-experience/./src/components/chart/view/filters/ChartViewFilters.vue","webpack://data-experience/./src/components/chart/view/text/ChartViewTextSelectTimeRange.vue?13ad","webpack://data-experience/./src/components/chart/view/text/ChartViewTextSelectTimeRange.vue","webpack://data-experience/./src/components/chart/view/mixin.js","webpack://data-experience/./src/components/chart/view/utils/dc-helpers.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('VContainer',[_c('VRow',{attrs:{\"dense\":\"\"}},[_c('VCol',{attrs:{\"cols\":\"12\"}},[_c('div',{attrs:{\"id\":'connections-chart' + _vm.graphId}},[_c('span',{staticClass:\"font-weight-bold\",domProps:{\"textContent\":_vm._s(_vm.messages['Cumulative number of connections'])}}),_c('ChartViewFilters')],1),_c('div',{staticClass:\"range-chart\",attrs:{\"id\":'range-chart' + _vm.graphId}},[_c('ChartViewTextSelectTimeRange')],1)])],1),_c('VRow',[_c('VCol',{attrs:{\"cols\":\"4\"}},[_c('div',{attrs:{\"id\":'company-chart' + _vm.graphId}},[_c('div',{staticStyle:{\"display\":\"flex\"}},[_c('span',{staticClass:\"font-weight-bold\",domProps:{\"textContent\":_vm._s(_vm.messages['Company'])}}),_c('VSpacer'),_c('div',{attrs:{\"id\":\"company-search\"}})],1),_c('ChartViewFilters')],1)]),_c('VCol',{attrs:{\"cols\":\"4\"}},[_c('div',{attrs:{\"id\":'week-chart' + _vm.graphId}},[_c('span',{directives:[{name:\"t\",rawName:\"v-t\",value:(_vm.messages['Day']),expression:\"messages['Day']\"}],staticClass:\"font-weight-bold\"}),_c('ChartViewFilters')],1)]),_c('VCol',{attrs:{\"cols\":\"4\"}},[_c('div',{attrs:{\"id\":'position-chart' + _vm.graphId}},[_c('div',{staticStyle:{\"display\":\"flex\"}},[_c('span',{directives:[{name:\"t\",rawName:\"v-t\",value:(_vm.messages['Position']),expression:\"messages['Position']\"}],staticClass:\"font-weight-bold\"}),_c('VSpacer'),_c('div',{attrs:{\"id\":\"position-search\"}})],1),_c('ChartViewFilters')],1)])],1),_c('ChartViewDcFilterCount',_vm._b({},'ChartViewDcFilterCount',{ filterCount: _vm.filterCount, totalCount: _vm.totalCount },false)),_c('UnitFilterableTable',_vm._b({},'UnitFilterableTable',{ headers: _vm.header, items: _vm.results },false))],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <VContainer>\r\n    <VRow dense>\r\n      <VCol cols=\"12\">\r\n        <div :id=\"'connections-chart' + graphId\">\r\n          <span class=\"font-weight-bold\" v-text=\"messages['Cumulative number of connections']\" />\r\n          <ChartViewFilters />\r\n        </div>\r\n        <div :id=\"'range-chart' + graphId\" class=\"range-chart\">\r\n          <ChartViewTextSelectTimeRange />\r\n        </div>\r\n      </VCol>\r\n    </VRow>\r\n    <VRow>\r\n      <VCol cols=\"4\">\r\n        <div :id=\"'company-chart' + graphId\">\r\n          <div style=\"display: flex\">\r\n            <span class=\"font-weight-bold\" v-text=\"messages['Company']\" />\r\n            <VSpacer />\r\n            <div id=\"company-search\" />\r\n          </div>\r\n          <ChartViewFilters />\r\n        </div>\r\n      </VCol>\r\n      <VCol cols=\"4\">\r\n        <div :id=\"'week-chart' + graphId\">\r\n          <span v-t=\"messages['Day']\" class=\"font-weight-bold\" />\r\n          <ChartViewFilters />\r\n        </div>\r\n      </VCol>\r\n      <VCol cols=\"4\">\r\n        <div :id=\"'position-chart' + graphId\">\r\n          <div style=\"display: flex\">\r\n            <span v-t=\"messages['Position']\" class=\"font-weight-bold\" />\r\n            <VSpacer />\r\n            <div id=\"position-search\" />\r\n          </div>\r\n          <ChartViewFilters />\r\n        </div>\r\n      </VCol>\r\n    </VRow>\r\n    <ChartViewDcFilterCount\r\n      v-bind=\"{ filterCount, totalCount }\"\r\n    />\r\n    <UnitFilterableTable v-bind=\"{ headers: header, items: results }\" />\r\n  </VContainer>\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from 'd3'\r\nimport * as dc from 'dc'\r\nimport crossfilter from 'crossfilter2'\r\nimport mixin from './mixin'\r\nimport { createCumulativeGroup } from './utils/dc-helpers'\r\nimport ChartViewTextSelectTimeRange from './text/ChartViewTextSelectTimeRange.vue'\r\nimport ChartViewFilters from './filters/ChartViewFilters.vue'\r\nimport ChartViewDcFilterCount from './dc/ChartViewDcFilterCount.vue'\r\nimport UnitFilterableTable from '@/components/unit/filterable-table/UnitFilterableTable.vue'\r\n\r\n// Remove warning on default colorscheme, even if not used..\r\ndc.config.defaultColors(d3.schemePaired)\r\n\r\nexport default {\r\n  components: { ChartViewTextSelectTimeRange, ChartViewFilters, ChartViewDcFilterCount, UnitFilterableTable },\r\n  mixins: [mixin],\r\n  props: {\r\n    messages: {\r\n      type: Object,\r\n      default: () => {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      header: [\r\n        { text: 'First Name', value: 'firstname' },\r\n        { text: 'Last Name', value: 'lastname' },\r\n        { text: 'Email Address', value: 'email' },\r\n        { text: 'Company', value: 'company' },\r\n        { text: 'Position', value: 'position' },\r\n        { text: 'Connected On', value: 'dateStr' }\r\n      ],\r\n      results: []\r\n    }\r\n  },\r\n  methods: {\r\n    removeEmptyBins(group) {\r\n      return {\r\n        top(n) {\r\n          return group\r\n            .top(Infinity)\r\n            .filter(function(d) {\r\n              return d.value.count !== 0 && d.value !== 0\r\n            })\r\n            .slice(0, n)\r\n        },\r\n        all() {\r\n          return group.all()\r\n        }\r\n      }\r\n    },\r\n    drawViz() {\r\n      const { graphId } = this\r\n      const colorPalette = [\r\n        '#7570b3',\r\n        // '#371D52',\r\n        // '#35334A',\r\n        '#6652A1',\r\n        '#859ED5',\r\n        '#CC94F2',\r\n        '#9A5BD9',\r\n        '#6F36BF',\r\n        '#3F1973',\r\n        '#58539E'\r\n      ]\r\n      // Format data to correct types 06 Oct 2021\r\n      const formatDate = d3.timeFormat('%B %d, %Y')\r\n      // Keeps only movies and tv shows (not trailer etc..)\r\n      this.results = this.values\r\n      this.results.forEach((d) => {\r\n        d.firstname = d.firstName\r\n        d.lastname = d.lastName\r\n        d.company = d.company || 'Unknown'\r\n        d.position = d.position || 'Unknown'\r\n        d.email = d.emailAddress\r\n        d.date = new Date(d.connectedOn)\r\n        d.week = d3.timeWeek(d.date) // pre-calculate months for better performance\r\n        d.dateStr = formatDate(d.date)\r\n      })\r\n      // Create crossfilter indexing\r\n      const ndx = crossfilter(this.results)\r\n      // get total number of records\r\n      this.totalCount = ndx.size()\r\n      this.filterCount = this.totalCount\r\n      ndx.onChange(() => {\r\n        // update table\r\n        this.results = weekDimension.top(all.value())\r\n        // update filter count\r\n        this.filterCount = ndx.allFiltered().length\r\n      })\r\n      const all = ndx.groupAll()\r\n      // get total number of records\r\n      this.totalCount = ndx.size()\r\n      this.filterCount = this.totalCount\r\n      ndx.onChange(() => {\r\n        // update table\r\n        this.results = weekDimension.top(all.value())\r\n        // update filter count\r\n        this.filterCount = ndx.allFiltered().length\r\n      })\r\n      // Create and bind charts to their respective divs\r\n      const connectionsChart = new dc.LineChart('#connections-chart' + graphId)\r\n      const rangeChart = new dc.BarChart('#range-chart' + graphId)\r\n      const companyChart = new dc.RowChart('#company-chart' + graphId)\r\n      const positionChart = new dc.RowChart('#position-chart' + graphId)\r\n      const weekChart = new dc.RowChart('#week-chart' + graphId)\r\n      const companySearch = this.createTextFilterWidget('#company-search')\r\n      const positionSearch = this.createTextFilterWidget('#position-search')\r\n      companySearch.dimension(ndx.dimension(d => d.company.toLowerCase()))\r\n      positionSearch.dimension(ndx.dimension(d => d.position.toLowerCase()))\r\n      // Bind reset filters links\r\n      d3.select('#connections-chart' + graphId + ' a.reset').on('click', function() {\r\n        rangeChart.filterAll()\r\n        connectionsChart.filterAll()\r\n        dc.redrawAll()\r\n      })\r\n      d3.select('#company-chart' + graphId + ' a.reset').on('click', function() {\r\n        companyChart.filterAll()\r\n        dc.redrawAll()\r\n      })\r\n      d3.select('#position-chart' + graphId + ' a.reset').on('click', function() {\r\n        positionChart.filterAll()\r\n        dc.redrawAll()\r\n      })\r\n      d3.select('#week-chart' + graphId + ' a.reset').on('click', function() {\r\n        weekChart.filterAll()\r\n        dc.redrawAll()\r\n      })\r\n      // Create dimensions\r\n      const weekDimension = ndx.dimension(d => d.week)\r\n      const companyDimension = ndx.dimension(d => d.company)\r\n      const positionDimension = ndx.dimension(d => d.position)\r\n      const weekDayDimension = ndx.dimension((d) => {\r\n        const day = d.date.getDay()\r\n        const name = this.$days()\r\n        return `${name[day]}`\r\n      })\r\n      // Create groups from dimension\r\n      const weekGroup = weekDimension.group().reduceCount()\r\n      // const typeGroup = typeDimension.group().reduceSum(d => d.duration)\r\n      const companyGroup = companyDimension.group().reduceCount()\r\n      const positionGroup = positionDimension.group().reduceCount()\r\n      const weekDayGroup = weekDayDimension.group().reduceCount()\r\n      // Render watch time line chart\r\n      const minDate = weekDimension.bottom(1)[0].date\r\n      const maxDate = weekDimension.top(1)[0].date\r\n      const maxValue = weekGroup.top(1)[0].value + 2\r\n      let width = d3\r\n        .select('#connections-chart' + graphId)\r\n        .node()\r\n        .getBoundingClientRect().width\r\n      let height = 150\r\n      connectionsChart\r\n        .renderArea(true)\r\n        .width(width)\r\n        .height(height)\r\n        .transitionDuration(1000)\r\n        .margins({ top: 25, right: 25, bottom: 25, left: 25 })\r\n        .group(createCumulativeGroup(weekGroup))\r\n        .dimension(weekDimension)\r\n        .curve(d3.curveMonotoneX)\r\n        .x(d3\r\n          .scaleTime()\r\n          .domain([\r\n            d3.timeHour.offset(minDate, 0),\r\n            d3.timeHour.offset(maxDate, 2)\r\n          ]))\r\n        .y(d3.scaleLinear().domain([0, maxValue]))\r\n        .ordinalColors([colorPalette[1]])\r\n        .valueAccessor(d => d.value)\r\n        .title(d => formatDate(d.key) + ': ' + d.value + ' connections made')\r\n        .xUnits(d3.timeHour)\r\n        .brushOn(false)\r\n        .elasticX(false)\r\n        .elasticY(true)\r\n        .xyTipsOn(true)\r\n        .mouseZoomable(false)\r\n        .rangeChart(rangeChart)\r\n        .renderHorizontalGridLines(false)\r\n      // .dashStyle([3,1,1,1])\r\n        .renderDataPoints({\r\n          radius: 3,\r\n          fillOpacity: 0.8,\r\n          strokeOpacity: 0\r\n        })\r\n        .yAxisLabel('Connections')\r\n        .clipPadding(10)\r\n      // .xAxisLabel(\"Date\")\r\n        .yAxis()\r\n        .ticks(5)\r\n      connectionsChart.xAxis().ticks(5)\r\n      // range chart date picker\r\n      rangeChart\r\n        .width(width)\r\n        .height(30)\r\n        .margins({ top: 0, right: 25, bottom: 20, left: 25 })\r\n        .dimension(weekDimension)\r\n        .group(weekGroup)\r\n        .centerBar(true)\r\n        .elasticY(true)\r\n        .gap(1)\r\n        .x(d3\r\n          .scaleTime()\r\n          .domain([\r\n            d3.timeHour.offset(minDate, 0),\r\n            d3.timeHour.offset(maxDate, 2)\r\n          ]))\r\n        .round(d3.timeDay.round)\r\n        .valueAccessor(d => d.value)\r\n        .alwaysUseRounding(true)\r\n        .xUnits(d3.timeDays)\r\n        .ordinalColors(colorPalette)\r\n        .yAxis()\r\n        .ticks(0)\r\n      // Render company row chart\r\n      width = d3\r\n        .select('#company-chart' + graphId)\r\n        .node()\r\n        .getBoundingClientRect().width\r\n      height = 400\r\n      companyChart\r\n        .width(width)\r\n        .height(height)\r\n        .margins({ top: 25, left: 25, right: 25, bottom: 25 })\r\n        .group(companyGroup)\r\n        .dimension(companyDimension)\r\n        .ordinalColors(colorPalette)\r\n        .valueAccessor(d => d.value)\r\n        .label(d => d.key)\r\n        .data(group => group.top(20))\r\n      // .labelOffsetX(0)\r\n        .title(d => d.key + ': ' + d.value + ' connections made')\r\n        .elasticX(true)\r\n        .xAxis()\r\n        .ticks(4)\r\n      // Render day of week row chart\r\n      width = d3\r\n        .select('#week-chart' + graphId)\r\n        .node()\r\n        .getBoundingClientRect().width\r\n      height = 400\r\n      weekChart\r\n        .width(width)\r\n        .height(height)\r\n        .margins({ top: 25, left: 25, right: 25, bottom: 25 })\r\n        .group(weekDayGroup)\r\n        .dimension(weekDayDimension)\r\n        .valueAccessor(d => d.value)\r\n        .ordinalColors(colorPalette)\r\n        .label(d => d.key)\r\n        .title(d => d.value + ' connections')\r\n        .elasticX(true)\r\n        .xAxis()\r\n        .ticks(4)\r\n      weekChart.ordering(d => this.$days().indexOf(d.key))\r\n      // Render content row chart\r\n      width = d3\r\n        .select('#position-chart' + graphId)\r\n        .node()\r\n        .getBoundingClientRect().width\r\n      height = 400\r\n      positionChart\r\n        .width(width)\r\n        .height(height)\r\n        .margins({ top: 25, left: 25, right: 25, bottom: 25 })\r\n        .group(positionGroup)\r\n        .dimension(positionDimension)\r\n        .ordinalColors([colorPalette[0]])\r\n        .valueAccessor(d => d.value)\r\n        .title(d => d.key + ': ' + d.value + ' connections')\r\n        .label(d => d.key)\r\n        .data(group => group.top(20))\r\n      // .labelOffsetX(0)\r\n        .elasticX(true)\r\n        .xAxis()\r\n        .ticks(4)\r\n      dc.renderAll()\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewOverviewLinkedinConnection.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewOverviewLinkedinConnection.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewOverviewLinkedinConnection.vue?vue&type=template&id=4577f840&\"\nimport script from \"./ChartViewOverviewLinkedinConnection.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewOverviewLinkedinConnection.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('VRow',[(_vm.filterCount === _vm.totalCount)?[_c('i18n',{attrs:{\"tag\":\"div\",\"path\":_vm.kViewBlock('selected-all')},scopedSlots:_vm._u([{key:\"totalCount\",fn:function(){return [_c('span',{staticClass:\"font-weight-bold\",domProps:{\"textContent\":_vm._s(_vm.totalCount)}})]},proxy:true},(_vm.rowLabel)?{key:\"rowLabel\",fn:function(){return [_vm._v(\" \"+_vm._s(_vm.rowLabel)+\" \")]},proxy:true}:null],null,true)}),_c('span',{directives:[{name:\"t\",rawName:\"v-t\",value:('click-graph'),expression:\"'click-graph'\"}]})]:[_c('i18n',{attrs:{\"tag\":\"div\",\"path\":_vm.kViewBlock('selected-some')},scopedSlots:_vm._u([_vm._l(({ filterCount: _vm.filterCount, totalCount: _vm.totalCount }),function(v,k){return {key:k,fn:function(){return [_c('span',{key:k,staticClass:\"font-weight-bold\",domProps:{\"textContent\":_vm._s(v)}})]},proxy:true}}),(_vm.rowLabel)?{key:\"rowLabel\",fn:function(){return [_vm._v(\" \"+_vm._s(_vm.rowLabel)+\" \")]},proxy:true}:null],null,true)}),_c('span',[_vm._v(\" | \"),_c('a',{directives:[{name:\"t\",rawName:\"v-t\",value:('Reset All'),expression:\"'Reset All'\"}],on:{\"click\":_vm.resetAll}})])]],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <VRow>\r\n    <template v-if=\"filterCount === totalCount\">\r\n      <i18n tag=\"div\" :path=\"kViewBlock('selected-all')\">\r\n        <template #totalCount>\r\n          <span class=\"font-weight-bold\" v-text=\"totalCount\" />\r\n        </template>\r\n        <template v-if=\"rowLabel\" #rowLabel>\r\n          {{ rowLabel }}\r\n        </template>\r\n      </i18n>\r\n      <span v-t=\"'click-graph'\" />\r\n    </template>\r\n    <template v-else>\r\n      <i18n tag=\"div\" :path=\"kViewBlock('selected-some')\">\r\n        <template v-for=\"(v, k) in { filterCount, totalCount }\" #[k]>\r\n          <span :key=\"k\" class=\"font-weight-bold\" v-text=\"v\" />\r\n        </template>\r\n        <template v-if=\"rowLabel\" #rowLabel>\r\n          {{ rowLabel }}\r\n        </template>\r\n      </i18n>\r\n      <span>&nbsp;| <a v-t=\"'Reset All'\" @click=\"resetAll\" /></span>\r\n    </template>\r\n  </VRow>\r\n</template>\r\n\r\n<script>\r\nimport * as dc from 'dc'\r\n\r\nimport kViewBlockMixin from '@/mixins/k-view-block'\r\n\r\nexport default {\r\n  mixins: [kViewBlockMixin],\r\n  props: {\r\n    filterCount: {\r\n      type: Number,\r\n      required: true\r\n    },\r\n    totalCount: {\r\n      type: Number,\r\n      required: true\r\n    },\r\n    rowLabel: {\r\n      type: String,\r\n      default: null\r\n    }\r\n  },\r\n  methods: {\r\n    resetAll() {\r\n      dc.filterAll()\r\n      dc.renderAll()\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewDcFilterCount.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewDcFilterCount.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewDcFilterCount.vue?vue&type=template&id=05251258&\"\nimport script from \"./ChartViewDcFilterCount.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewDcFilterCount.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('p',{staticClass:\"filters\"},[_c('span',[_vm._v(\" \"+_vm._s(_vm.$t('Current filter'))+\" \"),_c('span',{staticClass:\"filter\"})]),_c('a',{directives:[{name:\"t\",rawName:\"v-t\",value:('reset'),expression:\"'reset'\"}],staticClass:\"reset\",staticStyle:{\"display\":\"none\"}})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <p class=\"filters\">\r\n    <span>\r\n      {{ $t('Current filter') }}\r\n      <span class=\"filter\" />\r\n    </span>\r\n    <a v-t=\"'reset'\" class=\"reset\" style=\"display: none\" />\r\n  </p>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n\r\n}\r\n</script>\r\n","import mod from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewFilters.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewFilters.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewFilters.vue?vue&type=template&id=2f9280d1&\"\nimport script from \"./ChartViewFilters.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewFilters.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('p',{staticClass:\"muted pull-right text-subtitle-2 mr-4 mb-1\"},[_c('span',{domProps:{\"innerHTML\":_vm._s(_vm.$t('select-time-range'))}}),_vm._t(\"default\")],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./ChartViewTextSelectTimeRange.vue?vue&type=template&id=46f28fc2&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { TextFilterWidget } from 'dc'\r\nimport { merge } from 'lodash-es'\r\n\r\nimport kViewBlockMixin from '@/mixins/k-view-block'\r\n\r\nconst mixin = {\r\n  props: {\r\n    values: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    headers: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    messages: {\r\n      type: Object,\r\n      default: () => ({})\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      graphId: 'graph_' + this.$store.state.xp.currentTab,\r\n      totalCount: 0,\r\n      filterCount: 0\r\n    }\r\n  },\r\n  mounted() {\r\n    this.drawViz()\r\n  },\r\n  watch: {\r\n    values() {\r\n      this.drawViz()\r\n    }\r\n  },\r\n  methods: {\r\n    drawViz() { },\r\n    createTextFilterWidget(parent, placeholder = 'Search') {\r\n      const widget = new TextFilterWidget(parent)\r\n      widget.placeHolder(this.$tev(placeholder, placeholder))\r\n      return widget\r\n    }\r\n  }\r\n}\r\n\r\nexport default merge(mixin, kViewBlockMixin)\r\n","import * as d3 from 'd3'\r\nimport * as dc from 'dc'\r\n\r\n// Functions to add x-label & y-label to Row Charts (Unsupported by dc.js)\r\n// https://www.intothevoid.io/data-visualization/row-chart-axis-labels-dc-js/\r\n// Use with:\r\n// contentChart.on('postRender', function (chart) {\r\n//  addXLabel(chart, 'Hours watched')\r\n// })\r\nexport function addXLabel(chartToUpdate, displayText) {\r\n  const textSelection = chartToUpdate\r\n    .svg()\r\n    .append('text')\r\n    .attr('class', 'x-axis-label')\r\n    .attr('text-anchor', 'middle')\r\n    .attr('x', chartToUpdate.width() / 2)\r\n    .attr('y', chartToUpdate.height() - 10)\r\n    .text(displayText)\r\n  const textDims = textSelection.node().getBBox()\r\n  const chartMargins = chartToUpdate.margins()\r\n\r\n  // Dynamically adjust positioning after reading text dimension from DOM\r\n  textSelection\r\n    .attr(\r\n      'x',\r\n      chartMargins.left +\r\n        (chartToUpdate.width() - chartMargins.left - chartMargins.right) / 2\r\n    )\r\n    .attr('y', chartToUpdate.height() - Math.ceil(textDims.height) / 2)\r\n}\r\nexport function addYLabel(chartToUpdate, displayText) {\r\n  const textSelection = chartToUpdate\r\n    .svg()\r\n    .append('text')\r\n    .attr('class', 'y-axis-label')\r\n    .attr('text-anchor', 'middle')\r\n    .attr('transform', 'rotate(-90)')\r\n    .attr('x', -chartToUpdate.height() / 2)\r\n    .attr('y', 10)\r\n    .text(displayText)\r\n  const textDims = textSelection.node().getBBox()\r\n  const chartMargins = chartToUpdate.margins()\r\n\r\n  // Dynamically adjust positioning after reading text dimension from DOM\r\n  textSelection\r\n    .attr(\r\n      'x',\r\n      -chartMargins.top -\r\n        (chartToUpdate.height() - chartMargins.top - chartMargins.bottom) / 2\r\n    )\r\n    .attr(\r\n      'y',\r\n      Math.max(\r\n        Math.ceil(textDims.height),\r\n        chartMargins.left - Math.ceil(textDims.height) - 5\r\n      )\r\n    )\r\n}\r\n\r\n/**\r\n * Transform a simple group to a cumulative one in order\r\n * to make cumulative line chart\r\n * @param {Crossfilter group} group the group to transform\r\n * @returns the cumulative group\r\n */\r\nexport function createCumulativeGroup(group) {\r\n  return {\r\n    all() {\r\n      const cumulate = {}\r\n      return group.all().map(function(d) {\r\n        if (cumulate[d.key[0]]) {\r\n          cumulate[d.key[0]] += d.value\r\n        } else {\r\n          cumulate[d.key[0]] = d.value\r\n        }\r\n        return { key: d.key, value: cumulate[d.key[0]] }\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Remove datapoints that are null in a crossfilter group\r\n * Used to hide empty bins in a bar graph\r\n * @param {Crossfilter group} group the group to transform\r\n * @returns the cleaned group\r\n */\r\nexport function removeEmptyBins(group) {\r\n  return {\r\n    top(n) {\r\n      return group\r\n        .top(Infinity)\r\n        .filter(function(d) {\r\n          return d.value.count !== 0 && d.value !== 0\r\n        })\r\n        .slice(0, n)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addPiePercentage(chart) {\r\n  chart.selectAll('text.pie-slice.pie-label').call(function(t) {\r\n    t.each(function(d) {\r\n      const self = d3.select(this)\r\n      let text = self.text()\r\n      if (text.length > 14) { text = text.substring(0, 14) + '.. ' }\r\n      if (text.length > 0) {\r\n        text =\r\n          text +\r\n          ' (' +\r\n          dc.utils.printSingleValue(\r\n            ((d.endAngle - d.startAngle) / (2 * Math.PI)) * 100\r\n          ) +\r\n          '%)'\r\n      }\r\n      self.text(text)\r\n    })\r\n  })\r\n}\r\n"],"names":[],"sourceRoot":""}