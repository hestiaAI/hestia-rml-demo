{"version":3,"file":"data-experience.umd.min.4916.js","mappings":"mPAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,IAAI,SACjF,EACIC,EAAkB,G,sBCQtB,SAASC,IACP,IAAIC,EAAQ,IACRC,EAAS,IACb,SAASC,EAAMC,GACbA,EAAUC,MAAK,SAASC,GAEtB,MAAMC,EAAM,KACFZ,MACPa,OAAO,OACPC,KAAK,QAASR,GACdQ,KAAK,SAAUP,GAEZQ,EAAYR,EAASI,EAAKK,OAC1BC,EAAQX,EAAQY,KAAKC,OAAOR,GAClCC,EACGQ,UAAU,QACVT,KAAKA,GACLU,QACAR,OAAO,QACPC,KAAK,IAAK,GACVA,KAAK,KAAK,CAACQ,EAAGC,IAAMA,EAAIR,IACxBD,KAAK,SAASU,GAAKA,EAAIP,EAAQ,OAC/BH,KAAK,SAAUC,GACfD,KAAK,OAAQ,QAChBF,EACGQ,UAAU,QACVT,KAAKA,GACLU,QACAR,OAAO,QACPY,MAAKD,GAAKA,IACVV,KAAK,IAAK,GACVA,KAAK,KAAK,CAACQ,EAAGC,IAAMA,EAAIR,EAAY,IACzC,GACF,CAcA,OAZAP,EAAMF,MAAQ,SAASgB,GACrB,OAAKI,UAAUV,QACfV,EAAQgB,EACDd,GAFyBF,CAGlC,EAEAE,EAAMD,OAAS,SAASe,GACtB,OAAKI,UAAUV,QACfT,EAASe,EACFd,GAFyBD,CAGlC,EAEOC,CACT,CAEA,OACEmB,OAAQ,CAACC,EAAA,YACTC,QAAS,CACPC,UAIE,MAAMC,EAAS,CAAC,GAAI,EAAG,GAAI,GAAI,GAAI,IAC7BvB,EAAQH,IAAWE,OAAO,KAAKD,MAAMN,KAAKgC,MAAMC,MAAMC,aAC5D,KAAUlC,KAAKgC,MAAMC,OAAOE,MAAMJ,GAAQK,KAAK5B,EACjD,ICtE2I,I,UCO3I6B,GAAY,OACd,EACAvC,EACAM,GACA,EACA,KACA,KACA,MAIF,EAAeiC,EAAiB,O,kECbhC,MAAMT,EAAQ,CACZU,MAAO,CACLP,OAAQ,CACNQ,KAAMC,MACNC,QAAS,IAAM,IAEjBC,QAAS,CACPH,KAAMC,MACNC,QAAS,IAAM,IAEjBE,SAAU,CACRJ,KAAMK,OACNH,QAAS,KAAM,CAAG,KAGtB9B,OACE,MAAO,CACLkC,QAAS,SAAW7C,KAAK8C,OAAOC,MAAMC,GAAGC,WACzCC,WAAY,EACZC,YAAa,EAEjB,EACAC,UACEpD,KAAK8B,SACP,EACAuB,MAAO,CACLtB,SACE/B,KAAK8B,SACP,GAEFD,QAAS,CACPC,UAAY,EACZwB,uBAAuBC,EAAQC,EAAc,UAC3C,MAAMC,EAAS,IAAI,EAAAC,iBAAiBH,GAEpC,OADAE,EAAOE,YAAY3D,KAAK4D,KAAKJ,EAAaA,IACnCC,CACT,IAIJ,cAAe,OAAM7B,EAAO,I","sources":["webpack://data-experience/./src/components/chart/view/ChartViewBar.vue?a5a7","webpack://data-experience/src/components/chart/view/ChartViewBar.vue","webpack://data-experience/./src/components/chart/view/ChartViewBar.vue?efe3","webpack://data-experience/./src/components/chart/view/ChartViewBar.vue","webpack://data-experience/./src/components/chart/view/mixin.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{ref:\"graph\"})\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div ref=\"graph\" />\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from 'd3'\r\nimport mixin from './mixin'\r\n\r\n// somewhat inspired by\r\n// https://bost.ocks.org/mike/chart/\r\nfunction barChart() {\r\n  let width = 440\r\n  let height = 120\r\n  function chart(selection) {\r\n    selection.each(function(data) {\r\n      // Select the svg element, if it exists.\r\n      const svg = d3\r\n        .select(this)\r\n        .append('svg')\r\n        .attr('width', width)\r\n        .attr('height', height)\r\n\r\n      const barHeight = height / data.length\r\n      const scale = width / Math.max(...data)\r\n      svg\r\n        .selectAll('rect')\r\n        .data(data)\r\n        .enter()\r\n        .append('rect')\r\n        .attr('x', 0)\r\n        .attr('y', (_, i) => i * barHeight)\r\n        .attr('width', d => d * scale + 'px')\r\n        .attr('height', barHeight)\r\n        .attr('fill', 'peru')\r\n      svg\r\n        .selectAll('text')\r\n        .data(data)\r\n        .enter()\r\n        .append('text')\r\n        .text(d => d)\r\n        .attr('x', 5)\r\n        .attr('y', (_, i) => i * barHeight + 16)\r\n    })\r\n  }\r\n\r\n  chart.width = function(_) {\r\n    if (!arguments.length) { return width }\r\n    width = _\r\n    return chart\r\n  }\r\n\r\n  chart.height = function(_) {\r\n    if (!arguments.length) { return height }\r\n    height = _\r\n    return chart\r\n  }\r\n\r\n  return chart\r\n}\r\n\r\nexport default {\r\n  mixins: [mixin],\r\n  methods: {\r\n    drawViz() {\r\n      // another chart should be using this.values\r\n      // but let's ignore it so we can use this one\r\n      // anywhere regardless of the input\r\n      const values = [44, 8, 15, 16, 23, 42]\r\n      const chart = barChart().height(200).width(this.$refs.graph.clientWidth)\r\n      d3.select(this.$refs.graph).datum(values).call(chart)\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewBar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewBar.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewBar.vue?vue&type=template&id=6d17e0ed&\"\nimport script from \"./ChartViewBar.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewBar.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { TextFilterWidget } from 'dc'\r\nimport { merge } from 'lodash-es'\r\n\r\nimport kViewBlockMixin from '@/mixins/k-view-block'\r\n\r\nconst mixin = {\r\n  props: {\r\n    values: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    headers: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    messages: {\r\n      type: Object,\r\n      default: () => ({})\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      graphId: 'graph_' + this.$store.state.xp.currentTab,\r\n      totalCount: 0,\r\n      filterCount: 0\r\n    }\r\n  },\r\n  mounted() {\r\n    this.drawViz()\r\n  },\r\n  watch: {\r\n    values() {\r\n      this.drawViz()\r\n    }\r\n  },\r\n  methods: {\r\n    drawViz() { },\r\n    createTextFilterWidget(parent, placeholder = 'Search') {\r\n      const widget = new TextFilterWidget(parent)\r\n      widget.placeHolder(this.$tev(placeholder, placeholder))\r\n      return widget\r\n    }\r\n  }\r\n}\r\n\r\nexport default merge(mixin, kViewBlockMixin)\r\n"],"names":["render","_vm","this","_c","_self","ref","staticRenderFns","barChart","width","height","chart","selection","each","data","svg","append","attr","barHeight","length","scale","Math","max","selectAll","enter","_","i","d","text","arguments","mixins","mixin","methods","drawViz","values","$refs","graph","clientWidth","datum","call","component","props","type","Array","default","headers","messages","Object","graphId","$store","state","xp","currentTab","totalCount","filterCount","mounted","watch","createTextFilterWidget","parent","placeholder","widget","TextFilterWidget","placeHolder","$tev"],"sourceRoot":""}