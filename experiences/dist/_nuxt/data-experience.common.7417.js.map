{"version":3,"file":"data-experience.common.7417.js","mappings":";;;;;;;;;;;;;;;AAAA,+BAA+B,6BAA6B,6BAA6B,OAAO,sCAAsC,aAAa,OAAO,YAAY,aAAa,OAAO,YAAY,UAAU,sBAAsB,iEAAiE,gCAAgC,YAAY,2CAA2C,OAAO,qEAAqE,KAAK,0BAA0B;AACze,wBAAwB,QAAQ,sDAAsD,yBAAyB,gCAAgC,kDAAkD,OAAO,oCAAoC,sBAAsB,8BAA8B,WAAW,EAAE,iCAAiC,OAAO,iDAAiD,sCAAsC,OAAO,YAAY,oDAAoD,+BAA+B,mDAAmD,sBAAsB,6BAA6B,0CAA0C,sBAAsB,8HAA8H,OAAO,sBAAsB,gBAAgB,OAAO,qEAAqE,QAAQ,sDAAsD,yBAAyB,gCAAgC,4CAA4C,kBAAkB,wBAAwB,sBAAsB,gBAAgB,OAAO;AACzqC;AACA,8DAA8D,QAAQ,+DAA+D,6CAA6C,yCAAyC,MAAM,0DAA0D,aAAa,4DAA4D,SAAS,iCAAiC,KAAK,yBAAyB,4BAA4B,aAAa,aAAa,4DAA4D,SAAS,kCAAkC,KAAK,yBAAyB,4BAA4B,aAAa,aAAa,0DAA0D,SAAS,kCAAkC,KAAK,yBAAyB;AAChyB;AACA,+BAA+B,2DAA2D,OAAO,YAAY,aAAa,OAAO,aAAa,YAAY,OAAO,kBAAkB;AACnL;AACA;;;;;;;;;;;;;;;ACmGwB;AACY;AACe;AACxB;AACoC;;AAE/D;AACA;AACA,gFAAe;AACf,qCAAqC;AACrC,WAAW,gBAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kCAAI;AAC5B;AACA,4BAA4B,gBAAM;AAClC;AACA;AACA,wBAAwB,6BAAc;AACtC;AACA;AACA;AACA;AACA,yBAAyB,mBAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sBAAY;AACtC;AACA,wBAAwB,mBAAS;AACjC,uBAAuB,gCAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,oBAAU;AAC5B,kBAAkB,uBAAa;AAC/B;AACA;AACA;AACA;AACA,kBAAkB,qBAAW;AAC7B,kBAAkB,uBAAa;AAC/B;AACA;AACA;AACA;AACA,kBAAkB,sBAAY;AAC9B,kBAAkB,uBAAa;AAC/B;AACA;AACA;AACA;AACA,kBAAkB,qBAAW;AAC7B,kBAAkB,uBAAa;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,kBAAS;AACf,kBAAkB,kBACH;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAS;AACxB,4BAA4B,mBAAS;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qBAAY;AACjC,qBAAqB,wBAAc;AACnC;AACA;AACA;AACA,oBAAoB,qBAAW;AAC/B,oBAAoB,uBACD;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,sBAAY;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,yBAAe,sBAAsB,wBAAc;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gBAAM;AACxB;AACA;AACA;AACA;AACA;AACA,MAAM,kBAAS;AACf,sBAAsB,kBACP;AACf;AACA;AACA;AACA;AACA;AACA,gBAAgB,mBAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBACN;AACb,eAAe,2BAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAS;AAC1B;AACA;AACA,iBAAiB,kBAAS;AAC1B;AACA;AACA;AACA,cAAc,oBAAU;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,oBAAU;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kBAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kBAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AC7foJ,CAAC,qFAAe,2CAAG,EAAC;;ACAzK;;;;;AEAA;;;;;;;AEA8G;AACvC;AACL;AAClE,CAA4G;AACZ;;;AAGhG;AACyG;AACzG,gBAAgB,sCAAU;AAC1B,EAAE,gDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,wDAAe;;;;;;;;;;;;;;;;ACpBf,+BAA+B,6BAA6B,yBAAyB,qBAAqB,wDAAwD,0CAA0C,aAAa,0BAA0B,OAAO,mCAAmC,KAAK,yBAAyB,gBAAgB,8DAA8D,8CAA8C,4BAA4B,uFAAuF,sCAAsC,OAAO,iBAAiB,qBAAqB,wCAAwC;AACrqB;AACA;;;;;;;;;;;;;ACiByE;AACT;AACiC;AACvB;;AAE1E,kFAAe;AACf,0BAA0B,mDAAwB,wDAAiB;AACnE,WAAW,6CAAuB;AAClC,CAAC;;;AC3BsJ,CAAC,uFAAe,6CAAG,EAAC;;;;ACAvE;AAC3B;AACL;;;AAGpE;AACA,CAAyG;AACzG,gBAAgB,sCAAU;AAC1B,EAAE,kDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,0DAAe;;;;;;;;;;;;;;;;;AClBR;;AAEP;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,yEAAyE,8CAA8C;AACvH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gEAAgE,sBAAsB;;AAEtF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,4CAAe,GAAG,EAAC;;;AC1EK;;AAExB,6BAAe,gBAAW;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB,OAAG;AACzB;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,+CAA+C,YAAY,kCAAkC,IAAI;AACjG,yDAAyD,+BAA+B;AACxF;;AAEA;AACA,8BAA8B,kDAAkD;AAChF,2BAA2B,4CAA4C;AACvE,+BAA+B,wDAAwD;AACvF,uBAAuB,cAAc,cAAc;AACnD,gCAAgC,mCAAmC,cAAc;AACjF,kCAAkC,oBAAoB,cAAc;AACpE,0BAA0B,YAAY;AACtC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS,OAAG;AACZ;;AAEA;AACA;AACA;;;ACxE6C;;AAE7C;;AAEA,YAAY,iBAAa;;AAEzB;AACA;AACA;AACA;AACA;AACA,SAAS,MAAM;AACf;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2DAA2D,iBAAiB;;AAE5E;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,4CAAe,mDAAG,IAAC;;;ACtCnB,6BAAe,cAAS;AACxB;AACA;AACA;AACA;;;ACJuC;AACF;AACA;AACE;AACI;AACE;;;;;;;;;;;;;ACLR;AACJ;AACjC;AACmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB;AACxB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,iBAAiB;AACjB;AACA,yBAAyB,gDAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,+DAAe,8DAAK,QAAQ,qEAAe,CAAC;;;;;;;;;;;;;AC7CpB;AACxB;AACA;AACA,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,KAAK;AACjB,YAAY,MAAM;AAClB,YAAY,MAAM;AAClB,YAAY,OAAO;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,iBAAiB,iDAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA","sources":["webpack://data-experience/./src/components/chart/view/ChartViewTimeSeries.vue?c6e5","webpack://data-experience/src/components/chart/view/ChartViewTimeSeries.vue","webpack://data-experience/./src/components/chart/view/ChartViewTimeSeries.vue?c550","webpack://data-experience/./src/components/chart/view/ChartViewTimeSeries.vue?77d2","webpack://data-experience/./src/components/chart/view/ChartViewTimeSeries.vue?7c35","webpack://data-experience/./src/components/chart/view/ChartViewTimeSeries.vue?8fc4","webpack://data-experience/./src/components/chart/view/ChartViewTimeSeries.vue?73d0","webpack://data-experience/./src/components/chart/view/ChartViewTimeSeries.vue","webpack://data-experience/./src/components/chart/view/ChartViewVRowWebShare.vue?ea0d","webpack://data-experience/src/components/chart/view/ChartViewVRowWebShare.vue","webpack://data-experience/./src/components/chart/view/ChartViewVRowWebShare.vue?2101","webpack://data-experience/./src/components/chart/view/ChartViewVRowWebShare.vue","webpack://data-experience/./node_modules/d3-collection/src/map.js","webpack://data-experience/./node_modules/d3-collection/src/nest.js","webpack://data-experience/./node_modules/d3-collection/src/set.js","webpack://data-experience/./node_modules/d3-collection/src/keys.js","webpack://data-experience/./node_modules/d3-collection/src/index.js","webpack://data-experience/./src/components/chart/view/mixin.js","webpack://data-experience/./src/components/chart/view/utils/d3-helpers.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('VRow',[_c('VCol',{attrs:{\"cols\":\"12\",\"md\":\"8\",\"offset-md\":\"2\"}},[_c('VRow',{attrs:{\"dense\":\"\"}},[_c('VCol',{attrs:{\"cols\":\"9\"}},[_c('p',{staticClass:\"text-h6\"},[_vm._v(\" \"+_vm._s(_vm.title)+\" \")])]),_c('VSpacer'),_c('VCol',{staticClass:\"text-right\",attrs:{\"cols\":\"3\"}},[(_vm.filters.length === 0)?_c('VSelect',{attrs:{\"items\":_vm.namesInterval,\"label\":_vm.$t('Time interval'),\"dense\":\"\"},on:{\"change\":function($event){_vm.applyFilters()\n            _vm.draw()}},model:{value:(_vm.selectedInterval),callback:function ($$v) {_vm.selectedInterval=$$v},expression:\"selectedInterval\"}}):_vm._e(),(_vm.filters.length > 0)?_c('VDialog',{attrs:{\"persistent\":\"\",\"max-width\":\"300px\"},scopedSlots:_vm._u([{key:\"activator\",fn:function({ on, attrs }){return [_c('VBtn',_vm._g(_vm._b({attrs:{\"color\":\"primary\",\"dark\":\"\",\"small\":\"\",\"fab\":\"\"}},'VBtn',attrs,false),on),[_c('VIcon',{attrs:{\"small\":\"\"}},[_vm._v(\" $vuetify.icons.mdiTuneVariant \")])],1)]}}],null,false,530295481),model:{value:(_vm.settingDialog),callback:function ($$v) {_vm.settingDialog=$$v},expression:\"settingDialog\"}},[_c('VCard',[_c('VCardTitle',[_c('span',{staticClass:\"text-h5\"},[_vm._v(_vm._s(_vm.$t('Settings'))+\"/\"+_vm._s(_vm.$t('Filters')))])]),_c('VCardText',[_c('VContainer',[_c('VRow',[_c('VCol',{attrs:{\"cols\":\"6\",\"sm\":\"12\"}},[_c('VSelect',{attrs:{\"items\":_vm.namesInterval,\"label\":_vm.$t('Time interval'),\"dense\":\"\"},model:{value:(_vm.selectedInterval),callback:function ($$v) {_vm.selectedInterval=$$v},expression:\"selectedInterval\"}})],1),_vm._l((_vm.filters),function(filter){return _c('VCol',{key:filter.value,attrs:{\"cols\":\"6\",\"sm\":\"12\"}},[_c('VSelect',{attrs:{\"items\":_vm.filterItems[filter.value]\n                          ? _vm.filterItems[filter.value]\n                          : [],\"label\":filter.text,\"dense\":\"\"},model:{value:(_vm.filterModel[filter.value]),callback:function ($$v) {_vm.$set(_vm.filterModel, filter.value, $$v)},expression:\"filterModel[filter.value]\"}})],1)})],2)],1)],1),_c('VCardActions',[_c('VSpacer'),_c('VBtn',{directives:[{name:\"t\",rawName:\"v-t\",value:('Reset'),expression:\"'Reset'\"}],attrs:{\"color\":\"red darken-1\",\"text\":\"\"},on:{\"click\":function($event){return _vm.resetFilters()}}}),_c('VBtn',{directives:[{name:\"t\",rawName:\"v-t\",value:('Close'),expression:\"'Close'\"}],attrs:{\"color\":\"blue darken-1\",\"text\":\"\"},on:{\"click\":function($event){_vm.settingDialog = false}}}),_c('VBtn',{directives:[{name:\"t\",rawName:\"v-t\",value:('Save'),expression:\"'Save'\"}],attrs:{\"color\":\"blue darken-1\",\"text\":\"\"},on:{\"click\":function($event){_vm.settingDialog = false\n                  _vm.applyFilters()\n                  _vm.draw()}}})],1)],1)],1):_vm._e()],1)],1),_c('ChartViewVRowWebShare',{attrs:{\"dense\":\"\"}},[_c('VCol',{attrs:{\"cols\":\"12\"}},[_c('div',{attrs:{\"id\":_vm.graphId}})])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <VRow>\r\n    <VCol cols=\"12\" md=\"8\" offset-md=\"2\">\r\n      <VRow dense>\r\n        <VCol cols=\"9\">\r\n          <p class=\"text-h6\">\r\n            {{ title }}\r\n          </p>\r\n        </VCol>\r\n        <VSpacer />\r\n        <VCol cols=\"3\" class=\"text-right\">\r\n          <VSelect\r\n            v-if=\"filters.length === 0\"\r\n            v-model=\"selectedInterval\"\r\n            :items=\"namesInterval\"\r\n            :label=\"$t('Time interval')\"\r\n            dense\r\n            @change=\"\r\n              applyFilters()\r\n              draw()\r\n            \"\r\n          />\r\n          <VDialog\r\n            v-if=\"filters.length > 0\"\r\n            v-model=\"settingDialog\"\r\n            persistent\r\n            max-width=\"300px\"\r\n          >\r\n            <template #activator=\"{ on, attrs }\">\r\n              <VBtn\r\n                color=\"primary\"\r\n                dark\r\n                small\r\n                fab\r\n                v-bind=\"attrs\"\r\n                v-on=\"on\"\r\n              >\r\n                <VIcon small>\r\n                  $vuetify.icons.mdiTuneVariant\r\n                </VIcon>\r\n              </VBtn>\r\n            </template>\r\n            <VCard>\r\n              <VCardTitle>\r\n                <span class=\"text-h5\">{{ $t('Settings') }}/{{ $t('Filters') }}</span>\r\n              </VCardTitle>\r\n              <VCardText>\r\n                <VContainer>\r\n                  <VRow>\r\n                    <VCol cols=\"6\" sm=\"12\">\r\n                      <VSelect\r\n                        v-model=\"selectedInterval\"\r\n                        :items=\"namesInterval\"\r\n                        :label=\"$t('Time interval')\"\r\n                        dense\r\n                      />\r\n                    </VCol>\r\n                    <VCol\r\n                      v-for=\"filter in filters\"\r\n                      :key=\"filter.value\"\r\n                      cols=\"6\"\r\n                      sm=\"12\"\r\n                    >\r\n                      <VSelect\r\n                        v-model=\"filterModel[filter.value]\"\r\n                        :items=\"\r\n                          filterItems[filter.value]\r\n                            ? filterItems[filter.value]\r\n                            : []\r\n                        \"\r\n                        :label=\"filter.text\"\r\n                        dense\r\n                      />\r\n                    </VCol>\r\n                  </VRow>\r\n                </VContainer>\r\n              </VCardText>\r\n              <VCardActions>\r\n                <VSpacer />\r\n                <VBtn v-t=\"'Reset'\" color=\"red darken-1\" text @click=\"resetFilters()\" />\r\n                <VBtn v-t=\"'Close'\" color=\"blue darken-1\" text @click=\"settingDialog = false\" />\r\n                <VBtn\r\n                  v-t=\"'Save'\"\r\n                  color=\"blue darken-1\"\r\n                  text\r\n                  @click=\"\r\n                    settingDialog = false\r\n                    applyFilters()\r\n                    draw()\r\n                  \"\r\n                />\r\n              </VCardActions>\r\n            </VCard>\r\n          </VDialog>\r\n        </VCol>\r\n      </VRow>\r\n      <ChartViewVRowWebShare dense>\r\n        <VCol cols=\"12\">\r\n          <div :id=\"graphId\" />\r\n        </VCol>\r\n      </ChartViewVRowWebShare>\r\n    </VCol>\r\n  </VRow>\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from 'd3'\r\nimport { nest } from 'd3-collection'\r\nimport { addMissingDate } from './utils/d3-helpers'\r\nimport mixin from './mixin'\r\nimport ChartViewVRowWebShare from './ChartViewVRowWebShare.vue'\r\n\r\n// Inspired by\r\n// https://datawanderings.com/2019/10/28/tutorial-making-a-line-chart-in-d3-js-v-5/\r\nexport default {\r\n  components: { ChartViewVRowWebShare },\r\n  mixins: [mixin],\r\n  props: {\r\n    dateAccessor: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    seriesAccessor: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    // if not set will just count the rows\r\n    valueAccessor: {\r\n      type: String,\r\n      default: null\r\n    },\r\n    valueFormat: {\r\n      type: String,\r\n      default: '~s'\r\n    },\r\n    yLabel: {\r\n      type: String,\r\n      default: 'Count'\r\n    },\r\n    filters: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    lineWidth: {\r\n      type: Number,\r\n      default: 2\r\n    },\r\n    dotWidth: {\r\n      type: Number,\r\n      default: 2\r\n    },\r\n    dotRadius: {\r\n      type: Number,\r\n      default: 4\r\n    },\r\n    padding: {\r\n      type: Number,\r\n      default: 5\r\n    },\r\n    margin: {\r\n      type: Number,\r\n      default: 5\r\n    },\r\n    adj: {\r\n      type: Number,\r\n      default: 70\r\n    },\r\n    title: {\r\n      type: String,\r\n      default: 'Title of the Graph'\r\n    },\r\n    legendOffset: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    legendPadding: {\r\n      type: Number,\r\n      default: 10\r\n    },\r\n    dateFormat: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    cumSum: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      slices: [],\r\n      selectedInterval: null,\r\n      intervals: {},\r\n      namesInterval: [],\r\n      settingDialog: false,\r\n      filterItems: {},\r\n      filterModel: {},\r\n      extentDate: null,\r\n      dateParser: d => new Date(d)\r\n    }\r\n  },\r\n  methods: {\r\n    initFilters() {\r\n      this.filters.forEach((filter, i) => {\r\n        this.filterItems[filter.value] = []\r\n        // get unique ids and set items for each filter select\r\n        this.filterItems[filter.value] = this.values\r\n          .map(i => i[filter.value])\r\n          .filter((value, index, self) => self.indexOf(value) === index)\r\n      })\r\n    },\r\n    resetFilters() {\r\n      this.filters.forEach((filter) => {\r\n        this.filterModel[filter.value] = null\r\n      })\r\n    },\r\n    applyFilters() {\r\n      this.slices.forEach((serie) => {\r\n        // aggregate per selected time interval and other filters\r\n        const interval = this.intervals[this.selectedInterval]\r\n        const filters = Object.keys(this.filterModel).filter(k => this.filterModel[k] != null)\r\n        // filter according to selection\r\n        serie.current = serie.values.filter((d) => {\r\n          return filters.every(f => this.filterModel[f] === d[f])\r\n        })\r\n        // Aggregate per time period\r\n        serie.current = nest()\r\n          .key(d => interval.parser(this.dateParser(d.date)))\r\n          .rollup(leaves => d3.sum(leaves, l => l.value))\r\n          .entries(serie.current)\r\n        // Add missing datapoints\r\n        serie.current = addMissingDate(serie.current, 'key', 'value', interval.parser, 0, this.extentDate[0], this.extentDate[1])\r\n        // Sort the result\r\n        serie.current = serie.current.sort((e1, e2) => this.dateParser(e1.key) - this.dateParser(e2.key))\r\n        // Compute cumulative sum if needed\r\n        if (this.cumSum) {\r\n          const cumSum = d3.cumsum(serie.current, d => d.value)\r\n          serie.current = serie.current.map((d, idx) => {\r\n            return {\r\n              ...d,\r\n              value: cumSum[idx]\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    drawViz() {\r\n      /* Init the possible aggregations dpending on dates extent */\r\n      if (this.dateFormat) {\r\n        this.dateParser = d3.timeParse(this.dateFormat)\r\n      }\r\n      this.extentDate = d3.extent(this.values, d => this.dateParser(d[this.dateAccessor.value]))\r\n      const diffDays = d3.timeDay.count(this.extentDate[0], this.extentDate[1])\r\n      if (!diffDays) {\r\n        console.error('Unrecognized Dates')\r\n        return\r\n      }\r\n      if (diffDays < 93) {\r\n        this.intervals.Day = {\r\n          parser: d3.timeDay,\r\n          format: d3.timeFormat('%B %d, %Y')\r\n        }\r\n      }\r\n      if (diffDays > 14 && diffDays < 651) {\r\n        this.intervals.Week = {\r\n          parser: d3.timeWeek,\r\n          format: d3.timeFormat('%B %d, %Y')\r\n        }\r\n      }\r\n      if (diffDays > 62 && diffDays < 1800) {\r\n        this.intervals.Month = {\r\n          parser: d3.timeMonth,\r\n          format: d3.timeFormat('%B %Y')\r\n        }\r\n      }\r\n      if (diffDays > 730) {\r\n        this.intervals.Year = {\r\n          parser: d3.timeYear,\r\n          format: d3.timeFormat('%Y')\r\n        }\r\n      }\r\n      this.namesInterval = Object.keys(this.intervals).map(value => ({\r\n        value,\r\n        text: this.$tc(value, 2)\r\n      }))\r\n      // get unique series ids\r\n      const ids = this.values\r\n        .map(i => i[this.seriesAccessor.value])\r\n        .filter((value, index, self) => self.indexOf(value) === index)\r\n      // group by series ids and sort values\r\n      this.slices = ids.map((a) => {\r\n        return {\r\n          id: 'legend' in this.messages ? this.messages.legend[a] : a,\r\n          values: this.values\r\n            .filter(v => a === v[this.seriesAccessor.value])\r\n            .map((d) => {\r\n              const ret = {\r\n                date: this.dateParser(d[this.dateAccessor.value]),\r\n                value: this.valueAccessor ? +d[this.valueAccessor] : 1\r\n              }\r\n              this.filters.forEach((f) => {\r\n                ret[f.value] = d[f.value]\r\n              })\r\n              return ret\r\n            })\r\n            .sort((e1, e2) => e1.date - e2.date)\r\n        }\r\n      })\r\n      this.selectedInterval = this.namesInterval.slice(-1)[0].value\r\n      this.initFilters()\r\n      this.applyFilters()\r\n      this.draw()\r\n    },\r\n    draw() {\r\n      const { graphId, adj } = this\r\n      const width = 800\r\n      const height = 300\r\n      /* create svg element */\r\n      d3.select(`#${graphId} svg`).remove()\r\n      const svg = d3\r\n        .select(`#${graphId}`)\r\n        .append('svg')\r\n        .attr('preserveAspectRatio', 'xMinYMin meet')\r\n        .attr('viewBox', `-${adj} -${adj} ${width + adj * 2} ${height + adj * 2}`)\r\n        .style('padding', this.padding)\r\n        .style('margin', this.margin)\r\n        .classed('svg-content', true)\r\n      function nestedExtent(data, dataAccessor, valueAccessor) {\r\n        return d3.extent(data.reduce(function(prevArr, currArr) {\r\n          const extentArr = d3.extent(currArr[dataAccessor], valueAccessor)\r\n          prevArr.push(extentArr[0])\r\n          prevArr.push(extentArr[1])\r\n          return prevArr\r\n        }, []))\r\n      }\r\n      /* Scales */\r\n      const xScale = d3.scaleTime().range([0, width])\r\n      const yScale = d3.scaleLinear().rangeRound([height, 0])\r\n      xScale.domain(nestedExtent(this.slices, 'current', d => this.dateParser(d.key)))\r\n      yScale.domain([0, nestedExtent(this.slices, 'current', d => d.value)[1]])\r\n      /* Axis */\r\n      const yAxis = d3.axisLeft().ticks(5).scale(yScale) // .ticks(slices[0].values.length)\r\n      const xAxis = d3\r\n        .axisBottom()\r\n        .ticks(8)\r\n      // .ticks(d3.timeDay.every(1))\r\n      // .tickFormat(d3.timeFormat('%b %d'))\r\n        .scale(xScale)\r\n      svg\r\n        .append('g')\r\n        .attr('class', 'xAxis')\r\n        .attr('transform', `translate(0,${height})`)\r\n        .call(xAxis)\r\n        .selectAll('text')\r\n        .attr('y', 0)\r\n        .attr('x', 9)\r\n        .attr('dy', '2em')\r\n        .attr('transform', 'rotate(-30)')\r\n        .style('text-anchor', 'end')\r\n      svg\r\n        .append('g')\r\n        .attr('class', 'yAxis')\r\n        .call(yAxis)\r\n        .append('text')\r\n        .attr('transform', 'rotate(-90)')\r\n        .attr('dy', '.75em')\r\n        .attr('y', -60)\r\n        .style('text-anchor', 'end')\r\n        .text(this.yLabel)\r\n      /* GridLayout */\r\n      d3.selectAll('#' + graphId + ' g.yAxis g.tick')\r\n        .append('line')\r\n        .attr('class', 'gridline')\r\n        .attr('x1', 0)\r\n        .attr('y1', 0)\r\n        .attr('x2', width)\r\n        .attr('y2', 0)\r\n      /*\r\n            d3.selectAll('#' + this.graphId + ' g.xAxis g.tick')\r\n              .append('line')\r\n              .attr('class', 'gridline')\r\n              .attr('x1', 0)\r\n              .attr('y1', -height)\r\n              .attr('x2', 0)\r\n              .attr('y2', 0)\r\n            */\r\n      /* Color Scale */\r\n      const keys = this.slices.map(d => d.id)\r\n      const color = d3.scaleOrdinal().domain(keys).range(d3.schemeDark2)\r\n      /* Legend */\r\n      const legend = svg.selectAll('.legend')\r\n        .data(keys)\r\n        .enter()\r\n        .append('g')\r\n      // add circles\r\n      legend\r\n        .append('circle')\r\n        .attr('r', 7)\r\n        .attr('cx', -20)\r\n        .attr('cy', -40)\r\n        .attr('fill', d => color(d))\r\n      // add text\r\n      legend\r\n        .append('text')\r\n        .attr('x', -5)\r\n        .attr('y', -37)\r\n        .text(function(d) {\r\n          return d\r\n        })\r\n      // space the groups depending on their size\r\n      legend.attr('transform', (d, i) => {\r\n        const x = d3.sum(keys, (e, j) => j < i ? legend.nodes()[j].getBBox().width : 0)\r\n        return ('translate(' +\r\n                    (x + this.legendOffset + this.legendPadding * i) +\r\n                    ',0)')\r\n      })\r\n      /* Tooltip */\r\n      d3.select('#' + graphId + '.tooltip').remove()\r\n      const tooltip = d3\r\n        .select('body')\r\n        .append('div')\r\n        .attr('class', 'tooltip')\r\n        .attr('id', graphId)\r\n        .style('opacity', 0)\r\n      const that = this\r\n      const f = d3.format(this.valueFormat)\r\n      function showTooltip(evt, d) {\r\n        tooltip.transition().duration(60).style('opacity', 0.98)\r\n        tooltip\r\n          .html('<b>' +\r\n                    that.intervals[that.selectedInterval].format(that.dateParser(d.key)) +\r\n                    '</b><br/>' +\r\n                    f(d.value)) // d.name\r\n          .style('left', evt.pageX - 55 + 'px')\r\n          .style('top', evt.pageY - 45 + 'px')\r\n      }\r\n      function hideTooltip() {\r\n        tooltip.transition().duration(60).style('opacity', 0)\r\n      }\r\n      /* Line */\r\n      const line = d3\r\n        .line()\r\n        .curve(d3.curveMonotoneX)\r\n        .x(d => xScale(this.dateParser(d.key)))\r\n        .y(d => yScale(d.value))\r\n      /* Draw lines */\r\n      const lines = svg.selectAll('lines').data(this.slices).enter().append('g')\r\n      const path = lines\r\n        .append('path')\r\n        .attr('fill', 'none')\r\n        .attr('stroke', d => color(d.id))\r\n        .attr('stroke-width', this.lineWidth)\r\n        .attr('d', d => line(d.current))\r\n      path\r\n        .attr('stroke-dashoffset', function() {\r\n          return d3.select(this).node().getTotalLength()\r\n        })\r\n        .attr('stroke-dasharray', function() {\r\n          return d3.select(this).node().getTotalLength()\r\n        })\r\n        .transition()\r\n        .duration(5000)\r\n        .ease(d3.easeSin)\r\n        .attr('stroke-dashoffset', 0)\r\n      /* Draw points */\r\n      const points = lines\r\n        .selectAll('circle')\r\n        .data(d => d.current.map((v) => {\r\n          v.color = color(d.id)\r\n          v.name = d.id\r\n          return v\r\n        }))\r\n        .enter()\r\n        .append('circle')\r\n      points\r\n        .attr('stroke', d => d.color)\r\n        .attr('fill', 'white')\r\n        .attr('stroke-width', this.dotWidth)\r\n        .attr('cy', d => yScale(d.value))\r\n        .attr('cx', d => xScale(this.dateParser(d.key)))\r\n        .transition()\r\n        .duration(1500)\r\n        .delay((d, i) => i * 100 + 500)\r\n        .ease(d3.easeSin)\r\n        .attr('cy', d => yScale(d.value))\r\n        .attr('cx', d => xScale(this.dateParser(d.key)))\r\n        .attr('r', this.dotRadius)\r\n        .attr('class', 'datapoint')\r\n        .attr('id', (d, i) => i)\r\n        .style('opacity', 1)\r\n      const radius = this.dotRadius\r\n      points.on('mouseover', function(evt, d) {\r\n        d3.select(this)\r\n          .attr('fill', d => d.color)\r\n          .transition()\r\n          .duration(60)\r\n          .attr('r', radius + 5)\r\n        showTooltip(evt, d)\r\n      })\r\n      points.on('mouseleave', function() {\r\n        d3.select(this)\r\n          .attr('fill', 'white')\r\n          .transition()\r\n          .duration(60)\r\n          .attr('r', radius)\r\n        hideTooltip()\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n/* AXES */\r\n/* ticks */\r\ndiv ::v-deep .xAxis line,\r\ndiv ::v-deep .yAxis line {\r\n  stroke: #706f6f;\r\n  stroke-width: 0.5;\r\n  shape-rendering: geometricPrecision;\r\n}\r\n/* axis contour */\r\ndiv ::v-deep .xAxis path,\r\ndiv ::v-deep .yAxis path {\r\n  stroke: #706f6f;\r\n  stroke-width: 0.7;\r\n  shape-rendering: geometricPrecision;\r\n}\r\ndiv ::v-deep .yAxis path {\r\n  display: none;\r\n}\r\n/* axis text */\r\ndiv ::v-deep .xAxis text,\r\ndiv ::v-deep .yAxis text {\r\n  fill: #2b2929;\r\n  font-size: 1rem;\r\n  font-weight: 300;\r\n}\r\ndiv ::v-deep .gridline {\r\n  stroke: lightgray;\r\n  shape-rendering: geometricPrecision;\r\n  stroke-opacity: 0.5;\r\n  stroke-width: 10;\r\n}\r\n</style>\r\n<style>\r\ndiv.tooltip {\r\n  position: absolute;\r\n  text-align: center;\r\n  width: 110px;\r\n  height: 30px;\r\n  padding: 2px;\r\n  font: 12px sans-serif;\r\n  background: white;\r\n  color: #565656;\r\n  border: 0px;\r\n  border-radius: 2px;\r\n  pointer-events: none;\r\n  box-shadow: 0 0px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n}\r\n</style>\r\n","import mod from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewTimeSeries.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewTimeSeries.vue?vue&type=script&lang=js&\"","// extracted by mini-css-extract-plugin\nexport {};","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-12.use[0]!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-12.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-12.use[2]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewTimeSeries.vue?vue&type=style&index=0&id=eb551ed6&prod&scoped=true&lang=css&\"","// extracted by mini-css-extract-plugin\nexport {};","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-12.use[0]!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-12.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-12.use[2]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewTimeSeries.vue?vue&type=style&index=1&id=eb551ed6&prod&lang=css&\"","import { render, staticRenderFns } from \"./ChartViewTimeSeries.vue?vue&type=template&id=eb551ed6&scoped=true&\"\nimport script from \"./ChartViewTimeSeries.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewTimeSeries.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ChartViewTimeSeries.vue?vue&type=style&index=0&id=eb551ed6&prod&scoped=true&lang=css&\"\nimport style1 from \"./ChartViewTimeSeries.vue?vue&type=style&index=1&id=eb551ed6&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"eb551ed6\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('VRow',_vm._b({ref:\"domToImageNode\"},'VRow',_vm.$attrs,false),[_vm._t(\"default\"),_c('VCol',{staticClass:\"dom-to-image-exclude\",attrs:{\"cols\":\"12\"}},[_c('BaseButton',_vm._b({attrs:{\"icon\":\"mdiExport\",\"text\":\"Export\"},on:{\"click\":_vm.exportImage}},'BaseButton',{ progress: _vm.progress, status: _vm.status, error: _vm.error },false)),_c('BaseButtonDownloadData',_vm._b({},'BaseButtonDownloadData',{ disabled: !_vm.blob, extension: _vm.extension, filename: _vm.filename, data: _vm.blob },false)),_c('BaseButtonShare',_vm._b({attrs:{\"file-share\":\"\"}},'BaseButtonShare',{ files: _vm.files, disabled: !_vm.files },false))],1)],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <VRow ref=\"domToImageNode\" v-bind=\"$attrs\">\r\n    <slot />\r\n    <VCol cols=\"12\" class=\"dom-to-image-exclude\">\r\n      <BaseButton\r\n        icon=\"mdiExport\"\r\n        text=\"Export\"\r\n        v-bind=\"{ progress, status, error }\"\r\n        @click=\"exportImage\"\r\n      />\r\n      <BaseButtonDownloadData\r\n        v-bind=\"{ disabled: !blob, extension, filename, data: blob }\"\r\n      />\r\n      <BaseButtonShare file-share v-bind=\"{ files, disabled: !files }\" />\r\n    </VCol>\r\n  </VRow>\r\n</template>\r\n\r\n<script>\r\nimport exportImageMixinFactory from '@/mixins/export-image-mixin-factory'\r\nimport BaseButton from '@/components/base/button/BaseButton.vue'\r\nimport BaseButtonDownloadData from '@/components/base/button/download/BaseButtonDownloadData.vue'\r\nimport BaseButtonShare from '@/components/base/button/BaseButtonShare.vue'\r\n\r\nexport default {\r\n  components: { BaseButton, BaseButtonDownloadData, BaseButtonShare },\r\n  mixins: [exportImageMixinFactory()]\r\n}\r\n</script>\r\n","import mod from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewVRowWebShare.vue?vue&type=template&id=53512c70&\"\nimport script from \"./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","export default function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n}\n","export {default as nest} from \"./nest\";\nexport {default as set} from \"./set\";\nexport {default as map} from \"./map\";\nexport {default as keys} from \"./keys\";\nexport {default as values} from \"./values\";\nexport {default as entries} from \"./entries\";\n","import { TextFilterWidget } from 'dc'\r\nimport { merge } from 'lodash-es'\r\n\r\nimport kViewBlockMixin from '@/mixins/k-view-block'\r\n\r\nconst mixin = {\r\n  props: {\r\n    values: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    headers: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    messages: {\r\n      type: Object,\r\n      default: () => ({})\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      graphId: 'graph_' + this.$store.state.xp.currentTab,\r\n      totalCount: 0,\r\n      filterCount: 0\r\n    }\r\n  },\r\n  mounted() {\r\n    this.drawViz()\r\n  },\r\n  watch: {\r\n    values() {\r\n      this.drawViz()\r\n    }\r\n  },\r\n  methods: {\r\n    drawViz() { },\r\n    createTextFilterWidget(parent, placeholder = 'Search') {\r\n      const widget = new TextFilterWidget(parent)\r\n      widget.placeHolder(this.$tev(placeholder, placeholder))\r\n      return widget\r\n    }\r\n  }\r\n}\r\n\r\nexport default merge(mixin, kViewBlockMixin)\r\n","import * as d3 from 'd3'\r\n/**\r\n * Fill in the missing dates of an array of dated objects with a specific value.\r\n * @param  {Array} data  array of objects that include dates\r\n * @param  {String} dateAccessor  the key of date object\r\n * @param  {String} valueAccessor the key of the value to add for each missing date\r\n * @param  {String} interval  the d3 interval between each date, e.g: d3.timeDay, d3.timeMonth\r\n * @param  {Any} fillValue  the value to fill for each missing date, default to 0.\r\n * @param  {Date} minDate  the starting date range, computed from the data by default.\r\n * @param  {Date} maxDate  the ending date range, computed from the data by default.\r\n * @return {Array} the modified data array with the missing dates and their value added\r\n */\r\nexport function addMissingDate(\r\n  data,\r\n  dateAccessor,\r\n  valueAccessor,\r\n  interval,\r\n  fillValue = 0,\r\n  minDate = null,\r\n  maxDate = null\r\n) {\r\n  if (data.length <= 0) { return [] }\r\n  // Compute the min and max date\r\n  const extent = d3.extent(data, d => new Date(d[dateAccessor]))\r\n\r\n  // Get the list of dates between this extent\r\n  const dates = interval.range(\r\n    minDate !== null ? interval.floor(minDate) : interval.floor(extent[0]),\r\n    maxDate !== null ? interval.ceil(maxDate) : interval.ceil(extent[1]),\r\n    1\r\n  )\r\n\r\n  // Get dates that are not in the above list\r\n  const missingDates = dates.filter(\r\n    value => !data.map(d => d[dateAccessor]).includes(value.toString())\r\n  )\r\n\r\n  // Add and fill missing dates\r\n  missingDates.forEach((date) => {\r\n    const obj = { ...data[0] }\r\n    obj[dateAccessor] = date\r\n    obj[valueAccessor] = fillValue\r\n    data.push(obj)\r\n  })\r\n\r\n  return data\r\n}\r\n"],"names":[],"sourceRoot":""}