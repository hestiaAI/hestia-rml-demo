{"version":3,"file":"data-experience.common.6563.js","mappings":";;;;;;;;;;;;;;;AAAA,+BAA+B,6BAA6B,+DAA+D,OAAO,aAAa,wBAAwB,OAAO,sBAAsB,YAAY,OAAO,oBAAoB,YAAY,GAAG,YAAY,aAAa,kBAAkB,+EAA+E,OAAO,sBAAsB,YAAY,OAAO,kBAAkB,YAAY,GAAG,YAAY,aAAa,kBAAkB,wFAAwF,OAAO,sBAAsB,YAAY,OAAO,uBAAuB,YAAY,GAAG,YAAY,aAAa,kBAAkB,+DAA+D,OAAO,sBAAsB,YAAY,OAAO,iCAAiC,YAAY,GAAG,YAAY,aAAa,kBAAkB,+GAA+G,mCAAmC,sBAAsB,YAAY,GAAG,0BAA0B,OAAO,aAAa,oCAAoC,yBAAyB,yCAAyC;AAC9tC;AACA;;;;;;;;;;;;;;;;;;;;;;;ACkDwB;AACA;AACc;AACX;AAC0B;AACV;AACoB;AACF;AAC+B;;AAE5F;AACA,uBAAuB,CAAC,yBAAe;;AAEvC,uFAAe;AACf,qCAAqC,oDAAkB,kDAAqB;AAC5E,WAAW,gBAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,YAAY;AAClB,MAAM,YAAY;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,sBAAY;AACrC,4BAA4B,uBAAa;AACzC;AACA;AACA;AACA;AACA;AACA,iBAAiB,sBAAY;AAC7B,eAAe,oBAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,6BAAW;AAChC,kBAAkB,uBAAW;AAC7B,6BAA6B,YAAY;AACzC,gCAAgC,YAAY;AAC5C,2BAA2B,WAAW;AACtC,mCAAmC,WAAW;AAC9C;AACA,MAAM,kBAAS;AACf;AACA,QAAQ,YAAY;AACpB;AACA,MAAM,kBAAS;AACf;AACA,QAAQ,YAAY;AACpB;AACA,MAAM,kBAAS;AACf;AACA,QAAQ,YAAY;AACpB;AACA,MAAM,kBAAS;AACf;AACA,QAAQ,YAAY;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBACH;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,2BAAgB;AACnD;AACA,cAAc,kBACC;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,2BAAgB;AAC3D;AACA,yBAAyB,mBAAS;AAClC,cAAc,kBACC;AACf;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,2BAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAY;AACvB;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,kBACC;AACf;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,2BAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAY;AACvB,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,YAAY;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,kBAAS;AACnB,YAAY,YAAY;AACxB,YAAY,YAAY;AACxB;AACA;AACA,MAAM,YAAY;AAClB;AACA;AACA,CAAC;;;AChU2J,CAAC,4FAAe,kDAAG,EAAC;;;;ACAvE;AAC3B;AACL;;;AAGzE;AACA,CAAyG;AACzG,gBAAgB,sCAAU;AAC1B,EAAE,uDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,+DAAe;;;;;;;;;;;;;;;;AClBf,+BAA+B,6BAA6B,yBAAyB,qBAAqB,wDAAwD,0CAA0C,aAAa,0BAA0B,OAAO,mCAAmC,KAAK,yBAAyB,gBAAgB,8DAA8D,8CAA8C,4BAA4B,uFAAuF,sCAAsC,OAAO,iBAAiB,qBAAqB,wCAAwC;AACrqB;AACA;;;;;;;;;;;;;ACiByE;AACT;AACiC;AACvB;;AAE1E,kFAAe;AACf,0BAA0B,mDAAwB,wDAAiB;AACnE,WAAW,6CAAuB;AAClC,CAAC;;;AC3BsJ,CAAC,uFAAe,6CAAG,EAAC;;;;ACAvE;AAC3B;AACL;;;AAGpE;AACA,CAAyG;AACzG,gBAAgB,sCAAU;AAC1B,EAAE,kDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,0DAAe;;;;;;;;;;;;;;;;AClBf,+BAA+B,6BAA6B,eAAe,sBAAsB,yEAAyE,qBAAqB,YAAY,aAAa,4DAA4D,mCAAmC,kBAAkB;AACzU;AACA;;;;;ACSA,6EAAe;;AAEf,CAAC;;;ACboJ,CAAC,qFAAe,wCAAG,EAAC;;;;ACA1E;AAC3B;AACL;;;AAG/D;AACA,CAA4G;AAC5G,gBAAgB,sCAAU;AAC1B,EAAE,gDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,qDAAe;;;;;;;;;;;;AClBsB;AACJ;AACjC;AACmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB;AACxB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,iBAAiB;AACjB;AACA,yBAAyB,gDAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,+DAAe,8DAAK,QAAQ,qEAAe,CAAC;;;;;;;;;;;;;;;;;;;AC7CpB;AACA;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACG;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,iBAAiB;AACjB,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,mBAAmB,gDAAS;AAC5B;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,UAAU,sDAAyB;AACnC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH","sources":["webpack://data-experience/./src/components/chart/view/ChartViewOverviewHerTinder.vue?06f5","webpack://data-experience/src/components/chart/view/ChartViewOverviewHerTinder.vue","webpack://data-experience/./src/components/chart/view/ChartViewOverviewHerTinder.vue?e724","webpack://data-experience/./src/components/chart/view/ChartViewOverviewHerTinder.vue","webpack://data-experience/./src/components/chart/view/ChartViewVRowWebShare.vue?ea0d","webpack://data-experience/src/components/chart/view/ChartViewVRowWebShare.vue","webpack://data-experience/./src/components/chart/view/ChartViewVRowWebShare.vue?2101","webpack://data-experience/./src/components/chart/view/ChartViewVRowWebShare.vue","webpack://data-experience/./src/components/chart/view/filters/ChartViewFilters.vue?cff0","webpack://data-experience/src/components/chart/view/filters/ChartViewFilters.vue","webpack://data-experience/./src/components/chart/view/filters/ChartViewFilters.vue?e912","webpack://data-experience/./src/components/chart/view/filters/ChartViewFilters.vue","webpack://data-experience/./src/components/chart/view/mixin.js","webpack://data-experience/./src/components/chart/view/utils/dc-helpers.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('VContainer',[_c('ChartViewVRowWebShare',[_c('VCol',{attrs:{\"cols\":\"12\"}},[_c('VRow',[_c('VCol',{attrs:{\"cols\":\"12\",\"md\":\"8\"}},[_c('div',{attrs:{\"id\":`likes-chart-${_vm.graphId}`}},[_c('div',{staticStyle:{\"display\":\"flex\"}},[_c('strong',[_vm._v(\"Likes / Passes / Matches per month\")])])])]),_c('VCol',{attrs:{\"cols\":\"12\",\"md\":\"4\"}},[_c('div',{attrs:{\"id\":`app-chart-${_vm.graphId}`}},[_c('div',{staticStyle:{\"display\":\"flex\"}},[_c('strong',[_vm._v(\"App\")])]),_c('ChartViewFilters')],1)])],1),_c('VRow',[_c('VCol',{attrs:{\"cols\":\"12\",\"md\":\"8\"}},[_c('div',{attrs:{\"id\":`messages-chart-${_vm.graphId}`}},[_c('div',{staticStyle:{\"display\":\"flex\"}},[_c('strong',[_vm._v(\"Messages per month\")])])])]),_c('VCol',{attrs:{\"cols\":\"12\",\"md\":\"4\"}},[_c('div',{attrs:{\"id\":`sexualOrientations-chart-${_vm.graphId}`}},[_c('div',{staticStyle:{\"display\":\"flex\"}},[_c('strong',[_vm._v(\"Sexual Orientations\")])]),_c('ChartViewFilters')],1)])],1)],1)],1),_c('VRow',[_c('div',{staticClass:\"dc-data-count\",attrs:{\"id\":`dc-data-count-${_vm.graphId}`}})]),_c('VRow',[_c('VCol',{attrs:{\"cols\":\"12\"}},[_c('UnitFilterableTable',_vm._b({},'UnitFilterableTable',{ headers: _vm.header, items: _vm.results },false))],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <VContainer>\r\n    <ChartViewVRowWebShare>\r\n      <VCol cols=\"12\">\r\n        <VRow>\r\n          <VCol cols=\"12\" md=\"8\">\r\n            <div :id=\"`likes-chart-${graphId}`\">\r\n              <div style=\"display: flex\">\r\n                <strong>Likes / Passes / Matches per month</strong>\r\n              </div>\r\n            </div>\r\n          </VCol>\r\n          <VCol cols=\"12\" md=\"4\">\r\n            <div :id=\"`app-chart-${graphId}`\">\r\n              <div style=\"display: flex\">\r\n                <strong>App</strong>\r\n              </div>\r\n              <ChartViewFilters />\r\n            </div>\r\n          </VCol>\r\n        </VRow>\r\n        <VRow>\r\n          <VCol cols=\"12\" md=\"8\">\r\n            <div :id=\"`messages-chart-${graphId}`\">\r\n              <div style=\"display: flex\">\r\n                <strong>Messages per month</strong>\r\n              </div>\r\n            </div>\r\n          </VCol>\r\n          <VCol cols=\"12\" md=\"4\">\r\n            <div :id=\"`sexualOrientations-chart-${graphId}`\">\r\n              <div style=\"display: flex\">\r\n                <strong>Sexual Orientations</strong>\r\n              </div>\r\n              <ChartViewFilters />\r\n            </div>\r\n          </VCol>\r\n        </VRow>\r\n      </VCol>\r\n    </ChartViewVRowWebShare>\r\n    <VRow>\r\n      <div :id=\"`dc-data-count-${graphId}`\" class=\"dc-data-count\" />\r\n    </VRow>\r\n    <VRow>\r\n      <VCol cols=\"12\">\r\n        <UnitFilterableTable v-bind=\"{ headers: header, items: results }\" />\r\n      </VCol>\r\n    </VRow>\r\n  </VContainer>\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from 'd3'\r\nimport * as dc from 'dc'\r\nimport crossfilter from 'crossfilter2'\r\nimport mixin from './mixin'\r\nimport { addPiePercentage } from './utils/dc-helpers'\r\nimport { isValidDate } from '@/utils/dates'\r\nimport ChartViewVRowWebShare from './ChartViewVRowWebShare.vue'\r\nimport ChartViewFilters from './filters/ChartViewFilters.vue'\r\nimport UnitFilterableTable from '@/components/unit/filterable-table/UnitFilterableTable.vue'\r\n\r\n// Remove warning on default colorscheme, even if not used..\r\ndc.config.defaultColors(d3.schemePaired)\r\n\r\nexport default {\r\n  components: { ChartViewVRowWebShare, ChartViewFilters, UnitFilterableTable },\r\n  mixins: [mixin],\r\n  props: {},\r\n  data() {\r\n    return {\r\n      header: [\r\n        { text: 'Date', value: 'dateStr' },\r\n        { text: 'App', value: 'app' },\r\n        { text: 'Likes', value: 'likes' },\r\n        { text: 'Passes', value: 'passes' },\r\n        { text: 'Messages sent', value: 'messagesSent' },\r\n        { text: 'Messages received', value: 'messagesReceived' },\r\n        { text: 'Matches', value: 'matches' },\r\n        { text: 'Sexual Orientation', value: 'sexualOrientations' },\r\n        { text: 'User ID', value: 'userId' }\r\n      ],\r\n      results: [],\r\n      colorPalette: ['#58539E', '#847CEB', '#605BAB', '#4A4685', '#9498F2']\r\n    }\r\n  },\r\n  methods: {\r\n    resetAll() {\r\n      dc.filterAll()\r\n      dc.renderAll()\r\n    },\r\n    decodeDefault(str) {\r\n      try {\r\n        return str && str !== 'undefined'\r\n          ? decodeURIComponent(escape(str))\r\n          : 'Unknown'\r\n      } catch (e) {\r\n        console.error(e)\r\n        return str || 'Unknown'\r\n      }\r\n    },\r\n    drawViz() {\r\n      // Parse and format data\r\n      const dateParser = d3.timeParse('%Y-%m-%d')\r\n      const dateFormatter = d3.timeFormat('%B, %Y')\r\n      this.results = this.values.map((d) => {\r\n        const date = dateParser(d.dateValue) || new Date(d.dateValue)\r\n        return {\r\n          date,\r\n          dateStr: d.dateValue,\r\n          month: d3.timeMonth(date),\r\n          day: d3.timeDay(date),\r\n          app: this.decodeDefault(d.app),\r\n          likes: +this.decodeDefault(d.likes) || 0,\r\n          passes: +this.decodeDefault(d.passes) || 0,\r\n          messagesSent: +this.decodeDefault(d.messagesSent) || 0,\r\n          messagesReceived: +this.decodeDefault(d.messagesReceived) || 0,\r\n          matches: +this.decodeDefault(d.matches) || 0,\r\n          sexualOrientations: d.app === 'tinder'\r\n            ? JSON.parse(d.sexualOrientations).join(' | ')\r\n            : this.decodeDefault(d.sexualOrientations),\r\n          userId: this.decodeDefault(d.userId)\r\n        }\r\n      })\r\n        .filter(d => isValidDate(d.date))\r\n      const ndx = crossfilter(this.results)\r\n      const likesChart = new dc.LineChart(`#likes-chart-${this.graphId}`)\r\n      const messagesChart = new dc.LineChart(`#messages-chart-${this.graphId}`)\r\n      const appChart = new dc.PieChart(`#app-chart-${this.graphId}`)\r\n      const orientationChart = new dc.PieChart(`#sexualOrientations-chart-${this.graphId}`)\r\n      // Bind reset filters buttons\r\n      d3.select(`#likes-chart-${this.graphId} a.reset`).on('click', function() {\r\n        likesChart.filterAll()\r\n        dc.redrawAll()\r\n      })\r\n      d3.select(`#messages-chart-${this.graphId} a.reset`).on('click', function() {\r\n        messagesChart.filterAll()\r\n        dc.redrawAll()\r\n      })\r\n      d3.select(`#app-chart-${this.graphId} a.reset`).on('click', function() {\r\n        appChart.filterAll()\r\n        dc.redrawAll()\r\n      })\r\n      d3.select(`#sexualOrientations-chart-${this.graphId} a.reset`).on('click', function() {\r\n        orientationChart.filterAll()\r\n        dc.redrawAll()\r\n      })\r\n      // Custom reduce function to get unique user ids per dimension\r\n      function add(p, d) {\r\n        if (d.userId in p.userIds) {\r\n          p.userIds[d.userId]++\r\n        } else {\r\n          p.userIds[d.userId] = 1\r\n        }\r\n        return p\r\n      }\r\n      function remove(p, d) {\r\n        p.userIds[d.userId]--\r\n        if (p.userIds[d.userId] === 0) {\r\n          delete p.userIds[d.userId]\r\n        }\r\n        return p\r\n      }\r\n      function init() {\r\n        return { userIds: {} }\r\n      }\r\n      // Create dimensions\r\n      const appDimension = ndx.dimension(d => d.app)\r\n      const orientDimension = ndx.dimension(d => d.sexualOrientations)\r\n      const dateDimension = ndx.dimension(d => d.month)\r\n      // Create groups\r\n      const appGroup = appDimension.group().reduce(add, remove, init)\r\n      const orientGroup = orientDimension.group().reduce(add, remove, init)\r\n      const likesGroup = dateDimension.group().reduceSum(d => d.likes)\r\n      const passesGroup = dateDimension.group().reduceSum(d => d.passes)\r\n      const matchesGroup = dateDimension.group().reduceSum(d => d.matches)\r\n      const msgSentGroup = dateDimension.group().reduceSum(d => d.messagesSent)\r\n      const msgRcvGroup = dateDimension\r\n        .group()\r\n        .reduceSum(d => d.messagesReceived)\r\n      const height = 250\r\n      // Render pie chart for app\r\n      let width = d3\r\n        .select(`#app-chart-${this.graphId}`)\r\n        .node()\r\n        .getBoundingClientRect().width\r\n      const scale = Math.min(width, height)\r\n      appChart\r\n        .width(width)\r\n        .height(height)\r\n        .slicesCap(10)\r\n        .radius(scale / 4)\r\n        .innerRadius(scale / 8)\r\n        .externalLabels(50)\r\n        .dimension(appDimension)\r\n        .group(appGroup)\r\n        .valueAccessor(d => Object.keys(d.value.userIds).length)\r\n        .title(d => d.key + ': ' + Object.keys(d.value.userIds).length + ' user(s)')\r\n        .drawPaths(true)\r\n        .minAngleForLabel(0.1)\r\n        .ordinalColors(this.colorPalette)\r\n      appChart.on('pretransition', addPiePercentage)\r\n      // Render pie chart for sexual orientation\r\n      width = d3\r\n        .select(`#sexualOrientations-chart-${this.graphId}`)\r\n        .node()\r\n        .getBoundingClientRect().width\r\n      orientationChart\r\n        .width(width)\r\n        .height(height)\r\n        .slicesCap(10)\r\n        .radius(scale / 4)\r\n        .innerRadius(scale / 8)\r\n        .externalLabels(50)\r\n        .dimension(orientDimension)\r\n        .group(orientGroup)\r\n        .valueAccessor(d => Object.keys(d.value.userIds).length)\r\n        .title(d => d.key + ': ' + Object.keys(d.value.userIds).length + ' user(s)')\r\n        .drawPaths(true)\r\n        .minAngleForLabel(0.1)\r\n        .ordinalColors(this.colorPalette)\r\n      orientationChart.on('pretransition', addPiePercentage)\r\n      // Render Likes / passes chart\r\n      const dateExtent = d3.extent(this.results, d => d.date)\r\n      width = d3\r\n        .select(`#likes-chart-${this.graphId}`)\r\n        .node()\r\n        .getBoundingClientRect().width\r\n      likesChart\r\n        .margins({ top: 20, left: 40, right: 20, bottom: 20 })\r\n        .width(width)\r\n        .turnOnControls(true)\r\n        .curve(d3.curveMonotoneX)\r\n        .xyTipsOn(true)\r\n        .height(height)\r\n        .brushOn(false)\r\n        .renderArea(true)\r\n        .dimension(dateDimension)\r\n        .group(likesGroup, 'Likes')\r\n        .x(d3.scaleTime().domain(dateExtent))\r\n        .title('Likes', d => `${dateFormatter(d.key)}: ${d.value} likes`)\r\n        .legend(new dc.Legend()\r\n          .x(width - 100)\r\n          .y(5)\r\n          .itemHeight(13)\r\n          .gap(5))\r\n        .elasticY(true)\r\n        .renderDataPoints({\r\n          radius: 3,\r\n          fillOpacity: 0.8,\r\n          strokeOpacity: 0\r\n        })\r\n        .clipPadding(10)\r\n        .yAxisLabel('Total ')\r\n        .ordinalColors(['#2ecc71', '#e74c3c', '#3498db'])\r\n      likesChart.xAxis().ticks(10)\r\n      likesChart.yAxis().ticks(6)\r\n      likesChart.stack(passesGroup, 'Passes')\r\n      likesChart.title('Passes', d => `${dateFormatter(d.key)}: ${d.value} passes`)\r\n      likesChart.stack(matchesGroup, 'Matches')\r\n      likesChart.title('Matches', d => `${dateFormatter(d.key)}: ${d.value} matches`)\r\n      // Render Messages chart\r\n      width = d3\r\n        .select(`#messages-chart-${this.graphId}`)\r\n        .node()\r\n        .getBoundingClientRect().width\r\n      messagesChart\r\n        .margins({ top: 20, left: 40, right: 20, bottom: 20 })\r\n        .width(width)\r\n        .turnOnControls(false)\r\n        .curve(d3.curveMonotoneX)\r\n        .xyTipsOn(true)\r\n        .height(height)\r\n        .brushOn(false)\r\n        .renderArea(true)\r\n        .dimension(dateDimension)\r\n        .group(msgSentGroup, 'Messages Sent')\r\n        .x(d3.scaleTime().domain(dateExtent))\r\n        .legend(new dc.Legend()\r\n          .x(width - 110)\r\n          .y(5)\r\n          .itemHeight(13)\r\n          .gap(5))\r\n        .elasticY(true)\r\n        .renderDataPoints({\r\n          radius: 3,\r\n          fillOpacity: 0.8,\r\n          strokeOpacity: 0\r\n        })\r\n        .clipPadding(10)\r\n        .yAxisLabel('Total ')\r\n        .ordinalColors(['#2c3e50', '#58539E'])\r\n      messagesChart.xAxis().ticks(10)\r\n      messagesChart.yAxis().ticks(6)\r\n      messagesChart.stack(msgRcvGroup, 'Messages Received')\r\n      messagesChart.title('Messages Received', d => `${dateFormatter(d.key)}: ${d.value} messages received`)\r\n      messagesChart.title('Messages Sent', d => `${dateFormatter(d.key)}: ${d.value} messages sent`)\r\n      // Render counter and table\r\n      const all = ndx.groupAll()\r\n      const allDim = ndx.dimension(d => d)\r\n      const tableCount = new dc.DataCount(`#dc-data-count-${this.graphId}`)\r\n      tableCount\r\n        .crossfilter(ndx)\r\n        .groupAll(all)\r\n        .html({\r\n          some: '<strong>%filter-count</strong> selected out of <strong>%total-count</strong> records' +\r\n                    \" | <a class='resetAll'>Reset All</a>\",\r\n          all: 'All <strong>%total-count</strong> records' +\r\n                    ' selected. Please click on the graph to apply filters.'\r\n        })\r\n        .on('pretransition', (chart, filter) => {\r\n          this.results = allDim.top(all.value())\r\n          d3.select(`#dc-data-count-${this.graphId} a.resetAll`).on('click', () => {\r\n            dc.filterAll()\r\n            dc.renderAll()\r\n          })\r\n        })\r\n      dc.renderAll()\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewOverviewHerTinder.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewOverviewHerTinder.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewOverviewHerTinder.vue?vue&type=template&id=7ccdf49e&\"\nimport script from \"./ChartViewOverviewHerTinder.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewOverviewHerTinder.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('VRow',_vm._b({ref:\"domToImageNode\"},'VRow',_vm.$attrs,false),[_vm._t(\"default\"),_c('VCol',{staticClass:\"dom-to-image-exclude\",attrs:{\"cols\":\"12\"}},[_c('BaseButton',_vm._b({attrs:{\"icon\":\"mdiExport\",\"text\":\"Export\"},on:{\"click\":_vm.exportImage}},'BaseButton',{ progress: _vm.progress, status: _vm.status, error: _vm.error },false)),_c('BaseButtonDownloadData',_vm._b({},'BaseButtonDownloadData',{ disabled: !_vm.blob, extension: _vm.extension, filename: _vm.filename, data: _vm.blob },false)),_c('BaseButtonShare',_vm._b({attrs:{\"file-share\":\"\"}},'BaseButtonShare',{ files: _vm.files, disabled: !_vm.files },false))],1)],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <VRow ref=\"domToImageNode\" v-bind=\"$attrs\">\r\n    <slot />\r\n    <VCol cols=\"12\" class=\"dom-to-image-exclude\">\r\n      <BaseButton\r\n        icon=\"mdiExport\"\r\n        text=\"Export\"\r\n        v-bind=\"{ progress, status, error }\"\r\n        @click=\"exportImage\"\r\n      />\r\n      <BaseButtonDownloadData\r\n        v-bind=\"{ disabled: !blob, extension, filename, data: blob }\"\r\n      />\r\n      <BaseButtonShare file-share v-bind=\"{ files, disabled: !files }\" />\r\n    </VCol>\r\n  </VRow>\r\n</template>\r\n\r\n<script>\r\nimport exportImageMixinFactory from '@/mixins/export-image-mixin-factory'\r\nimport BaseButton from '@/components/base/button/BaseButton.vue'\r\nimport BaseButtonDownloadData from '@/components/base/button/download/BaseButtonDownloadData.vue'\r\nimport BaseButtonShare from '@/components/base/button/BaseButtonShare.vue'\r\n\r\nexport default {\r\n  components: { BaseButton, BaseButtonDownloadData, BaseButtonShare },\r\n  mixins: [exportImageMixinFactory()]\r\n}\r\n</script>\r\n","import mod from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewVRowWebShare.vue?vue&type=template&id=53512c70&\"\nimport script from \"./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('p',{staticClass:\"filters\"},[_c('span',[_vm._v(\" \"+_vm._s(_vm.$t('Current filter'))+\" \"),_c('span',{staticClass:\"filter\"})]),_c('a',{directives:[{name:\"t\",rawName:\"v-t\",value:('reset'),expression:\"'reset'\"}],staticClass:\"reset\",staticStyle:{\"display\":\"none\"}})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <p class=\"filters\">\r\n    <span>\r\n      {{ $t('Current filter') }}\r\n      <span class=\"filter\" />\r\n    </span>\r\n    <a v-t=\"'reset'\" class=\"reset\" style=\"display: none\" />\r\n  </p>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n\r\n}\r\n</script>\r\n","import mod from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewFilters.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewFilters.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewFilters.vue?vue&type=template&id=2f9280d1&\"\nimport script from \"./ChartViewFilters.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewFilters.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { TextFilterWidget } from 'dc'\r\nimport { merge } from 'lodash-es'\r\n\r\nimport kViewBlockMixin from '@/mixins/k-view-block'\r\n\r\nconst mixin = {\r\n  props: {\r\n    values: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    headers: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    messages: {\r\n      type: Object,\r\n      default: () => ({})\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      graphId: 'graph_' + this.$store.state.xp.currentTab,\r\n      totalCount: 0,\r\n      filterCount: 0\r\n    }\r\n  },\r\n  mounted() {\r\n    this.drawViz()\r\n  },\r\n  watch: {\r\n    values() {\r\n      this.drawViz()\r\n    }\r\n  },\r\n  methods: {\r\n    drawViz() { },\r\n    createTextFilterWidget(parent, placeholder = 'Search') {\r\n      const widget = new TextFilterWidget(parent)\r\n      widget.placeHolder(this.$tev(placeholder, placeholder))\r\n      return widget\r\n    }\r\n  }\r\n}\r\n\r\nexport default merge(mixin, kViewBlockMixin)\r\n","import * as d3 from 'd3'\r\nimport * as dc from 'dc'\r\n\r\n// Functions to add x-label & y-label to Row Charts (Unsupported by dc.js)\r\n// https://www.intothevoid.io/data-visualization/row-chart-axis-labels-dc-js/\r\n// Use with:\r\n// contentChart.on('postRender', function (chart) {\r\n//  addXLabel(chart, 'Hours watched')\r\n// })\r\nexport function addXLabel(chartToUpdate, displayText) {\r\n  const textSelection = chartToUpdate\r\n    .svg()\r\n    .append('text')\r\n    .attr('class', 'x-axis-label')\r\n    .attr('text-anchor', 'middle')\r\n    .attr('x', chartToUpdate.width() / 2)\r\n    .attr('y', chartToUpdate.height() - 10)\r\n    .text(displayText)\r\n  const textDims = textSelection.node().getBBox()\r\n  const chartMargins = chartToUpdate.margins()\r\n\r\n  // Dynamically adjust positioning after reading text dimension from DOM\r\n  textSelection\r\n    .attr(\r\n      'x',\r\n      chartMargins.left +\r\n        (chartToUpdate.width() - chartMargins.left - chartMargins.right) / 2\r\n    )\r\n    .attr('y', chartToUpdate.height() - Math.ceil(textDims.height) / 2)\r\n}\r\nexport function addYLabel(chartToUpdate, displayText) {\r\n  const textSelection = chartToUpdate\r\n    .svg()\r\n    .append('text')\r\n    .attr('class', 'y-axis-label')\r\n    .attr('text-anchor', 'middle')\r\n    .attr('transform', 'rotate(-90)')\r\n    .attr('x', -chartToUpdate.height() / 2)\r\n    .attr('y', 10)\r\n    .text(displayText)\r\n  const textDims = textSelection.node().getBBox()\r\n  const chartMargins = chartToUpdate.margins()\r\n\r\n  // Dynamically adjust positioning after reading text dimension from DOM\r\n  textSelection\r\n    .attr(\r\n      'x',\r\n      -chartMargins.top -\r\n        (chartToUpdate.height() - chartMargins.top - chartMargins.bottom) / 2\r\n    )\r\n    .attr(\r\n      'y',\r\n      Math.max(\r\n        Math.ceil(textDims.height),\r\n        chartMargins.left - Math.ceil(textDims.height) - 5\r\n      )\r\n    )\r\n}\r\n\r\n/**\r\n * Transform a simple group to a cumulative one in order\r\n * to make cumulative line chart\r\n * @param {Crossfilter group} group the group to transform\r\n * @returns the cumulative group\r\n */\r\nexport function createCumulativeGroup(group) {\r\n  return {\r\n    all() {\r\n      const cumulate = {}\r\n      return group.all().map(function(d) {\r\n        if (cumulate[d.key[0]]) {\r\n          cumulate[d.key[0]] += d.value\r\n        } else {\r\n          cumulate[d.key[0]] = d.value\r\n        }\r\n        return { key: d.key, value: cumulate[d.key[0]] }\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Remove datapoints that are null in a crossfilter group\r\n * Used to hide empty bins in a bar graph\r\n * @param {Crossfilter group} group the group to transform\r\n * @returns the cleaned group\r\n */\r\nexport function removeEmptyBins(group) {\r\n  return {\r\n    top(n) {\r\n      return group\r\n        .top(Infinity)\r\n        .filter(function(d) {\r\n          return d.value.count !== 0 && d.value !== 0\r\n        })\r\n        .slice(0, n)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addPiePercentage(chart) {\r\n  chart.selectAll('text.pie-slice.pie-label').call(function(t) {\r\n    t.each(function(d) {\r\n      const self = d3.select(this)\r\n      let text = self.text()\r\n      if (text.length > 14) { text = text.substring(0, 14) + '.. ' }\r\n      if (text.length > 0) {\r\n        text =\r\n          text +\r\n          ' (' +\r\n          dc.utils.printSingleValue(\r\n            ((d.endAngle - d.startAngle) / (2 * Math.PI)) * 100\r\n          ) +\r\n          '%)'\r\n      }\r\n      self.text(text)\r\n    })\r\n  })\r\n}\r\n"],"names":[],"sourceRoot":""}