{"version":3,"file":"DataExperience.umd.min.5487.js","mappings":"gQAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,aAAa,CAACA,EAAG,OAAO,CAACE,MAAM,CAAC,MAAQ,KAAK,CAACF,EAAG,OAAO,CAACE,MAAM,CAAC,KAAO,OAAO,CAACF,EAAG,MAAM,CAACE,MAAM,CAAC,GAAK,oBAAsBJ,EAAIK,UAAU,CAACH,EAAG,OAAO,CAACI,YAAY,mBAAmBC,SAAS,CAAC,YAAcP,EAAIQ,GAAGR,EAAIS,SAAS,wCAAwCP,EAAG,qBAAqB,GAAGA,EAAG,MAAM,CAACI,YAAY,cAAcF,MAAM,CAAC,GAAK,cAAgBJ,EAAIK,UAAU,CAACH,EAAG,iCAAiC,MAAM,GAAGA,EAAG,OAAO,CAACA,EAAG,OAAO,CAACE,MAAM,CAAC,KAAO,MAAM,CAACF,EAAG,MAAM,CAACE,MAAM,CAAC,GAAK,gBAAkBJ,EAAIK,UAAU,CAACH,EAAG,MAAM,CAACQ,YAAY,CAAC,QAAU,SAAS,CAACR,EAAG,OAAO,CAACI,YAAY,mBAAmBC,SAAS,CAAC,YAAcP,EAAIQ,GAAGR,EAAIS,SAAS,eAAeP,EAAG,WAAWA,EAAG,MAAM,CAACE,MAAM,CAAC,GAAK,qBAAqB,GAAGF,EAAG,qBAAqB,KAAKA,EAAG,OAAO,CAACE,MAAM,CAAC,KAAO,MAAM,CAACF,EAAG,MAAM,CAACE,MAAM,CAAC,GAAK,aAAeJ,EAAIK,UAAU,CAACH,EAAG,OAAO,CAACS,WAAW,CAAC,CAACC,KAAK,IAAIC,QAAQ,MAAMC,MAAOd,EAAIS,SAAS,OAAQM,WAAW,oBAAoBT,YAAY,qBAAqBJ,EAAG,qBAAqB,KAAKA,EAAG,OAAO,CAACE,MAAM,CAAC,KAAO,MAAM,CAACF,EAAG,MAAM,CAACE,MAAM,CAAC,GAAK,iBAAmBJ,EAAIK,UAAU,CAACH,EAAG,MAAM,CAACQ,YAAY,CAAC,QAAU,SAAS,CAACR,EAAG,OAAO,CAACS,WAAW,CAAC,CAACC,KAAK,IAAIC,QAAQ,MAAMC,MAAOd,EAAIS,SAAS,YAAaM,WAAW,yBAAyBT,YAAY,qBAAqBJ,EAAG,WAAWA,EAAG,MAAM,CAACE,MAAM,CAAC,GAAK,sBAAsB,GAAGF,EAAG,qBAAqB,MAAM,GAAGA,EAAG,yBAAyBF,EAAIgB,GAAG,CAAC,EAAE,yBAAyB,CAAEC,YAAajB,EAAIiB,YAAaC,WAAYlB,EAAIkB,aAAa,IAAQhB,EAAG,sBAAsBF,EAAIgB,GAAG,CAAC,EAAE,sBAAsB,CAAEG,QAASnB,EAAIoB,OAAQC,MAAOrB,EAAIsB,QAASC,2BAA4BvB,EAAIuB,6BAA6B,KAAS,EAChtD,EACIC,EAAkB,G,mGC0DtBC,EAAGC,OAAOC,cAAc,gBAExB,OACEC,WAAY,CAAEC,6BAA4B,8BAAkB,oCAAwB,iCAAqB,KACzGC,OAAQ,CAACC,EAAA,YACTC,MAAO,CACLvB,SAAU,CACRwB,KAAMC,OACNC,QAAS,KACA,CAAC,KAIdC,OACE,MAAO,CACLhB,OAAQ,CACN,CAAEiB,KAAM,aAAcvB,MAAO,aAC7B,CAAEuB,KAAM,YAAavB,MAAO,YAC5B,CAAEuB,KAAM,gBAAiBvB,MAAO,SAChC,CAAEuB,KAAM,UAAWvB,MAAO,WAC1B,CAAEuB,KAAM,WAAYvB,MAAO,YAC3B,CAAEuB,KAAM,eAAgBvB,MAAO,YAEjCQ,QAAS,GAEb,EACAgB,QAAS,CACPC,gBAAgBC,GACd,MAAO,CACLC,IAAIC,GACF,OAAOF,EACJC,IAAIE,KACJC,QAAO,SAASC,GACf,OAAyB,IAAlBA,EAAE/B,MAAMgC,OAA2B,IAAZD,EAAE/B,KAClC,IACCiC,MAAM,EAAGL,EACd,EACAM,MACE,OAAOR,EAAMQ,KACf,EAEJ,EACAC,UACE,MAAM,QAAE5C,GAAYJ,KAgBdiD,EAAa,aAAc,aAEjCjD,KAAKqB,QAAUrB,KAAKkD,OACpBlD,KAAKqB,QAAQ8B,SAASP,IACpBA,EAAEQ,UAAYR,EAAES,UAChBT,EAAEU,SAAWV,EAAEW,SACfX,EAAEY,QAAUZ,EAAEY,SAAW,UACzBZ,EAAEa,SAAWb,EAAEa,UAAY,UAC3Bb,EAAEc,MAAQd,EAAEe,aACZf,EAAEgB,KAAO,IAAIC,KAAKjB,EAAEkB,aACpBlB,EAAEmB,KAAO,WAAYnB,EAAEgB,MACvBhB,EAAEoB,QAAUf,EAAWL,EAAEgB,KAAI,IAG/B,MAAMK,GAAM,OAAYjE,KAAKqB,SAE7BrB,KAAKiB,WAAagD,EAAIC,OACtBlE,KAAKgB,YAAchB,KAAKiB,WACxBgD,EAAIE,UAAS,KAEXnE,KAAKqB,QAAU+C,EAAc5B,IAAIO,EAAIlC,SAErCb,KAAKgB,YAAciD,EAAII,cAAcC,UAEvC,MAAMvB,EAAMkB,EAAIM,WAEhBvE,KAAKiB,WAAagD,EAAIC,OACtBlE,KAAKgB,YAAchB,KAAKiB,WACxBgD,EAAIE,UAAS,KAEXnE,KAAKqB,QAAU+C,EAAc5B,IAAIO,EAAIlC,SAErCb,KAAKgB,YAAciD,EAAII,cAAcC,UAGvC,MAAME,EAAmB,IAAIhD,EAAGiD,UAAU,qBAAuBrE,GAC3DsE,EAAa,IAAIlD,EAAGmD,SAAS,eAAiBvE,GAC9CwE,EAAe,IAAIpD,EAAGqD,SAAS,iBAAmBzE,GAClD0E,EAAgB,IAAItD,EAAGqD,SAAS,kBAAoBzE,GACpD2E,EAAY,IAAIvD,EAAGqD,SAAS,cAAgBzE,GAC5C4E,EAAgBhF,KAAKiF,uBAAuB,mBAC5CC,EAAiBlF,KAAKiF,uBAAuB,oBACnDD,EAAcG,UAAUlB,EAAIkB,WAAUvC,GAAKA,EAAEY,QAAQ4B,iBACrDF,EAAeC,UAAUlB,EAAIkB,WAAUvC,GAAKA,EAAEa,SAAS2B,iBAEvD,SAAU,qBAAuBhF,EAAU,YAAYiF,GAAG,SAAS,WACjEX,EAAWY,YACXd,EAAiBc,YACjB9D,EAAG+D,WACL,IACA,SAAU,iBAAmBnF,EAAU,YAAYiF,GAAG,SAAS,WAC7DT,EAAaU,YACb9D,EAAG+D,WACL,IACA,SAAU,kBAAoBnF,EAAU,YAAYiF,GAAG,SAAS,WAC9DP,EAAcQ,YACd9D,EAAG+D,WACL,IACA,SAAU,cAAgBnF,EAAU,YAAYiF,GAAG,SAAS,WAC1DN,EAAUO,YACV9D,EAAG+D,WACL,IAEA,MAAMnB,EAAgBH,EAAIkB,WAAUvC,GAAKA,EAAEmB,OACrCyB,EAAmBvB,EAAIkB,WAAUvC,GAAKA,EAAEY,UACxCiC,EAAoBxB,EAAIkB,WAAUvC,GAAKA,EAAEa,WACzCiC,EAAmBzB,EAAIkB,WAAWvC,IACtC,MAAM+C,EAAM/C,EAAEgB,KAAKgC,SACbjF,EAAOX,KAAK6F,QAClB,MAAO,GAAGlF,EAAKgF,IAAI,IAGfG,EAAY1B,EAAc7B,QAAQwD,cAElCC,EAAeR,EAAiBjD,QAAQwD,cACxCE,EAAgBR,EAAkBlD,QAAQwD,cAC1CG,EAAeR,EAAiBnD,QAAQwD,cAExCI,EAAU/B,EAAcgC,OAAO,GAAG,GAAGxC,KACrCyC,EAAUjC,EAAc5B,IAAI,GAAG,GAAGoB,KAClC0C,EAAWR,EAAUtD,IAAI,GAAG,GAAG3B,MAAQ,EAC7C,IAAI0F,EAAQ,SACF,qBAAuBnG,GAC9BoG,OACAC,wBAAwBF,MACvBG,EAAS,IACblC,EACGmC,YAAW,GACXJ,MAAMA,GACNG,OAAOA,GACPE,mBAAmB,KACnBC,QAAQ,CAAErE,IAAK,GAAIsE,MAAO,GAAIV,OAAQ,GAAIW,KAAM,KAChDxE,OAAM,IAAAyE,uBAAsBlB,IAC5BX,UAAUf,GACV6C,MAAM,kBACNC,EAAE,cAEAC,OAAO,CACN,kBAAmBhB,EAAS,GAC5B,kBAAmBE,EAAS,MAE/Be,EAAE,gBAAiBD,OAAO,CAAC,EAAGb,KAC9Be,cAAc,CAACrH,KAAKsH,aAAa,KACjCC,eAAc3E,GAAKA,EAAE/B,QACrB2G,OAAM5E,GAAKK,EAAWL,EAAE6E,KAAO,KAAO7E,EAAE/B,MAAQ,sBAChD6G,OAAO,YACPC,SAAQ,GACRC,UAAS,GACTC,UAAS,GACTC,UAAS,GACTC,eAAc,GACdrD,WAAWA,GACXsD,2BAA0B,GAE1BC,iBAAiB,CAChBC,OAAQ,EACRC,YAAa,GACbC,cAAe,IAEhBC,WAAW,eACXC,YAAY,KAEZC,QACAC,MAAM,GACThE,EAAiBiE,QAAQD,MAAM,GAE/B9D,EACG6B,MAAMA,GACNG,OAAO,IACPG,QAAQ,CAAErE,IAAK,EAAGsE,MAAO,GAAIV,OAAQ,GAAIW,KAAM,KAC/C5B,UAAUf,GACV7B,MAAMuD,GACN4C,WAAU,GACVb,UAAS,GACTc,IAAI,GACJzB,EAAE,cAEAC,OAAO,CACN,kBAAmBhB,EAAS,GAC5B,kBAAmBE,EAAS,MAE/BuC,MAAM,iBACNrB,eAAc3E,GAAKA,EAAE/B,QACrBgI,mBAAkB,GAClBnB,OAAO,YACPL,cAAc,CAACrH,KAAKsH,aAAa,KACjCiB,QACAC,MAAM,GAETjC,EAAQ,SACE,iBAAmBnG,GAC1BoG,OACAC,wBAAwBF,MAC3BG,EAAS,IACT9B,EACG2B,MAAMA,GACNG,OAAOA,GACPG,QAAQ,CAAErE,IAAK,GAAIuE,KAAM,GAAID,MAAO,GAAIV,OAAQ,KAChD7D,MAAMyD,GACNb,UAAUK,GACV6B,cAAc,CAACrH,KAAKsH,aAAa,KACjCC,eAAc3E,GAAKA,EAAE/B,QACrBiI,OAAMlG,GAAKA,EAAE6E,MACbtF,MAAKI,GAASA,EAAMC,IAAI,MAExBgF,OAAM5E,GAAKA,EAAE6E,IAAM,KAAO7E,EAAE/B,MAAQ,sBACpC+G,UAAS,GACTa,QACAD,MAAM,GAETjC,EAAQ,SACE,cAAgBnG,GACvBoG,OACAC,wBAAwBF,MAC3BG,EAAS,IACT3B,EACGwB,MAAMA,GACNG,OAAOA,GACPG,QAAQ,CAAErE,IAAK,GAAIuE,KAAM,GAAID,MAAO,GAAIV,OAAQ,KAChD7D,MAAM2D,GACNf,UAAUO,GACV6B,eAAc3E,GAAKA,EAAE/B,QACrBwG,cAAcrH,KAAKsH,cACnBwB,OAAMlG,GAAKA,EAAE6E,MACbD,OAAM5E,GAAKA,EAAE/B,MAAQ,iBACrB+G,UAAS,GACTa,QACAD,MAAM,GACTzD,EAAUgE,UAASnG,GAAK5C,KAAK6F,QAAQmD,QAAQpG,EAAE6E,OAE/ClB,EAAQ,SACE,kBAAoBnG,GAC3BoG,OACAC,wBAAwBF,MAC3BG,EAAS,IACT5B,EACGyB,MAAMA,GACNG,OAAOA,GACPG,QAAQ,CAAErE,IAAK,GAAIuE,KAAM,GAAID,MAAO,GAAIV,OAAQ,KAChD7D,MAAM0D,GACNd,UAAUM,GACV4B,cAAc,CAACrH,KAAKsH,aAAa,KACjCC,eAAc3E,GAAKA,EAAE/B,QACrB2G,OAAM5E,GAAKA,EAAE6E,IAAM,KAAO7E,EAAE/B,MAAQ,iBACpCiI,OAAMlG,GAAKA,EAAE6E,MACbtF,MAAKI,GAASA,EAAMC,IAAI,MAExBoF,UAAS,GACTa,QACAD,MAAM,GACThH,EAAGyH,WACL,IC1UkK,I,UCOlKC,GAAY,OACd,EACApJ,EACAyB,GACA,EACA,KACA,KACA,MAIF,EAAe2H,EAAiB,O,qEClBhC,IAAIpJ,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,OAAO,CAAEF,EAAIiB,cAAgBjB,EAAIkB,WAAY,CAAChB,EAAG,OAAO,CAACE,MAAM,CAAC,IAAM,MAAM,KAAOJ,EAAIoJ,WAAW,iBAAiBC,YAAYrJ,EAAIsJ,GAAG,CAAC,CAAC5B,IAAI,aAAa6B,GAAG,WAAW,MAAO,CAACrJ,EAAG,OAAO,CAACI,YAAY,mBAAmBC,SAAS,CAAC,YAAcP,EAAIQ,GAAGR,EAAIkB,eAAe,EAAEsI,OAAM,GAAOxJ,EAAY,SAAE,CAAC0H,IAAI,WAAW6B,GAAG,WAAW,MAAO,CAACvJ,EAAIyJ,GAAG,IAAIzJ,EAAIQ,GAAGR,EAAI0J,UAAU,KAAK,EAAEF,OAAM,GAAM,MAAM,MAAK,KAAQtJ,EAAG,OAAO,CAACS,WAAW,CAAC,CAACC,KAAK,IAAIC,QAAQ,MAAMC,MAAM,cAAgBC,WAAW,qBAAqB,CAACb,EAAG,OAAO,CAACE,MAAM,CAAC,IAAM,MAAM,KAAOJ,EAAIoJ,WAAW,kBAAkBC,YAAYrJ,EAAIsJ,GAAG,CAACtJ,EAAI2J,GAAG,CAAG1I,YAAajB,EAAIiB,YAAaC,WAAYlB,EAAIkB,aAAc,SAAS0I,EAAEC,GAAG,MAAO,CAACnC,IAAImC,EAAEN,GAAG,WAAW,MAAO,CAACrJ,EAAG,OAAO,CAACwH,IAAImC,EAAEvJ,YAAY,mBAAmBC,SAAS,CAAC,YAAcP,EAAIQ,GAAGoJ,MAAM,EAAEJ,OAAM,EAAK,IAAIxJ,EAAY,SAAE,CAAC0H,IAAI,WAAW6B,GAAG,WAAW,MAAO,CAACvJ,EAAIyJ,GAAG,IAAIzJ,EAAIQ,GAAGR,EAAI0J,UAAU,KAAK,EAAEF,OAAM,GAAM,MAAM,MAAK,KAAQtJ,EAAG,OAAO,CAACF,EAAIyJ,GAAG,OAAOvJ,EAAG,IAAI,CAACS,WAAW,CAAC,CAACC,KAAK,IAAIC,QAAQ,MAAMC,MAAM,YAAcC,WAAW,gBAAgBuE,GAAG,CAAC,MAAQtF,EAAI8J,gBAAgB,EACtoC,EACItI,EAAkB,G,sBC8BtB,GACEM,OAAQ,CAAC,KACTE,MAAO,CACLf,YAAa,CACXgB,KAAM8H,OACNC,UAAU,GAEZ9I,WAAY,CACVe,KAAM8H,OACNC,UAAU,GAEZN,SAAU,CACRzH,KAAMgI,OACN9H,QAAS,OAGbG,QAAS,CACPwH,WACErI,EAAG8D,YACH9D,EAAGyH,WACL,ICpDwJ,I,UCOxJC,GAAY,OACd,EACApJ,EACAyB,GACA,EACA,KACA,KACA,MAIF,EAAe2H,EAAiB,O,qEClBhC,IAAIpJ,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,IAAI,CAACI,YAAY,WAAW,CAACJ,EAAG,OAAO,CAACF,EAAIyJ,GAAG,IAAIzJ,EAAIQ,GAAGR,EAAIkK,GAAG,mBAAmB,KAAKhK,EAAG,OAAO,CAACI,YAAY,aAAaJ,EAAG,IAAI,CAACS,WAAW,CAAC,CAACC,KAAK,IAAIC,QAAQ,MAAMC,MAAM,QAAUC,WAAW,YAAYT,YAAY,QAAQI,YAAY,CAAC,QAAU,WACjU,EACIc,EAAkB,GCStB,GAEC,ECbqJ,I,UCOlJ2H,GAAY,OACd,EACApJ,EACAyB,GACA,EACA,KACA,KACA,MAIF,EAAe2H,EAAiB,O,qEClBhC,IAAIpJ,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,IAAI,CAACI,YAAY,8CAA8C,CAACJ,EAAG,OAAO,CAACK,SAAS,CAAC,UAAYP,EAAIQ,GAAGR,EAAIkK,GAAG,yBAAyBlK,EAAImK,GAAG,YAAY,EACjO,EACI3I,EAAkB,G,UCDlB4I,EAAS,CAAC,EAKVjB,GAAY,OACdiB,EACArK,EACAyB,GACA,EACA,KACA,KACA,MAIF,EAAe2H,EAAiB,O,sPCRzB,SAASkB,EAAUC,EAAeC,GACvC,MAAMC,EAAgBF,EACnBG,MACAC,OAAO,QACPC,KAAK,QAAS,gBACdA,KAAK,cAAe,UACpBA,KAAK,IAAKL,EAAc9D,QAAU,GAClCmE,KAAK,IAAKL,EAAc3D,SAAW,IACnCtE,KAAKkI,GACFK,EAAWJ,EAAc/D,OAAOoE,UAChCC,EAAeR,EAAcxD,UAGnC0D,EACGG,KACC,IACAG,EAAa9D,MACVsD,EAAc9D,QAAUsE,EAAa9D,KAAO8D,EAAa/D,OAAS,GAEtE4D,KAAK,IAAKL,EAAc3D,SAAWoE,KAAKC,KAAKJ,EAASjE,QAAU,EACrE,CACO,SAASsE,EAAUX,EAAeC,GACvC,MAAMC,EAAgBF,EACnBG,MACAC,OAAO,QACPC,KAAK,QAAS,gBACdA,KAAK,cAAe,UACpBA,KAAK,YAAa,eAClBA,KAAK,KAAML,EAAc3D,SAAW,GACpCgE,KAAK,IAAK,IACVtI,KAAKkI,GACFK,EAAWJ,EAAc/D,OAAOoE,UAChCC,EAAeR,EAAcxD,UAGnC0D,EACGG,KACC,KACCG,EAAarI,KACX6H,EAAc3D,SAAWmE,EAAarI,IAAMqI,EAAazE,QAAU,GAEvEsE,KACC,IACAI,KAAKG,IACHH,KAAKC,KAAKJ,EAASjE,QACnBmE,EAAa9D,KAAO+D,KAAKC,KAAKJ,EAASjE,QAAU,GAGzD,CAQO,SAASM,EAAsBzE,GACpC,MAAO,CACLQ,MACE,MAAMmI,EAAW,CAAC,EAClB,OAAO3I,EAAMQ,MAAMoI,KAAI,SAASvI,GAM9B,OALIsI,EAAStI,EAAE6E,IAAI,IACjByD,EAAStI,EAAE6E,IAAI,KAAO7E,EAAE/B,MAExBqK,EAAStI,EAAE6E,IAAI,IAAM7E,EAAE/B,MAElB,CAAE4G,IAAK7E,EAAE6E,IAAK5G,MAAOqK,EAAStI,EAAE6E,IAAI,IAC7C,GACF,EAEJ,CAQO,SAASnF,EAAgBC,GAC9B,MAAO,CACLC,IAAIC,GACF,OAAOF,EACJC,IAAIE,KACJC,QAAO,SAASC,GACf,OAAyB,IAAlBA,EAAE/B,MAAMgC,OAA2B,IAAZD,EAAE/B,KAClC,IACCiC,MAAM,EAAGL,EACd,EAEJ,CAEO,SAAS2I,EAAiBC,GAC/BA,EAAMC,UAAU,4BAA4BC,MAAK,SAASC,GACxDA,EAAEC,MAAK,SAAS7I,GACd,MAAM8I,EAAO,SAAU1L,MACvB,IAAIoC,EAAOsJ,EAAKtJ,OACZA,EAAKkC,OAAS,KAAMlC,EAAOA,EAAKuJ,UAAU,EAAG,IAAM,OACnDvJ,EAAKkC,OAAS,IAChBlC,EACEA,EACA,KACA,0BACIQ,EAAEgJ,SAAWhJ,EAAEiJ,aAAe,EAAIf,KAAKgB,IAAO,KAElD,MAEJJ,EAAKtJ,KAAKA,EACZ,GACF,GACF,C","sources":["webpack://DataExperience/./src/components/chart/view/ChartViewOverviewLinkedinConnection.vue?a95e","webpack://DataExperience/src/components/chart/view/ChartViewOverviewLinkedinConnection.vue","webpack://DataExperience/./src/components/chart/view/ChartViewOverviewLinkedinConnection.vue?f4e1","webpack://DataExperience/./src/components/chart/view/ChartViewOverviewLinkedinConnection.vue","webpack://DataExperience/./src/components/chart/view/dc/ChartViewDcFilterCount.vue?857a","webpack://DataExperience/src/components/chart/view/dc/ChartViewDcFilterCount.vue","webpack://DataExperience/./src/components/chart/view/dc/ChartViewDcFilterCount.vue?d2e0","webpack://DataExperience/./src/components/chart/view/dc/ChartViewDcFilterCount.vue","webpack://DataExperience/./src/components/chart/view/filters/ChartViewFilters.vue?cff0","webpack://DataExperience/src/components/chart/view/filters/ChartViewFilters.vue","webpack://DataExperience/./src/components/chart/view/filters/ChartViewFilters.vue?e912","webpack://DataExperience/./src/components/chart/view/filters/ChartViewFilters.vue","webpack://DataExperience/./src/components/chart/view/text/ChartViewTextSelectTimeRange.vue?13ad","webpack://DataExperience/./src/components/chart/view/text/ChartViewTextSelectTimeRange.vue","webpack://DataExperience/./src/components/chart/view/utils/dc-helpers.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('VContainer',[_c('VRow',{attrs:{\"dense\":\"\"}},[_c('VCol',{attrs:{\"cols\":\"12\"}},[_c('div',{attrs:{\"id\":'connections-chart' + _vm.graphId}},[_c('span',{staticClass:\"font-weight-bold\",domProps:{\"textContent\":_vm._s(_vm.messages['Cumulative number of connections'])}}),_c('ChartViewFilters')],1),_c('div',{staticClass:\"range-chart\",attrs:{\"id\":'range-chart' + _vm.graphId}},[_c('ChartViewTextSelectTimeRange')],1)])],1),_c('VRow',[_c('VCol',{attrs:{\"cols\":\"4\"}},[_c('div',{attrs:{\"id\":'company-chart' + _vm.graphId}},[_c('div',{staticStyle:{\"display\":\"flex\"}},[_c('span',{staticClass:\"font-weight-bold\",domProps:{\"textContent\":_vm._s(_vm.messages['Company'])}}),_c('VSpacer'),_c('div',{attrs:{\"id\":\"company-search\"}})],1),_c('ChartViewFilters')],1)]),_c('VCol',{attrs:{\"cols\":\"4\"}},[_c('div',{attrs:{\"id\":'week-chart' + _vm.graphId}},[_c('span',{directives:[{name:\"t\",rawName:\"v-t\",value:(_vm.messages['Day']),expression:\"messages['Day']\"}],staticClass:\"font-weight-bold\"}),_c('ChartViewFilters')],1)]),_c('VCol',{attrs:{\"cols\":\"4\"}},[_c('div',{attrs:{\"id\":'position-chart' + _vm.graphId}},[_c('div',{staticStyle:{\"display\":\"flex\"}},[_c('span',{directives:[{name:\"t\",rawName:\"v-t\",value:(_vm.messages['Position']),expression:\"messages['Position']\"}],staticClass:\"font-weight-bold\"}),_c('VSpacer'),_c('div',{attrs:{\"id\":\"position-search\"}})],1),_c('ChartViewFilters')],1)])],1),_c('ChartViewDcFilterCount',_vm._b({},'ChartViewDcFilterCount',{ filterCount: _vm.filterCount, totalCount: _vm.totalCount },false)),_c('UnitFilterableTable',_vm._b({},'UnitFilterableTable',{ headers: _vm.header, items: _vm.results, viewBlockTranslationPrefix: _vm.viewBlockTranslationPrefix },false))],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <VContainer>\r\n    <VRow dense>\r\n      <VCol cols=\"12\">\r\n        <div :id=\"'connections-chart' + graphId\">\r\n          <span class=\"font-weight-bold\" v-text=\"messages['Cumulative number of connections']\" />\r\n          <ChartViewFilters />\r\n        </div>\r\n        <div :id=\"'range-chart' + graphId\" class=\"range-chart\">\r\n          <ChartViewTextSelectTimeRange />\r\n        </div>\r\n      </VCol>\r\n    </VRow>\r\n    <VRow>\r\n      <VCol cols=\"4\">\r\n        <div :id=\"'company-chart' + graphId\">\r\n          <div style=\"display: flex\">\r\n            <span class=\"font-weight-bold\" v-text=\"messages['Company']\" />\r\n            <VSpacer />\r\n            <div id=\"company-search\" />\r\n          </div>\r\n          <ChartViewFilters />\r\n        </div>\r\n      </VCol>\r\n      <VCol cols=\"4\">\r\n        <div :id=\"'week-chart' + graphId\">\r\n          <span v-t=\"messages['Day']\" class=\"font-weight-bold\" />\r\n          <ChartViewFilters />\r\n        </div>\r\n      </VCol>\r\n      <VCol cols=\"4\">\r\n        <div :id=\"'position-chart' + graphId\">\r\n          <div style=\"display: flex\">\r\n            <span v-t=\"messages['Position']\" class=\"font-weight-bold\" />\r\n            <VSpacer />\r\n            <div id=\"position-search\" />\r\n          </div>\r\n          <ChartViewFilters />\r\n        </div>\r\n      </VCol>\r\n    </VRow>\r\n    <ChartViewDcFilterCount\r\n      v-bind=\"{ filterCount, totalCount }\"\r\n    />\r\n    <UnitFilterableTable v-bind=\"{ headers: header, items: results, viewBlockTranslationPrefix }\" />\r\n  </VContainer>\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from 'd3'\r\nimport * as dc from 'dc'\r\nimport crossfilter from 'crossfilter2'\r\nimport mixin from './mixin'\r\nimport { createCumulativeGroup } from './utils/dc-helpers'\r\nimport ChartViewTextSelectTimeRange from './text/ChartViewTextSelectTimeRange.vue'\r\nimport ChartViewFilters from './filters/ChartViewFilters.vue'\r\nimport ChartViewDcFilterCount from './dc/ChartViewDcFilterCount.vue'\r\nimport UnitFilterableTable from '@/components/unit/filterable-table/UnitFilterableTable.vue'\r\n\r\n// Remove warning on default colorscheme, even if not used..\r\ndc.config.defaultColors(d3.schemePaired)\r\n\r\nexport default {\r\n  components: { ChartViewTextSelectTimeRange, ChartViewFilters, ChartViewDcFilterCount, UnitFilterableTable },\r\n  mixins: [mixin],\r\n  props: {\r\n    messages: {\r\n      type: Object,\r\n      default: () => {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      header: [\r\n        { text: 'First Name', value: 'firstname' },\r\n        { text: 'Last Name', value: 'lastname' },\r\n        { text: 'Email Address', value: 'email' },\r\n        { text: 'Company', value: 'company' },\r\n        { text: 'Position', value: 'position' },\r\n        { text: 'Connected On', value: 'dateStr' }\r\n      ],\r\n      results: []\r\n    }\r\n  },\r\n  methods: {\r\n    removeEmptyBins(group) {\r\n      return {\r\n        top(n) {\r\n          return group\r\n            .top(Infinity)\r\n            .filter(function(d) {\r\n              return d.value.count !== 0 && d.value !== 0\r\n            })\r\n            .slice(0, n)\r\n        },\r\n        all() {\r\n          return group.all()\r\n        }\r\n      }\r\n    },\r\n    drawViz() {\r\n      const { graphId } = this\r\n      /*\r\n      const colorPalette = [\r\n        '#7570b3',\r\n        // '#371D52',\r\n        // '#35334A',\r\n        '#6652A1',\r\n        '#859ED5',\r\n        '#CC94F2',\r\n        '#9A5BD9',\r\n        '#6F36BF',\r\n        '#3F1973',\r\n        '#58539E'\r\n      ]\r\n      */\r\n      // Format data to correct types 06 Oct 2021\r\n      const formatDate = d3.timeFormat('%B %d, %Y')\r\n      // Keeps only movies and tv shows (not trailer etc..)\r\n      this.results = this.values\r\n      this.results.forEach((d) => {\r\n        d.firstname = d.firstName\r\n        d.lastname = d.lastName\r\n        d.company = d.company || 'Unknown'\r\n        d.position = d.position || 'Unknown'\r\n        d.email = d.emailAddress\r\n        d.date = new Date(d.connectedOn)\r\n        d.week = d3.timeWeek(d.date) // pre-calculate months for better performance\r\n        d.dateStr = formatDate(d.date)\r\n      })\r\n      // Create crossfilter indexing\r\n      const ndx = crossfilter(this.results)\r\n      // get total number of records\r\n      this.totalCount = ndx.size()\r\n      this.filterCount = this.totalCount\r\n      ndx.onChange(() => {\r\n        // update table\r\n        this.results = weekDimension.top(all.value())\r\n        // update filter count\r\n        this.filterCount = ndx.allFiltered().length\r\n      })\r\n      const all = ndx.groupAll()\r\n      // get total number of records\r\n      this.totalCount = ndx.size()\r\n      this.filterCount = this.totalCount\r\n      ndx.onChange(() => {\r\n        // update table\r\n        this.results = weekDimension.top(all.value())\r\n        // update filter count\r\n        this.filterCount = ndx.allFiltered().length\r\n      })\r\n      // Create and bind charts to their respective divs\r\n      const connectionsChart = new dc.LineChart('#connections-chart' + graphId)\r\n      const rangeChart = new dc.BarChart('#range-chart' + graphId)\r\n      const companyChart = new dc.RowChart('#company-chart' + graphId)\r\n      const positionChart = new dc.RowChart('#position-chart' + graphId)\r\n      const weekChart = new dc.RowChart('#week-chart' + graphId)\r\n      const companySearch = this.createTextFilterWidget('#company-search')\r\n      const positionSearch = this.createTextFilterWidget('#position-search')\r\n      companySearch.dimension(ndx.dimension(d => d.company.toLowerCase()))\r\n      positionSearch.dimension(ndx.dimension(d => d.position.toLowerCase()))\r\n      // Bind reset filters links\r\n      d3.select('#connections-chart' + graphId + ' a.reset').on('click', function() {\r\n        rangeChart.filterAll()\r\n        connectionsChart.filterAll()\r\n        dc.redrawAll()\r\n      })\r\n      d3.select('#company-chart' + graphId + ' a.reset').on('click', function() {\r\n        companyChart.filterAll()\r\n        dc.redrawAll()\r\n      })\r\n      d3.select('#position-chart' + graphId + ' a.reset').on('click', function() {\r\n        positionChart.filterAll()\r\n        dc.redrawAll()\r\n      })\r\n      d3.select('#week-chart' + graphId + ' a.reset').on('click', function() {\r\n        weekChart.filterAll()\r\n        dc.redrawAll()\r\n      })\r\n      // Create dimensions\r\n      const weekDimension = ndx.dimension(d => d.week)\r\n      const companyDimension = ndx.dimension(d => d.company)\r\n      const positionDimension = ndx.dimension(d => d.position)\r\n      const weekDayDimension = ndx.dimension((d) => {\r\n        const day = d.date.getDay()\r\n        const name = this.$days()\r\n        return `${name[day]}`\r\n      })\r\n      // Create groups from dimension\r\n      const weekGroup = weekDimension.group().reduceCount()\r\n      // const typeGroup = typeDimension.group().reduceSum(d => d.duration)\r\n      const companyGroup = companyDimension.group().reduceCount()\r\n      const positionGroup = positionDimension.group().reduceCount()\r\n      const weekDayGroup = weekDayDimension.group().reduceCount()\r\n      // Render watch time line chart\r\n      const minDate = weekDimension.bottom(1)[0].date\r\n      const maxDate = weekDimension.top(1)[0].date\r\n      const maxValue = weekGroup.top(1)[0].value + 2\r\n      let width = d3\r\n        .select('#connections-chart' + graphId)\r\n        .node()\r\n        .getBoundingClientRect().width\r\n      let height = 150\r\n      connectionsChart\r\n        .renderArea(true)\r\n        .width(width)\r\n        .height(height)\r\n        .transitionDuration(1000)\r\n        .margins({ top: 25, right: 25, bottom: 25, left: 40 })\r\n        .group(createCumulativeGroup(weekGroup))\r\n        .dimension(weekDimension)\r\n        .curve(d3.curveMonotoneX)\r\n        .x(d3\r\n          .scaleTime()\r\n          .domain([\r\n            d3.timeHour.offset(minDate, 0),\r\n            d3.timeHour.offset(maxDate, 2)\r\n          ]))\r\n        .y(d3.scaleLinear().domain([0, maxValue]))\r\n        .ordinalColors([this.colorPalette[0]])\r\n        .valueAccessor(d => d.value)\r\n        .title(d => formatDate(d.key) + ': ' + d.value + ' connections made')\r\n        .xUnits(d3.timeHour)\r\n        .brushOn(false)\r\n        .elasticX(false)\r\n        .elasticY(true)\r\n        .xyTipsOn(true)\r\n        .mouseZoomable(false)\r\n        .rangeChart(rangeChart)\r\n        .renderHorizontalGridLines(false)\r\n      // .dashStyle([3,1,1,1])\r\n        .renderDataPoints({\r\n          radius: 3,\r\n          fillOpacity: 0.8,\r\n          strokeOpacity: 0\r\n        })\r\n        .yAxisLabel('Connections')\r\n        .clipPadding(110)\r\n      // .xAxisLabel(\"Date\")\r\n        .yAxis()\r\n        .ticks(5)\r\n      connectionsChart.xAxis().ticks(5)\r\n      // range chart date picker\r\n      rangeChart\r\n        .width(width)\r\n        .height(30)\r\n        .margins({ top: 0, right: 25, bottom: 20, left: 25 })\r\n        .dimension(weekDimension)\r\n        .group(weekGroup)\r\n        .centerBar(true)\r\n        .elasticY(true)\r\n        .gap(1)\r\n        .x(d3\r\n          .scaleTime()\r\n          .domain([\r\n            d3.timeHour.offset(minDate, 0),\r\n            d3.timeHour.offset(maxDate, 2)\r\n          ]))\r\n        .round(d3.timeDay.round)\r\n        .valueAccessor(d => d.value)\r\n        .alwaysUseRounding(true)\r\n        .xUnits(d3.timeDays)\r\n        .ordinalColors([this.colorPalette[0]])\r\n        .yAxis()\r\n        .ticks(0)\r\n      // Render company row chart\r\n      width = d3\r\n        .select('#company-chart' + graphId)\r\n        .node()\r\n        .getBoundingClientRect().width\r\n      height = 400\r\n      companyChart\r\n        .width(width)\r\n        .height(height)\r\n        .margins({ top: 25, left: 25, right: 25, bottom: 25 })\r\n        .group(companyGroup)\r\n        .dimension(companyDimension)\r\n        .ordinalColors([this.colorPalette[1]])\r\n        .valueAccessor(d => d.value)\r\n        .label(d => d.key)\r\n        .data(group => group.top(20))\r\n        // .labelOffsetX(0)\r\n        .title(d => d.key + ': ' + d.value + ' connections made')\r\n        .elasticX(true)\r\n        .xAxis()\r\n        .ticks(4)\r\n      // Render day of week row chart\r\n      width = d3\r\n        .select('#week-chart' + graphId)\r\n        .node()\r\n        .getBoundingClientRect().width\r\n      height = 400\r\n      weekChart\r\n        .width(width)\r\n        .height(height)\r\n        .margins({ top: 25, left: 25, right: 25, bottom: 25 })\r\n        .group(weekDayGroup)\r\n        .dimension(weekDayDimension)\r\n        .valueAccessor(d => d.value)\r\n        .ordinalColors(this.colorPalette)\r\n        .label(d => d.key)\r\n        .title(d => d.value + ' connections')\r\n        .elasticX(true)\r\n        .xAxis()\r\n        .ticks(4)\r\n      weekChart.ordering(d => this.$days().indexOf(d.key))\r\n      // Render content row chart\r\n      width = d3\r\n        .select('#position-chart' + graphId)\r\n        .node()\r\n        .getBoundingClientRect().width\r\n      height = 400\r\n      positionChart\r\n        .width(width)\r\n        .height(height)\r\n        .margins({ top: 25, left: 25, right: 25, bottom: 25 })\r\n        .group(positionGroup)\r\n        .dimension(positionDimension)\r\n        .ordinalColors([this.colorPalette[2]])\r\n        .valueAccessor(d => d.value)\r\n        .title(d => d.key + ': ' + d.value + ' connections')\r\n        .label(d => d.key)\r\n        .data(group => group.top(20))\r\n      // .labelOffsetX(0)\r\n        .elasticX(true)\r\n        .xAxis()\r\n        .ticks(4)\r\n      dc.renderAll()\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewOverviewLinkedinConnection.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewOverviewLinkedinConnection.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewOverviewLinkedinConnection.vue?vue&type=template&id=225efd22&\"\nimport script from \"./ChartViewOverviewLinkedinConnection.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewOverviewLinkedinConnection.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('VRow',[(_vm.filterCount === _vm.totalCount)?[_c('i18n',{attrs:{\"tag\":\"div\",\"path\":_vm.kViewBlock('selected-all')},scopedSlots:_vm._u([{key:\"totalCount\",fn:function(){return [_c('span',{staticClass:\"font-weight-bold\",domProps:{\"textContent\":_vm._s(_vm.totalCount)}})]},proxy:true},(_vm.rowLabel)?{key:\"rowLabel\",fn:function(){return [_vm._v(\" \"+_vm._s(_vm.rowLabel)+\" \")]},proxy:true}:null],null,true)}),_c('span',{directives:[{name:\"t\",rawName:\"v-t\",value:('click-graph'),expression:\"'click-graph'\"}]})]:[_c('i18n',{attrs:{\"tag\":\"div\",\"path\":_vm.kViewBlock('selected-some')},scopedSlots:_vm._u([_vm._l(({ filterCount: _vm.filterCount, totalCount: _vm.totalCount }),function(v,k){return {key:k,fn:function(){return [_c('span',{key:k,staticClass:\"font-weight-bold\",domProps:{\"textContent\":_vm._s(v)}})]},proxy:true}}),(_vm.rowLabel)?{key:\"rowLabel\",fn:function(){return [_vm._v(\" \"+_vm._s(_vm.rowLabel)+\" \")]},proxy:true}:null],null,true)}),_c('span',[_vm._v(\" | \"),_c('a',{directives:[{name:\"t\",rawName:\"v-t\",value:('Reset All'),expression:\"'Reset All'\"}],on:{\"click\":_vm.resetAll}})])]],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <VRow>\r\n    <template v-if=\"filterCount === totalCount\">\r\n      <i18n tag=\"div\" :path=\"kViewBlock('selected-all')\">\r\n        <template #totalCount>\r\n          <span class=\"font-weight-bold\" v-text=\"totalCount\" />\r\n        </template>\r\n        <template v-if=\"rowLabel\" #rowLabel>\r\n          {{ rowLabel }}\r\n        </template>\r\n      </i18n>\r\n      <span v-t=\"'click-graph'\" />\r\n    </template>\r\n    <template v-else>\r\n      <i18n tag=\"div\" :path=\"kViewBlock('selected-some')\">\r\n        <template v-for=\"(v, k) in { filterCount, totalCount }\" #[k]>\r\n          <span :key=\"k\" class=\"font-weight-bold\" v-text=\"v\" />\r\n        </template>\r\n        <template v-if=\"rowLabel\" #rowLabel>\r\n          {{ rowLabel }}\r\n        </template>\r\n      </i18n>\r\n      <span>&nbsp;| <a v-t=\"'Reset All'\" @click=\"resetAll\" /></span>\r\n    </template>\r\n  </VRow>\r\n</template>\r\n\r\n<script>\r\nimport * as dc from 'dc'\r\n\r\nimport kViewBlockMixin from '@/mixins/k-view-block'\r\n\r\nexport default {\r\n  mixins: [kViewBlockMixin],\r\n  props: {\r\n    filterCount: {\r\n      type: Number,\r\n      required: true\r\n    },\r\n    totalCount: {\r\n      type: Number,\r\n      required: true\r\n    },\r\n    rowLabel: {\r\n      type: String,\r\n      default: null\r\n    }\r\n  },\r\n  methods: {\r\n    resetAll() {\r\n      dc.filterAll()\r\n      dc.renderAll()\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewDcFilterCount.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewDcFilterCount.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewDcFilterCount.vue?vue&type=template&id=05251258&\"\nimport script from \"./ChartViewDcFilterCount.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewDcFilterCount.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('p',{staticClass:\"filters\"},[_c('span',[_vm._v(\" \"+_vm._s(_vm.$t('Current filter'))+\" \"),_c('span',{staticClass:\"filter\"})]),_c('a',{directives:[{name:\"t\",rawName:\"v-t\",value:('reset'),expression:\"'reset'\"}],staticClass:\"reset\",staticStyle:{\"display\":\"none\"}})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <p class=\"filters\">\r\n    <span>\r\n      {{ $t('Current filter') }}\r\n      <span class=\"filter\" />\r\n    </span>\r\n    <a v-t=\"'reset'\" class=\"reset\" style=\"display: none\" />\r\n  </p>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n\r\n}\r\n</script>\r\n","import mod from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewFilters.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewFilters.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewFilters.vue?vue&type=template&id=2f9280d1&\"\nimport script from \"./ChartViewFilters.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewFilters.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('p',{staticClass:\"muted pull-right text-subtitle-2 mr-4 mb-1\"},[_c('span',{domProps:{\"innerHTML\":_vm._s(_vm.$t('select-time-range'))}}),_vm._t(\"default\")],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./ChartViewTextSelectTimeRange.vue?vue&type=template&id=46f28fc2&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import * as d3 from 'd3'\r\nimport * as dc from 'dc'\r\n\r\n// Functions to add x-label & y-label to Row Charts (Unsupported by dc.js)\r\n// https://www.intothevoid.io/data-visualization/row-chart-axis-labels-dc-js/\r\n// Use with:\r\n// contentChart.on('postRender', function (chart) {\r\n//  addXLabel(chart, 'Hours watched')\r\n// })\r\nexport function addXLabel(chartToUpdate, displayText) {\r\n  const textSelection = chartToUpdate\r\n    .svg()\r\n    .append('text')\r\n    .attr('class', 'x-axis-label')\r\n    .attr('text-anchor', 'middle')\r\n    .attr('x', chartToUpdate.width() / 2)\r\n    .attr('y', chartToUpdate.height() - 10)\r\n    .text(displayText)\r\n  const textDims = textSelection.node().getBBox()\r\n  const chartMargins = chartToUpdate.margins()\r\n\r\n  // Dynamically adjust positioning after reading text dimension from DOM\r\n  textSelection\r\n    .attr(\r\n      'x',\r\n      chartMargins.left +\r\n        (chartToUpdate.width() - chartMargins.left - chartMargins.right) / 2\r\n    )\r\n    .attr('y', chartToUpdate.height() - Math.ceil(textDims.height) / 2)\r\n}\r\nexport function addYLabel(chartToUpdate, displayText) {\r\n  const textSelection = chartToUpdate\r\n    .svg()\r\n    .append('text')\r\n    .attr('class', 'y-axis-label')\r\n    .attr('text-anchor', 'middle')\r\n    .attr('transform', 'rotate(-90)')\r\n    .attr('x', -chartToUpdate.height() / 2)\r\n    .attr('y', 10)\r\n    .text(displayText)\r\n  const textDims = textSelection.node().getBBox()\r\n  const chartMargins = chartToUpdate.margins()\r\n\r\n  // Dynamically adjust positioning after reading text dimension from DOM\r\n  textSelection\r\n    .attr(\r\n      'x',\r\n      -chartMargins.top -\r\n        (chartToUpdate.height() - chartMargins.top - chartMargins.bottom) / 2\r\n    )\r\n    .attr(\r\n      'y',\r\n      Math.max(\r\n        Math.ceil(textDims.height),\r\n        chartMargins.left - Math.ceil(textDims.height) - 5\r\n      )\r\n    )\r\n}\r\n\r\n/**\r\n * Transform a simple group to a cumulative one in order\r\n * to make cumulative line chart\r\n * @param {Crossfilter group} group the group to transform\r\n * @returns the cumulative group\r\n */\r\nexport function createCumulativeGroup(group) {\r\n  return {\r\n    all() {\r\n      const cumulate = {}\r\n      return group.all().map(function(d) {\r\n        if (cumulate[d.key[0]]) {\r\n          cumulate[d.key[0]] += d.value\r\n        } else {\r\n          cumulate[d.key[0]] = d.value\r\n        }\r\n        return { key: d.key, value: cumulate[d.key[0]] }\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Remove datapoints that are null in a crossfilter group\r\n * Used to hide empty bins in a bar graph\r\n * @param {Crossfilter group} group the group to transform\r\n * @returns the cleaned group\r\n */\r\nexport function removeEmptyBins(group) {\r\n  return {\r\n    top(n) {\r\n      return group\r\n        .top(Infinity)\r\n        .filter(function(d) {\r\n          return d.value.count !== 0 && d.value !== 0\r\n        })\r\n        .slice(0, n)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addPiePercentage(chart) {\r\n  chart.selectAll('text.pie-slice.pie-label').call(function(t) {\r\n    t.each(function(d) {\r\n      const self = d3.select(this)\r\n      let text = self.text()\r\n      if (text.length > 14) { text = text.substring(0, 14) + '.. ' }\r\n      if (text.length > 0) {\r\n        text =\r\n          text +\r\n          ' (' +\r\n          dc.utils.printSingleValue(\r\n            ((d.endAngle - d.startAngle) / (2 * Math.PI)) * 100\r\n          ) +\r\n          '%)'\r\n      }\r\n      self.text(text)\r\n    })\r\n  })\r\n}\r\n"],"names":["render","_vm","this","_c","_self","attrs","graphId","staticClass","domProps","_s","messages","staticStyle","directives","name","rawName","value","expression","_b","filterCount","totalCount","headers","header","items","results","viewBlockTranslationPrefix","staticRenderFns","dc","config","defaultColors","components","ChartViewTextSelectTimeRange","mixins","mixin","props","type","Object","default","data","text","methods","removeEmptyBins","group","top","n","Infinity","filter","d","count","slice","all","drawViz","formatDate","values","forEach","firstname","firstName","lastname","lastName","company","position","email","emailAddress","date","Date","connectedOn","week","dateStr","ndx","size","onChange","weekDimension","allFiltered","length","groupAll","connectionsChart","LineChart","rangeChart","BarChart","companyChart","RowChart","positionChart","weekChart","companySearch","createTextFilterWidget","positionSearch","dimension","toLowerCase","on","filterAll","redrawAll","companyDimension","positionDimension","weekDayDimension","day","getDay","$days","weekGroup","reduceCount","companyGroup","positionGroup","weekDayGroup","minDate","bottom","maxDate","maxValue","width","node","getBoundingClientRect","height","renderArea","transitionDuration","margins","right","left","createCumulativeGroup","curve","x","domain","y","ordinalColors","colorPalette","valueAccessor","title","key","xUnits","brushOn","elasticX","elasticY","xyTipsOn","mouseZoomable","renderHorizontalGridLines","renderDataPoints","radius","fillOpacity","strokeOpacity","yAxisLabel","clipPadding","yAxis","ticks","xAxis","centerBar","gap","round","alwaysUseRounding","label","ordering","indexOf","renderAll","component","kViewBlock","scopedSlots","_u","fn","proxy","_v","rowLabel","_l","v","k","resetAll","Number","required","String","$t","_t","script","addXLabel","chartToUpdate","displayText","textSelection","svg","append","attr","textDims","getBBox","chartMargins","Math","ceil","addYLabel","max","cumulate","map","addPiePercentage","chart","selectAll","call","t","each","self","substring","endAngle","startAngle","PI"],"sourceRoot":""}