{"version":3,"file":"data-experience.common.4822.js","mappings":";;;;;;;;;;;;;;;AAAA,+BAA+B,6BAA6B,iDAAiD,oEAAoE,gDAAgD,aAAa,sBAAsB,QAAQ,kBAAkB;AAC9R;AACA;;;;;;;;;ACQwB;AACG;;AAE3B,8EAAe;AACf,WAAW,gBAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,mBAAS;AACtC,QAAQ,kBAAS;AACjB,mBAAmB,kBACF;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAM;AAC3B;AACA,sBAAsB,gBAAM;AAC5B;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,sBAAY;AAC9B;AACA;AACA;AACA;AACA,gBAAgB,uBAAa;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,gBAAM;AAC1B,kBAAkB,wBAAc;AAChC;AACA;AACA;AACA,gBAAgB,qBAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,sBACN;AACpB;AACA;AACA;;AAEA;AACA,sBAAsB,yBACC;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kBAAS;AACrB,YAAY,kBAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kBAAS;AACrB,YAAY,kBAAS;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;AChOkJ,CAAC,mFAAe,yCAAG,EAAC;;ACAvK;;;;;;;AEA4G;AACvC;AACL;AAChE,CAA0G;;;AAG1G;AACyG;AACzG,gBAAgB,sCAAU;AAC1B,EAAE,8CAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,sDAAe;;;;;;;;;;;;ACnBsB;AACJ;AACjC;AACmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB;AACxB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,iBAAiB;AACjB;AACA,yBAAyB,gDAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,+DAAe,8DAAK,QAAQ,qEAAe,CAAC","sources":["webpack://data-experience/./src/components/chart/view/ChartViewGroupBar.vue?d217","webpack://data-experience/src/components/chart/view/ChartViewGroupBar.vue","webpack://data-experience/./src/components/chart/view/ChartViewGroupBar.vue?5ce8","webpack://data-experience/./src/components/chart/view/ChartViewGroupBar.vue?d6b7","webpack://data-experience/./src/components/chart/view/ChartViewGroupBar.vue?4977","webpack://data-experience/./src/components/chart/view/ChartViewGroupBar.vue","webpack://data-experience/./src/components/chart/view/mixin.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return (_vm.validProps)?_c('VContainer',[_c('p',{staticClass:\"overline font-weight-bold text-subtitle-1 text-center\"},[_vm._v(\" \"+_vm._s(_vm.title)+\" \")]),_c('div',{staticStyle:{\"position\":\"relative\"},attrs:{\"id\":_vm.graphId}})]):_vm._e()\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <VContainer v-if=\"validProps\">\r\n    <p class=\"overline font-weight-bold text-subtitle-1 text-center\">\r\n      {{ title }}\r\n    </p>\r\n    <div :id=\"graphId\" style=\"position: relative\" />\r\n  </VContainer>\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from 'd3'\r\nimport mixin from './mixin'\r\n\r\nexport default {\r\n  mixins: [mixin],\r\n  props: {\r\n    groupsAccessor: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    valuesAccessor: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    title: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    margin: {\r\n      type: Number,\r\n      default: 5\r\n    },\r\n    adjVertical: {\r\n      type: Array,\r\n      default: () => [20, 50]\r\n    },\r\n    adjHorizontal: {\r\n      type: Array,\r\n      default: () => [150, 150]\r\n    },\r\n    xLabel: {\r\n      type: String,\r\n      default: 'Sexual Orientation'\r\n    },\r\n    yLabel: {\r\n      type: String,\r\n      default: 'Number of action per day and user'\r\n    },\r\n    formatNumber: {\r\n      type: String,\r\n      default: '.2f'\r\n    },\r\n    colorPalette: {\r\n      type: Array,\r\n      default: () => ['#69B3A2', '#C23636', '#67A4BF']\r\n    }\r\n  },\r\n  data() {\r\n    return {}\r\n  },\r\n  computed: {\r\n    validProps() {\r\n      let valid = true\r\n      if (!this.values.length) {\r\n        console.error('Values is empty')\r\n        return false\r\n      }\r\n      if (!Object.keys(this.values[0]).includes(this.groupsAccessor)) {\r\n        console.error('Group Accessor not found:', this.groupsAccessor)\r\n        valid = false\r\n      }\r\n\r\n      this.valuesAccessor.forEach((accessor) => {\r\n        if (!Object.keys(this.values[0]).includes(accessor)\r\n        ) {\r\n          console.error('X Accessor not found:', accessor)\r\n          valid = false\r\n        }\r\n      })\r\n      return valid\r\n    }\r\n  },\r\n  methods: {\r\n    drawViz() {\r\n      try {\r\n      /* create svg element */\r\n        const width = 500\r\n        const height = 380\r\n        const formatNumber = d3.format(this.formatNumber)\r\n        d3.select('#' + this.graphId + ' svg').remove()\r\n        this.svg = d3\r\n          .select('#' + this.graphId)\r\n          .append('svg')\r\n          .attr('preserveAspectRatio', 'xMinYMin meet')\r\n          .attr(\r\n            'viewBox',\r\n            '-' +\r\n            this.adjHorizontal[0] +\r\n            ' -' +\r\n            this.adjVertical[0] +\r\n            ' ' +\r\n            (width + d3.sum(this.adjHorizontal)) +\r\n            ' ' +\r\n            (height + d3.sum(this.adjVertical))\r\n          )\r\n          .style('margin', this.margin)\r\n          .classed('svg-content', true)\r\n\r\n        // List of unique groups\r\n        const groups = [...new Set(this.values.map(d => d[this.groupsAccessor]))]\r\n\r\n        // Add X axis\r\n        const x = d3.scaleBand().domain(groups).range([0, width]).padding([0.2])\r\n        this.svg\r\n          .append('g')\r\n          .attr('class', 'xAxis')\r\n          .attr('transform', 'translate(0,' + height + ')')\r\n          .call(d3.axisBottom(x).tickSize(0))\r\n          .append('text')\r\n          .attr('y', 30)\r\n          .attr('x', width / 2)\r\n          .style('text-anchor', 'middle')\r\n          .text(this.xLabel)\r\n\r\n        // Add Y axis\r\n        const max = d3.max(this.values, d => Math.max(...this.valuesAccessor.map(c => d[c])))\r\n        const y = d3.scaleLinear().domain([0, max]).range([height, 0])\r\n        this.svg\r\n          .append('g')\r\n          .attr('class', 'yAxis')\r\n          .call(d3.axisLeft(y))\r\n          .append('text')\r\n          .attr('dy', '.75em')\r\n          .attr('y', -50)\r\n          .attr('x', -height / 2)\r\n          .attr('transform', 'rotate(-90)')\r\n          .style('text-anchor', 'middle')\r\n          .text(this.yLabel)\r\n\r\n        // Another scale for subgroup position?\r\n        const xSubgroup = d3\r\n          .scaleBand()\r\n          .domain(this.valuesAccessor)\r\n          .range([0, x.bandwidth()])\r\n          .padding([0.05])\r\n\r\n        // color palette = one color per subgroup\r\n        const color = d3\r\n          .scaleOrdinal()\r\n          .domain(this.valuesAccessor)\r\n          .range(this.colorPalette)\r\n\r\n        // Show the bars\r\n        this.svg\r\n          .append('g')\r\n          .selectAll('g')\r\n        // Enter in data = loop group per group\r\n          .data(this.values)\r\n          .enter()\r\n          .append('g')\r\n          .attr('transform', d => 'translate(' + x(d[this.groupsAccessor]) + ',0)')\r\n          .selectAll('rect')\r\n          .data(d => this.valuesAccessor.map(function(key) {\r\n            return { key, value: d[key] }\r\n          }))\r\n          .enter()\r\n          .append('rect')\r\n          .attr('x', d => xSubgroup(d.key))\r\n          .attr('y', function(d) {\r\n            return y(d.value)\r\n          })\r\n          .attr('width', xSubgroup.bandwidth())\r\n          .attr('height', d => height - y(d.value))\r\n          .attr('fill', d => color(d.key))\r\n          .on('mouseover', function(evt, d) {\r\n            d3.select(this).style('opacity', 0.7)\r\n            d3.select(this.parentNode)\r\n              .append('text')\r\n              .attr('class', 'barsLabel')\r\n              .text(formatNumber(d.value))\r\n              .attr('text-anchor', 'middle')\r\n              .attr('alignment-baseline', 'middle')\r\n              .attr('x', xSubgroup(d.key) + xSubgroup.bandwidth() / 2)\r\n              .attr('y', y(d.value) - 10)\r\n              .style('font-size', '0.8rem')\r\n              .style('font-weight', 'bold')\r\n              .style('fill', '#0A0A0A')\r\n          })\r\n          .on('mouseleave', function(evt, d) {\r\n            d3.select(this).style('opacity', 1)\r\n            d3.select('.barsLabel').remove()\r\n          })\r\n\r\n        // Add one dot in the legend for each name.\r\n        const size = 10\r\n        const positionX = width - 20\r\n        const positionY = 0\r\n        this.svg.selectAll('legendSquare')\r\n          .data(this.valuesAccessor)\r\n          .enter()\r\n          .append('rect')\r\n          .attr('x', positionX)\r\n          .attr('y', function(d, i) { return positionY + i * (size + 5) })\r\n          .attr('width', size)\r\n          .attr('height', size)\r\n          .style('fill', function(d) { return color(d) })\r\n\r\n        // Add one label in the legend for each square\r\n        this.svg.selectAll('legendLabels')\r\n          .data(this.valuesAccessor)\r\n          .enter()\r\n          .append('text')\r\n          .attr('x', positionX + size * 1.2)\r\n          .attr('y', function(d, i) { return positionY + i * (size + 5) + (size / 2) })\r\n          .style('fill', function(d) { return color(d) })\r\n          .text(function(d) { return d })\r\n          .attr('text-anchor', 'left')\r\n          .style('alignment-baseline', 'middle')\r\n      } catch (e) {\r\n        console.error(e)\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n/* AXES */\r\n/* ticks */\r\n::v-deep .xAxis line,\r\n::v-deep .yAxis line {\r\n  stroke: #706f6f;\r\n  stroke-width: 0.5;\r\n  shape-rendering: geometricPrecision;\r\n}\r\n\r\n/* axis contour */\r\n::v-deep .xAxis path,\r\n::v-deep .yAxis path {\r\n  stroke: #706f6f;\r\n  stroke-width: 0.7;\r\n  shape-rendering: geometricPrecision;\r\n}\r\n\r\n::v-deep .yAxis path {\r\n  display: none;\r\n}\r\n\r\n/* axis text */\r\n::v-deep .xAxis text,\r\n::v-deep .yAxis text {\r\n  fill: #2b2929;\r\n  font-weight: 300;\r\n}\r\n</style>\r\n","import mod from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewGroupBar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewGroupBar.vue?vue&type=script&lang=js&\"","// extracted by mini-css-extract-plugin\nexport {};","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-12.use[0]!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-12.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-12.use[2]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewGroupBar.vue?vue&type=style&index=0&id=748eb1d0&prod&scoped=true&lang=css&\"","import { render, staticRenderFns } from \"./ChartViewGroupBar.vue?vue&type=template&id=748eb1d0&scoped=true&\"\nimport script from \"./ChartViewGroupBar.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewGroupBar.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ChartViewGroupBar.vue?vue&type=style&index=0&id=748eb1d0&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"748eb1d0\",\n  null\n  \n)\n\nexport default component.exports","import { TextFilterWidget } from 'dc'\r\nimport { merge } from 'lodash-es'\r\n\r\nimport kViewBlockMixin from '@/mixins/k-view-block'\r\n\r\nconst mixin = {\r\n  props: {\r\n    values: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    headers: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    messages: {\r\n      type: Object,\r\n      default: () => ({})\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      graphId: 'graph_' + this.$store.state.xp.currentTab,\r\n      totalCount: 0,\r\n      filterCount: 0\r\n    }\r\n  },\r\n  mounted() {\r\n    this.drawViz()\r\n  },\r\n  watch: {\r\n    values() {\r\n      this.drawViz()\r\n    }\r\n  },\r\n  methods: {\r\n    drawViz() { },\r\n    createTextFilterWidget(parent, placeholder = 'Search') {\r\n      const widget = new TextFilterWidget(parent)\r\n      widget.placeHolder(this.$tev(placeholder, placeholder))\r\n      return widget\r\n    }\r\n  }\r\n}\r\n\r\nexport default merge(mixin, kViewBlockMixin)\r\n"],"names":[],"sourceRoot":""}