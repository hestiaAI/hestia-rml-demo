{"version":3,"file":"DataExperience.common.6089.js","mappings":";;;;;;;;;;;;;;;AAAA,+BAA+B,6BAA6B,6BAA6B,OAAO,sCAAsC,aAAa,OAAO,YAAY,aAAa,OAAO,YAAY,UAAU,sBAAsB,iEAAiE,gCAAgC,YAAY,2CAA2C,OAAO,qEAAqE,KAAK,0BAA0B;AACze,wBAAwB,QAAQ,sDAAsD,yBAAyB,gCAAgC,kDAAkD,OAAO,oCAAoC,sBAAsB,8BAA8B,WAAW,EAAE,iCAAiC,OAAO,iDAAiD,sCAAsC,OAAO,YAAY,oDAAoD,+BAA+B,mDAAmD,sBAAsB,6BAA6B,0CAA0C,sBAAsB,8HAA8H,OAAO,sBAAsB,gBAAgB,OAAO,qEAAqE,QAAQ,sDAAsD,yBAAyB,gCAAgC,4CAA4C,kBAAkB,wBAAwB,sBAAsB,gBAAgB,OAAO;AACzqC;AACA,8DAA8D,QAAQ,+DAA+D,6CAA6C,yCAAyC,MAAM,0DAA0D,aAAa,4DAA4D,SAAS,iCAAiC,KAAK,yBAAyB,4BAA4B,aAAa,aAAa,4DAA4D,SAAS,kCAAkC,KAAK,yBAAyB,4BAA4B,aAAa,aAAa,0DAA0D,SAAS,kCAAkC,KAAK,yBAAyB;AAChyB;AACA,+BAA+B,2DAA2D,OAAO,YAAY,aAAa,OAAO,aAAa,YAAY,OAAO,kBAAkB;AACnL;AACA;;;;;;;;;;;;;;;ACmGwB;AACY;AACe;AACxB;AACoC;;AAE/D;AACA;AACA,gFAAe;AACf,qCAAqC;AACrC,WAAW,gBAAK;AAChwBAAwB,kCAAI;AAC5B;AACA,4BAA4B,OAAM;AAClC;AACA;AACA,wBAAwB,6BAAc;AACtC;AACA;AACA;AACA;AACA,yBAAyB,UAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,aAAY;AACtC;AACA,wBAAwB,UAAS;AACjC,uBAAuB,iBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,WAAU;AAC5B,kBAAkB,cAAa;AAC/B;AACA;AACA;AACA;AACA,kBAAkB,YAAW;AAC7B,kBAAkB,cAAa;AAC/B;AACA;AACA;AACA;AACA,kBAAkB,aAAY;AAC9B,kBAAkB,cAAa;AAC/B;AACA;AACA;AACA;AACA,kBAAkB,YAAW;AAC7B,kBAAkB,cAAa;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,UAAS;AACf,kBAAkB,UACH;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAS;AACxB,4BAA4B,UAAS;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,aAAY;AACjC,qBAAqB,eAAc;AACnC;AACA;AACA;AACA,oBAAoB,YAAW;AAC/B,oBAAoB,cACD;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,aAAY;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gBAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,OAAM;AACxB;AACA;AACA;AACA;AACA;AACA,MAAM,UAAS;AACf,sBAAsB,UACP;AACf;AACA;AACA;AACA;AACA;AACA,gBAAgB,UAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QACN;AACb,eAAe,kBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,UAAS;AAC1B;AACA;AACA,iBAAiB,UAAS;AAC1B;AACA;AACA;AACA,cAAc,WAAU;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,WAAU;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,UAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,UAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AC7foJ,CAAC,qFAAe,2CAAG,EAAC;;ACAzK;;;;;AEAA;;;;;;;AEA8G;AACvC;AACL;AAClE,CAA4G;AACZ;;;AAGhG;AACyG;AACzG,gBAAgB,sCAAU;AAC1B,EAAE,gDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,wDAAe;;;;;;;;;;;;;;;;ACpBf,+BAA+B,6BAA6B,yBAAyB,qBAAqB,wDAAwD,0DAA0D,aAAa,YAAY,sCAAsC,0BAA0B,OAAO,mCAAmC,KAAK,yBAAyB,gBAAgB,8DAA8D,uBAAuB,wCAAwC,uCAAuC,4BAA4B,uFAAuF,uBAAuB,qCAAqC,+BAA+B,OAAO,iBAAiB,qBAAqB,wCAAwC;AACp1B;AACA;;;;;;;;;;;;;AC0ByE;AACT;AACiC;AACvB;;AAE1E,kFAAe;AACf,0BAA0B,mDAAwB,wDAAiB;AACnE,WAAW,6CAAuB;AAClC,CAAC;;;ACpCsJ,CAAC,uFAAe,6CAAG,EAAC;;;;ACAvE;AAC3B;AACL;;;AAGpE;AACA,CAAyG;AACzG,gBAAgB,sCAAU;AAC1B,EAAE,kDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,0DAAe;;;;;;;;;;;;;;;;;AClBR;;AAEP;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,yEAAyE,8CAA8C;AACvH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gEAAgE,sBAAsB;;AAEtF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,4CAAe,GAAG,EAAC;;;AC1EK;;AAExB,6BAAe,gBAAW;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB,OAAG;AACzB;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,+CAA+C,YAAY,kCAAkC,IAAI;AACjG,yDAAyD,+BAA+B;AACxF;;AAEA;AACA,8BAA8B,kDAAkD;AAChF,2BAA2B,4CAA4C;AACvE,+BAA+B,wDAAwD;AACvF,uBAAuB,cAAc,cAAc;AACnD,gCAAgC,mCAAmC,cAAc;AACjF,kCAAkC,oBAAoB,cAAc;AACpE,0BAA0B,YAAY;AACtC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS,OAAG;AACZ;;AAEA;AACA;AACA;;;ACxE6C;;AAE7C;;AAEA,YAAY,iBAAa;;AAEzB;AACA;AACA;AACA;AACA;AACA,SAAS,MAAM;AACf;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2DAA2D,iBAAiB;;AAE5E;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,4CAAe,mDAAG,IAAC;;;ACtCnB,6BAAe,cAAS;AACxB;AACA;AACA;AACA;;;ACJuC;AACF;AACA;AACE;AACI;AACE;;;;;;;;;;;;;ACLrB;AACxB;AACA;AACA,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,KAAK;AACjB,YAAY,MAAM;AAClB,YAAY,MAAM;AAClB,YAAY,OAAO;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,iBAAiB,sCAAS;;AAE1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,GAAG;;AAEH;AACA","sources":["webpack://@hestia.ai/data-experience/./src/components/chart/view/ChartViewTimeSeries.vue?1410","webpack://@hestia.ai/data-experience/src/components/chart/view/ChartViewTimeSeries.vue","webpack://@hestia.ai/data-experience/./src/components/chart/view/ChartViewTimeSeries.vue?c550","webpack://@hestia.ai/data-experience/./src/components/chart/view/ChartViewTimeSeries.vue?7447","webpack://@hestia.ai/data-experience/./src/components/chart/view/ChartViewTimeSeries.vue?663b","webpack://@hestia.ai/data-experience/./src/components/chart/view/ChartViewTimeSeries.vue?538f","webpack://@hestia.ai/data-experience/./src/components/chart/view/ChartViewTimeSeries.vue?f008","webpack://@hestia.ai/data-experience/./src/components/chart/view/ChartViewTimeSeries.vue","webpack://@hestia.ai/data-experience/./src/components/chart/view/ChartViewVRowWebShare.vue?c65c","webpack://@hestia.ai/data-experience/src/components/chart/view/ChartViewVRowWebShare.vue","webpack://@hestia.ai/data-experience/./src/components/chart/view/ChartViewVRowWebShare.vue?2101","webpack://@hestia.ai/data-experience/./src/components/chart/view/ChartViewVRowWebShare.vue","webpack://@hestia.ai/data-experience/./node_modules/d3-collection/src/map.js","webpack://@hestia.ai/data-experience/./node_modules/d3-collection/src/nest.js","webpack://@hestia.ai/data-experience/./node_modules/d3-collection/src/set.js","webpack://@hestia.ai/data-experience/./node_modules/d3-collection/src/keys.js","webpack://@hestia.ai/data-experience/./node_modules/d3-collection/src/index.js","webpack://@hestia.ai/data-experience/./src/components/chart/view/utils/d3-helpers.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('VRow',[_c('VCol',{attrs:{\"cols\":\"12\",\"md\":\"8\",\"offset-md\":\"2\"}},[_c('VRow',{attrs:{\"dense\":\"\"}},[_c('VCol',{attrs:{\"cols\":\"9\"}},[_c('p',{staticClass:\"text-h6\"},[_vm._v(\" \"+_vm._s(_vm.title)+\" \")])]),_c('VSpacer'),_c('VCol',{staticClass:\"text-right\",attrs:{\"cols\":\"3\"}},[(_vm.filters.length === 0)?_c('VSelect',{attrs:{\"items\":_vm.namesInterval,\"label\":_vm.$t('Time interval'),\"dense\":\"\"},on:{\"change\":function($event){_vm.applyFilters()\n            _vm.draw()}},model:{value:(_vm.selectedInterval),callback:function ($$v) {_vm.selectedInterval=$$v},expression:\"selectedInterval\"}}):_vm._e(),(_vm.filters.length > 0)?_c('VDialog',{attrs:{\"persistent\":\"\",\"max-width\":\"300px\"},scopedSlots:_vm._u([{key:\"activator\",fn:function({ on, attrs }){return [_c('VBtn',_vm._g(_vm._b({attrs:{\"color\":\"primary\",\"dark\":\"\",\"small\":\"\",\"fab\":\"\"}},'VBtn',attrs,false),on),[_c('VIcon',{attrs:{\"small\":\"\"}},[_vm._v(\" $vuetify.icons.mdiTuneVariant \")])],1)]}}],null,false,530295481),model:{value:(_vm.settingDialog),callback:function ($$v) {_vm.settingDialog=$$v},expression:\"settingDialog\"}},[_c('VCard',[_c('VCardTitle',[_c('span',{staticClass:\"text-h5\"},[_vm._v(_vm._s(_vm.$t('Settings'))+\"/\"+_vm._s(_vm.$t('Filters')))])]),_c('VCardText',[_c('VContainer',[_c('VRow',[_c('VCol',{attrs:{\"cols\":\"6\",\"sm\":\"12\"}},[_c('VSelect',{attrs:{\"items\":_vm.namesInterval,\"label\":_vm.$t('Time interval'),\"dense\":\"\"},model:{value:(_vm.selectedInterval),callback:function ($$v) {_vm.selectedInterval=$$v},expression:\"selectedInterval\"}})],1),_vm._l((_vm.filters),function(filter){return _c('VCol',{key:filter.value,attrs:{\"cols\":\"6\",\"sm\":\"12\"}},[_c('VSelect',{attrs:{\"items\":_vm.filterItems[filter.value]\n                          ? _vm.filterItems[filter.value]\n                          : [],\"label\":filter.text,\"dense\":\"\"},model:{value:(_vm.filterModel[filter.value]),callback:function ($$v) {_vm.$set(_vm.filterModel, filter.value, $$v)},expression:\"filterModel[filter.value]\"}})],1)})],2)],1)],1),_c('VCardActions',[_c('VSpacer'),_c('VBtn',{directives:[{name:\"t\",rawName:\"v-t\",value:('Reset'),expression:\"'Reset'\"}],attrs:{\"color\":\"red darken-1\",\"text\":\"\"},on:{\"click\":function($event){return _vm.resetFilters()}}}),_c('VBtn',{directives:[{name:\"t\",rawName:\"v-t\",value:('Close'),expression:\"'Close'\"}],attrs:{\"color\":\"blue darken-1\",\"text\":\"\"},on:{\"click\":function($event){_vm.settingDialog = false}}}),_c('VBtn',{directives:[{name:\"t\",rawName:\"v-t\",value:('Save'),expression:\"'Save'\"}],attrs:{\"color\":\"blue darken-1\",\"text\":\"\"},on:{\"click\":function($event){_vm.settingDialog = false\n                  _vm.applyFilters()\n                  _vm.draw()}}})],1)],1)],1):_vm._e()],1)],1),_c('ChartViewVRowWebShare',{attrs:{\"dense\":\"\"}},[_c('VCol',{attrs:{\"cols\":\"12\"}},[_c('div',{attrs:{\"id\":_vm.graphId}})])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <VRow>\n    <VCol cols=\"12\" md=\"8\" offset-md=\"2\">\n      <VRow dense>\n        <VCol cols=\"9\">\n          <p class=\"text-h6\">\n            {{ title }}\n          </p>\n        </VCol>\n        <VSpacer />\n        <VCol cols=\"3\" class=\"text-right\">\n          <VSelect\n            v-if=\"filters.length === 0\"\n            v-model=\"selectedInterval\"\n            :items=\"namesInterval\"\n            :label=\"$t('Time interval')\"\n            dense\n            @change=\"\n              applyFilters()\n              draw()\n            \"\n          />\n          <VDialog\n            v-if=\"filters.length > 0\"\n            v-model=\"settingDialog\"\n            persistent\n            max-width=\"300px\"\n          >\n            <template #activator=\"{ on, attrs }\">\n              <VBtn\n                color=\"primary\"\n                dark\n                small\n                fab\n                v-bind=\"attrs\"\n                v-on=\"on\"\n              >\n                <VIcon small>\n                  $vuetify.icons.mdiTuneVariant\n                </VIcon>\n              </VBtn>\n            </template>\n            <VCard>\n              <VCardTitle>\n                <span class=\"text-h5\">{{ $t('Settings') }}/{{ $t('Filters') }}</span>\n              </VCardTitle>\n              <VCardText>\n                <VContainer>\n                  <VRow>\n                    <VCol cols=\"6\" sm=\"12\">\n                      <VSelect\n                        v-model=\"selectedInterval\"\n                        :items=\"namesInterval\"\n                        :label=\"$t('Time interval')\"\n                        dense\n                      />\n                    </VCol>\n                    <VCol\n                      v-for=\"filter in filters\"\n                      :key=\"filter.value\"\n                      cols=\"6\"\n                      sm=\"12\"\n                    >\n                      <VSelect\n                        v-model=\"filterModel[filter.value]\"\n                        :items=\"\n                          filterItems[filter.value]\n                            ? filterItems[filter.value]\n                            : []\n                        \"\n                        :label=\"filter.text\"\n                        dense\n                      />\n                    </VCol>\n                  </VRow>\n                </VContainer>\n              </VCardText>\n              <VCardActions>\n                <VSpacer />\n                <VBtn v-t=\"'Reset'\" color=\"red darken-1\" text @click=\"resetFilters()\" />\n                <VBtn v-t=\"'Close'\" color=\"blue darken-1\" text @click=\"settingDialog = false\" />\n                <VBtn\n                  v-t=\"'Save'\"\n                  color=\"blue darken-1\"\n                  text\n                  @click=\"\n                    settingDialog = false\n                    applyFilters()\n                    draw()\n                  \"\n                />\n              </VCardActions>\n            </VCard>\n          </VDialog>\n        </VCol>\n      </VRow>\n      <ChartViewVRowWebShare dense>\n        <VCol cols=\"12\">\n          <div :id=\"graphId\" />\n        </VCol>\n      </ChartViewVRowWebShare>\n    </VCol>\n  </VRow>\n</template>\n\n<script>\nimport * as d3 from 'd3'\nimport { nest } from 'd3-collection'\nimport { addMissingDate } from './utils/d3-helpers'\nimport mixin from './mixin'\nimport ChartViewVRowWebShare from './ChartViewVRowWebShare.vue'\n\n// Inspired by\n// https://datawanderings.com/2019/10/28/tutorial-making-a-line-chart-in-d3-js-v-5/\nexport default {\n  components: { ChartViewVRowWebShare },\n  mixins: [mixin],\n  props: {\n    dateAccessor: {\n      type: Object,\n      required: true\n    },\n    seriesAccessor: {\n      type: Object,\n      required: true\n    },\n    // if not set will just count the rows\n    valueAccessor: {\n      type: String,\n      default: null\n    },\n    valueFormat: {\n      type: String,\n      default: '~s'\n    },\n    yLabel: {\n      type: String,\n      default: 'Count'\n    },\n    filters: {\n      type: Array,\n      default: () => []\n    },\n    lineWidth: {\n      type: Number,\n      default: 2\n    },\n    dotWidth: {\n      type: Number,\n      default: 2\n    },\n    dotRadius: {\n      type: Number,\n      default: 4\n    },\n    padding: {\n      type: Number,\n      default: 5\n    },\n    margin: {\n      type: Number,\n      default: 5\n    },\n    adj: {\n      type: Number,\n      default: 70\n    },\n    title: {\n      type: String,\n      default: 'Title of the Graph'\n    },\n    legendOffset: {\n      type: Number,\n      default: 0\n    },\n    legendPadding: {\n      type: Number,\n      default: 10\n    },\n    dateFormat: {\n      type: String,\n      default: ''\n    },\n    cumSum: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      slices: [],\n      selectedInterval: null,\n      intervals: {},\n      namesInterval: [],\n      settingDialog: false,\n      filterItems: {},\n      filterModel: {},\n      extentDate: null,\n      dateParser: d => new Date(d)\n    }\n  },\n  methods: {\n    initFilters() {\n      this.filters.forEach((filter, i) => {\n        this.filterItems[filter.value] = []\n        // get unique ids and set items for each filter select\n        this.filterItems[filter.value] = this.values\n          .map(i => i[filter.value])\n          .filter((value, index, self) => self.indexOf(value) === index)\n      })\n    },\n    resetFilters() {\n      this.filters.forEach((filter) => {\n        this.filterModel[filter.value] = null\n      })\n    },\n    applyFilters() {\n      this.slices.forEach((serie) => {\n        // aggregate per selected time interval and other filters\n        const interval = this.intervals[this.selectedInterval]\n        const filters = Object.keys(this.filterModel).filter(k => this.filterModel[k] != null)\n        // filter according to selection\n        serie.current = serie.values.filter((d) => {\n          return filters.every(f => this.filterModel[f] === d[f])\n        })\n        // Aggregate per time period\n        serie.current = nest()\n          .key(d => interval.parser(this.dateParser(d.date)))\n          .rollup(leaves => d3.sum(leaves, l => l.value))\n          .entries(serie.current)\n        // Add missing datapoints\n        serie.current = addMissingDate(serie.current, 'key', 'value', interval.parser, 0, this.extentDate[0], this.extentDate[1])\n        // Sort the result\n        serie.current = serie.current.sort((e1, e2) => this.dateParser(e1.key) - this.dateParser(e2.key))\n        // Compute cumulative sum if needed\n        if (this.cumSum) {\n          const cumSum = d3.cumsum(serie.current, d => d.value)\n          serie.current = serie.current.map((d, idx) => {\n            return {\n              ...d,\n              value: cumSum[idx]\n            }\n          })\n        }\n      })\n    },\n    drawViz() {\n      /* Init the possible aggregations dpending on dates extent */\n      if (this.dateFormat) {\n        this.dateParser = d3.timeParse(this.dateFormat)\n      }\n      this.extentDate = d3.extent(this.values, d => this.dateParser(d[this.dateAccessor.value]))\n      const diffDays = d3.timeDay.count(this.extentDate[0], this.extentDate[1])\n      if (!diffDays) {\n        console.error('Unrecognized Dates')\n        return\n      }\n      if (diffDays < 93) {\n        this.intervals.Day = {\n          parser: d3.timeDay,\n          format: d3.timeFormat('%B %d, %Y')\n        }\n      }\n      if (diffDays > 14 && diffDays < 651) {\n        this.intervals.Week = {\n          parser: d3.timeWeek,\n          format: d3.timeFormat('%B %d, %Y')\n        }\n      }\n      if (diffDays > 62 && diffDays < 1800) {\n        this.intervals.Month = {\n          parser: d3.timeMonth,\n          format: d3.timeFormat('%B %Y')\n        }\n      }\n      if (diffDays > 730) {\n        this.intervals.Year = {\n          parser: d3.timeYear,\n          format: d3.timeFormat('%Y')\n        }\n      }\n      this.namesInterval = Object.keys(this.intervals).map(value => ({\n        value,\n        text: this.$tc(value, 2)\n      }))\n      // get unique series ids\n      const ids = this.values\n        .map(i => i[this.seriesAccessor.value])\n        .filter((value, index, self) => self.indexOf(value) === index)\n      // group by series ids and sort values\n      this.slices = ids.map((a) => {\n        return {\n          id: 'legend' in this.messages ? this.messages.legend[a] : a,\n          values: this.values\n            .filter(v => a === v[this.seriesAccessor.value])\n            .map((d) => {\n              const ret = {\n                date: this.dateParser(d[this.dateAccessor.value]),\n                value: this.valueAccessor ? +d[this.valueAccessor] : 1\n              }\n              this.filters.forEach((f) => {\n                ret[f.value] = d[f.value]\n              })\n              return ret\n            })\n            .sort((e1, e2) => e1.date - e2.date)\n        }\n      })\n      this.selectedInterval = this.namesInterval.slice(-1)[0].value\n      this.initFilters()\n      this.applyFilters()\n      this.draw()\n    },\n    draw() {\n      const { graphId, adj } = this\n      const width = 800\n      const height = 300\n      /* create svg element */\n      d3.select(`#${graphId} svg`).remove()\n      const svg = d3\n        .select(`#${graphId}`)\n        .append('svg')\n        .attr('preserveAspectRatio', 'xMinYMin meet')\n        .attr('viewBox', `-${adj} -${adj} ${width + adj * 2} ${height + adj * 2}`)\n        .style('padding', this.padding)\n        .style('margin', this.margin)\n        .classed('svg-content', true)\n      function nestedExtent(data, dataAccessor, valueAccessor) {\n        return d3.extent(data.reduce(function(prevArr, currArr) {\n          const extentArr = d3.extent(currArr[dataAccessor], valueAccessor)\n          prevArr.push(extentArr[0])\n          prevArr.push(extentArr[1])\n          return prevArr\n        }, []))\n      }\n      /* Scales */\n      const xScale = d3.scaleTime().range([0, width])\n      const yScale = d3.scaleLinear().rangeRound([height, 0])\n      xScale.domain(nestedExtent(this.slices, 'current', d => this.dateParser(d.key)))\n      yScale.domain([0, nestedExtent(this.slices, 'current', d => d.value)[1]])\n      /* Axis */\n      const yAxis = d3.axisLeft().ticks(5).scale(yScale) // .ticks(slices[0].values.length)\n      const xAxis = d3\n        .axisBottom()\n        .ticks(8)\n      // .ticks(d3.timeDay.every(1))\n      // .tickFormat(d3.timeFormat('%b %d'))\n        .scale(xScale)\n      svg\n        .append('g')\n        .attr('class', 'xAxis')\n        .attr('transform', `translate(0,${height})`)\n        .call(xAxis)\n        .selectAll('text')\n        .attr('y', 0)\n        .attr('x', 9)\n        .attr('dy', '2em')\n        .attr('transform', 'rotate(-30)')\n        .style('text-anchor', 'end')\n      svg\n        .append('g')\n        .attr('class', 'yAxis')\n        .call(yAxis)\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('dy', '.75em')\n        .attr('y', -60)\n        .style('text-anchor', 'end')\n        .text(this.yLabel)\n      /* GridLayout */\n      d3.selectAll('#' + graphId + ' g.yAxis g.tick')\n        .append('line')\n        .attr('class', 'gridline')\n        .attr('x1', 0)\n        .attr('y1', 0)\n        .attr('x2', width)\n        .attr('y2', 0)\n      /*\n            d3.selectAll('#' + this.graphId + ' g.xAxis g.tick')\n              .append('line')\n              .attr('class', 'gridline')\n              .attr('x1', 0)\n              .attr('y1', -height)\n              .attr('x2', 0)\n              .attr('y2', 0)\n            */\n      /* Color Scale */\n      const keys = this.slices.map(d => d.id)\n      const color = d3.scaleOrdinal().domain(keys).range(this.colorPalette)\n      /* Legend */\n      const legend = svg.selectAll('.legend')\n        .data(keys)\n        .enter()\n        .append('g')\n      // add circles\n      legend\n        .append('circle')\n        .attr('r', 7)\n        .attr('cx', -20)\n        .attr('cy', -40)\n        .attr('fill', d => color(d))\n      // add text\n      legend\n        .append('text')\n        .attr('x', -5)\n        .attr('y', -37)\n        .text(function(d) {\n          return d\n        })\n      // space the groups depending on their size\n      legend.attr('transform', (d, i) => {\n        const x = d3.sum(keys, (e, j) => j < i ? legend.nodes()[j].getBBox().width : 0)\n        return ('translate(' +\n                    (x + this.legendOffset + this.legendPadding * i) +\n                    ',0)')\n      })\n      /* Tooltip */\n      d3.select('#' + graphId + '.tooltip').remove()\n      const tooltip = d3\n        .select('body')\n        .append('div')\n        .attr('class', 'tooltip')\n        .attr('id', graphId)\n        .style('opacity', 0)\n      const that = this\n      const f = d3.format(this.valueFormat)\n      function showTooltip(evt, d) {\n        tooltip.transition().duration(60).style('opacity', 0.98)\n        tooltip\n          .html('<b>' +\n                    that.intervals[that.selectedInterval].format(that.dateParser(d.key)) +\n                    '</b><br/>' +\n                    f(d.value)) // d.name\n          .style('left', evt.pageX - 55 + 'px')\n          .style('top', evt.pageY - 45 + 'px')\n      }\n      function hideTooltip() {\n        tooltip.transition().duration(60).style('opacity', 0)\n      }\n      /* Line */\n      const line = d3\n        .line()\n        .curve(d3.curveMonotoneX)\n        .x(d => xScale(this.dateParser(d.key)))\n        .y(d => yScale(d.value))\n      /* Draw lines */\n      const lines = svg.selectAll('lines').data(this.slices).enter().append('g')\n      const path = lines\n        .append('path')\n        .attr('fill', 'none')\n        .attr('stroke', d => color(d.id))\n        .attr('stroke-width', this.lineWidth)\n        .attr('d', d => line(d.current))\n      path\n        .attr('stroke-dashoffset', function() {\n          return d3.select(this).node().getTotalLength()\n        })\n        .attr('stroke-dasharray', function() {\n          return d3.select(this).node().getTotalLength()\n        })\n        .transition()\n        .duration(5000)\n        .ease(d3.easeSin)\n        .attr('stroke-dashoffset', 0)\n      /* Draw points */\n      const points = lines\n        .selectAll('circle')\n        .data(d => d.current.map((v) => {\n          v.color = color(d.id)\n          v.name = d.id\n          return v\n        }))\n        .enter()\n        .append('circle')\n      points\n        .attr('stroke', d => d.color)\n        .attr('fill', 'white')\n        .attr('stroke-width', this.dotWidth)\n        .attr('cy', d => yScale(d.value))\n        .attr('cx', d => xScale(this.dateParser(d.key)))\n        .transition()\n        .duration(1500)\n        .delay((d, i) => i * 100 + 500)\n        .ease(d3.easeSin)\n        .attr('cy', d => yScale(d.value))\n        .attr('cx', d => xScale(this.dateParser(d.key)))\n        .attr('r', this.dotRadius)\n        .attr('class', 'datapoint')\n        .attr('id', (d, i) => i)\n        .style('opacity', 1)\n      const radius = this.dotRadius\n      points.on('mouseover', function(evt, d) {\n        d3.select(this)\n          .attr('fill', d => d.color)\n          .transition()\n          .duration(60)\n          .attr('r', radius + 5)\n        showTooltip(evt, d)\n      })\n      points.on('mouseleave', function() {\n        d3.select(this)\n          .attr('fill', 'white')\n          .transition()\n          .duration(60)\n          .attr('r', radius)\n        hideTooltip()\n      })\n    }\n  }\n}\n</script>\n<style scoped>\n/* AXES */\n/* ticks */\ndiv ::v-deep .xAxis line,\ndiv ::v-deep .yAxis line {\n  stroke: #706f6f;\n  stroke-width: 0.5;\n  shape-rendering: geometricPrecision;\n}\n/* axis contour */\ndiv ::v-deep .xAxis path,\ndiv ::v-deep .yAxis path {\n  stroke: #706f6f;\n  stroke-width: 0.7;\n  shape-rendering: geometricPrecision;\n}\ndiv ::v-deep .yAxis path {\n  display: none;\n}\n/* axis text */\ndiv ::v-deep .xAxis text,\ndiv ::v-deep .yAxis text {\n  fill: #2b2929;\n  font-size: 1rem;\n  font-weight: 300;\n}\ndiv ::v-deep .gridline {\n  stroke: lightgray;\n  shape-rendering: geometricPrecision;\n  stroke-opacity: 0.5;\n  stroke-width: 10;\n}\n</style>\n<style>\ndiv.tooltip {\n  position: absolute;\n  text-align: center;\n  width: 110px;\n  height: 30px;\n  padding: 2px;\n  font: 12px sans-serif;\n  background: white;\n  color: #565656;\n  border: 0px;\n  border-radius: 2px;\n  pointer-events: none;\n  box-shadow: 0 0px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n}\n</style>\n","import mod from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewTimeSeries.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewTimeSeries.vue?vue&type=script&lang=js&\"","// extracted by mini-css-extract-plugin\nexport {};","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-12.use[0]!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-12.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-12.use[2]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewTimeSeries.vue?vue&type=style&index=0&id=7330e736&prod&scoped=true&lang=css&\"","// extracted by mini-css-extract-plugin\nexport {};","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-12.use[0]!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-12.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-12.use[2]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewTimeSeries.vue?vue&type=style&index=1&id=7330e736&prod&lang=css&\"","import { render, staticRenderFns } from \"./ChartViewTimeSeries.vue?vue&type=template&id=7330e736&scoped=true&\"\nimport script from \"./ChartViewTimeSeries.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewTimeSeries.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ChartViewTimeSeries.vue?vue&type=style&index=0&id=7330e736&prod&scoped=true&lang=css&\"\nimport style1 from \"./ChartViewTimeSeries.vue?vue&type=style&index=1&id=7330e736&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7330e736\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('VRow',_vm._b({ref:\"domToImageNode\"},'VRow',_vm.$attrs,false),[_vm._t(\"default\"),_c('VCol',{staticClass:\"dom-to-image-exclude webshare d-flex\",attrs:{\"cols\":\"12\"}},[_c('div',{staticClass:\"webshare__export-button\"},[_c('BaseButton',_vm._b({attrs:{\"icon\":\"mdiExport\",\"text\":\"Export\"},on:{\"click\":_vm.exportImage}},'BaseButton',{ progress: _vm.progress, status: _vm.status, error: _vm.error },false))],1),_c('div',{staticClass:\"webshare__download-button\"},[_c('BaseButtonDownloadData',_vm._b({},'BaseButtonDownloadData',{ disabled: !_vm.blob, extension: _vm.extension, filename: _vm.filename, data: _vm.blob },false))],1),_c('div',{staticClass:\"webshare__share-button\"},[_c('BaseButtonShare',_vm._b({attrs:{\"file-share\":\"\"}},'BaseButtonShare',{ files: _vm.files, disabled: !_vm.files },false))],1)])],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <VRow ref=\"domToImageNode\" v-bind=\"$attrs\">\n      <slot />\n      <VCol cols=\"12\" class=\"dom-to-image-exclude webshare d-flex\">\n        <div class=\"webshare__export-button\">\n          <BaseButton\n            icon=\"mdiExport\"\n            text=\"Export\"\n            v-bind=\"{ progress, status, error }\"\n            @click=\"exportImage\"\n          />\n        </div>\n        <div class=\"webshare__download-button\">\n        <BaseButtonDownloadData\n          v-bind=\"{ disabled: !blob, extension, filename, data: blob }\"\n        />\n        </div>\n        <div class=\"webshare__share-button\">\n        <BaseButtonShare\n          file-share\n          v-bind=\"{ files, disabled: !files }\"\n        />\n        </div>\n      </VCol>\n    </VRow>\n</template>\n\n<script>\nimport exportImageMixinFactory from '@/mixins/export-image-mixin-factory'\nimport BaseButton from '@/components/base/button/BaseButton.vue'\nimport BaseButtonDownloadData from '@/components/base/button/download/BaseButtonDownloadData.vue'\nimport BaseButtonShare from '@/components/base/button/BaseButtonShare.vue'\n\nexport default {\n  components: { BaseButton, BaseButtonDownloadData, BaseButtonShare },\n  mixins: [exportImageMixinFactory()]\n}\n</script>\n","import mod from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewVRowWebShare.vue?vue&type=template&id=67579568&\"\nimport script from \"./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","export default function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n}\n","export {default as nest} from \"./nest\";\nexport {default as set} from \"./set\";\nexport {default as map} from \"./map\";\nexport {default as keys} from \"./keys\";\nexport {default as values} from \"./values\";\nexport {default as entries} from \"./entries\";\n","import * as d3 from 'd3'\n/**\n * Fill in the missing dates of an array of dated objects with a specific value.\n * @param  {Array} data  array of objects that include dates\n * @param  {String} dateAccessor  the key of date object\n * @param  {String} valueAccessor the key of the value to add for each missing date\n * @param  {String} interval  the d3 interval between each date, e.g: d3.timeDay, d3.timeMonth\n * @param  {Any} fillValue  the value to fill for each missing date, default to 0.\n * @param  {Date} minDate  the starting date range, computed from the data by default.\n * @param  {Date} maxDate  the ending date range, computed from the data by default.\n * @return {Array} the modified data array with the missing dates and their value added\n */\nexport function addMissingDate(\n  data,\n  dateAccessor,\n  valueAccessor,\n  interval,\n  fillValue = 0,\n  minDate = null,\n  maxDate = null\n) {\n  if (data.length <= 0) { return [] }\n  // Compute the min and max date\n  const extent = d3.extent(data, d => new Date(d[dateAccessor]))\n\n  // Get the list of dates between this extent\n  const dates = interval.range(\n    minDate !== null ? interval.floor(minDate) : interval.floor(extent[0]),\n    maxDate !== null ? interval.ceil(maxDate) : interval.ceil(extent[1]),\n    1\n  )\n\n  // Get dates that are not in the above list\n  const missingDates = dates.filter(\n    value => !data.map(d => d[dateAccessor]).includes(value.toString())\n  )\n\n  // Add and fill missing dates\n  missingDates.forEach((date) => {\n    const obj = { ...data[0] }\n    obj[dateAccessor] = date\n    obj[valueAccessor] = fillValue\n    data.push(obj)\n  })\n\n  return data\n}\n"],"names":[],"sourceRoot":""}