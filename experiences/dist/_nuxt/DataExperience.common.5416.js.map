{"version":3,"file":"DataExperience.common.5416.js","mappings":";;;;;;;;;;;;;;;AAAA,+BAA+B,6BAA6B,oDAAoD,OAAO,YAAY,aAAa,iCAAiC,uBAAuB,aAAa,OAAO,kCAAkC,sBAAsB,0BAA0B,mBAAmB,yCAAyC,iCAAiC,GAAG,YAAY,EAAE,+BAA+B,gDAAgD,YAAY,EAAE,4BAA4B,mBAAmB,yCAAyC,mCAAmC,GAAG,YAAY,EAAE,4BAA4B,mBAAmB,yCAAyC,mCAAmC,GAAG,YAAY,wBAAwB,qBAAqB,OAAO,+BAA+B,aAAa,aAAa,sBAAsB,QAAQ,sBAAsB,cAAc,OAAO,6CAA6C,sBAAsB,8BAA8B,WAAW,EAAE,iCAAiC,aAAa,iDAAiD,QAAQ,WAAW,sCAAsC,OAAO,YAAY,4CAA4C,yBAAyB,cAAc,aAAa,iBAAiB,kGAAkG,mBAAmB,2BAA2B,OAAO,cAAc,cAAc,EAAE,WAAW,sHAAsH,KAAK,kBAAkB,QAAQ,gDAAgD,mBAAmB,0BAA0B,gDAAgD,OAAO,8DAA8D,KAAK,kBAAkB,QAAQ,iDAAiD,oBAAoB,2BAA2B,gCAAgC,aAAa,sBAAsB,QAAQ,kBAAkB;AACllE;AACA;;;;;;;;;;;AC4EwB;AACY;AACT;;AAE3B,4EAAe;AACf,WAAW,gBAAK;AAChiBAAiB,OAAM;AACvB;AACA;AACA,iBAAiB,cAAa;AAC9B;AACA;;AAEA,yBAAyB,UAAS;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,UAAS;AACnB,UAAU,UAAS;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,UAAS;AACnB,UAAU,UAAS;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAM,UAAS;AACf;AACA;AACA;AACA;AACA,MAAM,aAAY;AAClB;AACA;AACA;AACA;;AAEA,MAAM,UAAS;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,aAAY;AACtB;;AAEA;AACA;AACA,mCAAmC,UAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU,OAAM;;AAEhB;AACA;AACA,qBAAqB,kCAAI;AACzB;AACA,qBAAqB,OAAM;AAC3B;AACA;AACA,iBAAiB,cAAa;AAC9B;;AAEA;AACA;AACA;AACA,MAAM,UAAS;AACf,iBAAiB,UACF;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,OAAM;AAC3B;AACA,sBAAsB,OAAM;AAC5B;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,eAAc;AAClC,oBAAoB,aAAY;;AAEhC;AACA;AACA;AACA;AACA,oBAAoB,YACH;AACjB;AACA;AACA,oBAAoB,cAAa;AACjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AC5XgJ,CAAC,iFAAe,uCAAG,EAAC;;ACArK;;;;;;;AEA0G;AACvC;AACL;AAC9D,CAAwG;;;AAGxG;AACyG;AACzG,gBAAgB,sCAAU;AAC1B,EAAE,4CAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,oDAAe;;;;;;;;;;;;;;;;;ACnBR;;AAEP;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,yEAAyE,8CAA8C;AACvH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gEAAgE,sBAAsB;;AAEtF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,4CAAe,GAAG,EAAC;;;AC1EK;;AAExB,6BAAe,gBAAW;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB,OAAG;AACzB;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,+CAA+C,YAAY,kCAAkC,IAAI;AACjG,yDAAyD,+BAA+B;AACxF;;AAEA;AACA,8BAA8B,kDAAkD;AAChF,2BAA2B,4CAA4C;AACvE,+BAA+B,wDAAwD;AACvF,uBAAuB,cAAc,cAAc;AACnD,gCAAgC,mCAAmC,cAAc;AACjF,kCAAkC,oBAAoB,cAAc;AACpE,0BAA0B,YAAY;AACtC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS,OAAG;AACZ;;AAEA;AACA;AACA;;;ACxE6C;;AAE7C;;AAEA,YAAY,iBAAa;;AAEzB;AACA;AACA;AACA;AACA;AACA,SAAS,MAAM;AACf;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2DAA2D,iBAAiB;;AAE5E;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,4CAAe,mDAAG,IAAC;;;ACtCnB,6BAAe,cAAS;AACxB;AACA;AACA;AACA;;;ACJuC;AACF;AACA;AACE;AACI;AACE","sources":["webpack://@hestia.ai/data-experience/./src/components/chart/view/ChartViewTopRow.vue?4d41","webpack://@hestia.ai/data-experience/src/components/chart/view/ChartViewTopRow.vue","webpack://@hestia.ai/data-experience/./src/components/chart/view/ChartViewTopRow.vue?47c9","webpack://@hestia.ai/data-experience/./src/components/chart/view/ChartViewTopRow.vue?abb9","webpack://@hestia.ai/data-experience/./src/components/chart/view/ChartViewTopRow.vue?d627","webpack://@hestia.ai/data-experience/./src/components/chart/view/ChartViewTopRow.vue","webpack://@hestia.ai/data-experience/./node_modules/d3-collection/src/map.js","webpack://@hestia.ai/data-experience/./node_modules/d3-collection/src/nest.js","webpack://@hestia.ai/data-experience/./node_modules/d3-collection/src/set.js","webpack://@hestia.ai/data-experience/./node_modules/d3-collection/src/keys.js","webpack://@hestia.ai/data-experience/./node_modules/d3-collection/src/index.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return (_vm.validProps)?_c('VContainer',[_c('VRow',{attrs:{\"dense\":\"\"}},[_c('VCol',{staticClass:\"text-center\",attrs:{\"cols\":\"12\",\"md\":\"12\"}},[_c('i18n',{attrs:{\"tag\":\"p\",\"path\":_vm.k('heading')},scopedSlots:_vm._u([{key:\"total\",fn:function(){return [_c('span',{staticClass:\"font-weight-bold\",domProps:{\"textContent\":_vm._s(_vm.total)}})]},proxy:true},{key:\"countLabel\",fn:function(){return [_vm._v(\" \"+_vm._s(_vm.countLabel)+\" \")]},proxy:true},{key:\"minDate\",fn:function(){return [_c('span',{staticClass:\"font-weight-bold\",domProps:{\"textContent\":_vm._s(_vm.minDate)}})]},proxy:true},{key:\"maxDate\",fn:function(){return [_c('span',{staticClass:\"font-weight-bold\",domProps:{\"textContent\":_vm._s(_vm.maxDate)}})]},proxy:true}],null,false,923081494)})],1)],1),_c('VRow',{attrs:{\"justify\":\"center\",\"dense\":\"\"}},[_c('VCol',{staticStyle:{\"position\":\"relative\"},attrs:{\"cols\":\"12\",\"md\":\"7\"}},[_c('VMenu',{attrs:{\"offset-x\":\"\",\"close-on-content-click\":false},scopedSlots:_vm._u([{key:\"activator\",fn:function({ on, attrs }){return [_c('VBtn',_vm._g(_vm._b({staticStyle:{\"position\":\"absolute\",\"right\":\"0\",\"z-index\":\"10\"},attrs:{\"icon\":\"\"}},'VBtn',attrs,false),on),[_c('VIcon',{attrs:{\"small\":\"\"}},[_vm._v(\" $vuetify.icons.mdiCog \")])],1)]}}],null,false,2520745846)},[_c('VCard',{staticStyle:{\"width\":\"300px\"}},[_c('VCardTitle',[_vm._v(_vm._s(_vm.$t('Settings')))]),_c('VDivider'),_c('VCardText',[_c('VRow',{staticClass:\"mt-3\"},[_c('VCol',[_c('VSlider',{attrs:{\"label\":`N° ${_vm.$t('of')} ${_vm.yLabel}`,\"thumb-color\":\"primary\",\"thumb-label\":\"always\",\"min\":\"1\",\"max\":Math.min(_vm.total, 50),\"hide-details\":\"\",\"dense\":\"\"},on:{\"change\":_vm.draw},model:{value:(_vm.topKSlider),callback:function ($$v) {_vm.topKSlider=$$v},expression:\"topKSlider\"}})],1)],1),_c('VRow',[_c('VCol',[_c('VCheckbox',{attrs:{\"dense\":\"\",\"label\":_vm.$t('Display Others'),\"hide-details\":\"\"},on:{\"change\":_vm.draw},model:{value:(_vm.othersCheck),callback:function ($$v) {_vm.othersCheck=$$v},expression:\"othersCheck\"}})],1)],1)],1)],1)],1),_c('div',{staticStyle:{\"position\":\"relative\"},attrs:{\"id\":_vm.graphId}})],1)],1)],1):_vm._e()\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <VContainer v-if=\"validProps\">\n    <VRow dense>\n      <VCol cols=\"12\" md=\"12\" class=\"text-center\">\n        <i18n\n          tag=\"p\"\n          :path=\"k('heading')\"\n        >\n          <template #total>\n            <span class=\"font-weight-bold\" v-text=\"total\" />\n          </template>\n          <template #countLabel>\n            {{ countLabel }}\n          </template>\n          <template #minDate>\n            <span class=\"font-weight-bold\" v-text=\"minDate\" />\n          </template>\n          <template #maxDate>\n            <span class=\"font-weight-bold\" v-text=\"maxDate\" />\n          </template>\n        </i18n>\n      </VCol>\n    </VRow>\n    <VRow justify=\"center\" dense>\n      <VCol cols=\"12\" md=\"7\" style=\"position: relative\">\n        <VMenu offset-x :close-on-content-click=\"false\">\n          <template #activator=\"{ on, attrs }\">\n            <VBtn\n              icon\n              v-bind=\"attrs\"\n              style=\"position: absolute; right: 0; z-index: 10\"\n              v-on=\"on\"\n            >\n              <VIcon small>\n                $vuetify.icons.mdiCog\n              </VIcon>\n            </VBtn>\n          </template>\n          <VCard style=\"width: 300px\">\n            <VCardTitle>{{ $t('Settings') }}</VCardTitle>\n            <VDivider />\n            <VCardText>\n              <VRow class=\"mt-3\">\n                <VCol>\n                  <VSlider\n                    v-model=\"topKSlider\"\n                    :label=\"`N° ${$t('of')} ${yLabel}`\"\n                    thumb-color=\"primary\"\n                    thumb-label=\"always\"\n                    min=\"1\"\n                    :max=\"Math.min(total, 50)\"\n                    hide-details\n                    dense\n                    @change=\"draw\"\n                  />\n                </VCol>\n              </VRow>\n              <VRow>\n                <VCol>\n                  <VCheckbox\n                    v-model=\"othersCheck\"\n                    dense\n                    :label=\"$t('Display Others')\"\n                    hide-details\n                    @change=\"draw\"\n                  />\n                </VCol>\n              </VRow>\n            </VCardText>\n          </VCard>\n        </VMenu>\n        <div :id=\"graphId\" style=\"position: relative\" />\n      </VCol>\n    </VRow>\n  </VContainer>\n</template>\n\n<script>\nimport * as d3 from 'd3'\nimport { nest } from 'd3-collection'\nimport mixin from './mixin'\n\nexport default {\n  mixins: [mixin],\n  props: {\n    /**\n     * The column name that contains the y values\n     */\n    yAccessor: {\n      type: String,\n      required: true // advertiserName\n    },\n    /**\n     * The column name that contains the x values\n     * if not set, will count the rows\n     */\n    xAccessor: {\n      type: String,\n      default: '' // count,\n    },\n    /**\n     * The column name that contains the dates values\n     * if set, will show the date range\n     */\n    dateAccessor: {\n      type: String,\n      default: '' // date\n    },\n    /**\n     * Max length of labels on y axis\n     */\n    yAxisMaxTickLength: {\n      type: Number,\n      default: 20\n    },\n    /**\n     * Margin\n     */\n    margin: {\n      type: Number,\n      default: 5\n    },\n    /**\n     * Vertical padding\n     */\n    adjVertical: {\n      type: Array,\n      default: () => [5, 50]\n    },\n    /**\n     * Horizontal padding\n     */\n    adjHorizontal: {\n      type: Array,\n      default: () => [150, 150]\n    },\n    /**\n     * Label displayed on xAxis\n     */\n    countLabel: {\n      type: String,\n      default: 'records'\n    },\n    /**\n     * Label displayed on xAxis\n     */\n    xLabel: {\n      type: String,\n      default: 'records'\n    },\n    /**\n     * Label displayed in the number of bars to display selection\n     */\n    yLabel: {\n      type: String,\n      default: 'companies'\n    },\n    /**\n     * Format of the date, if not parsable by new Date, you should\n     * specify the format here\n     */\n    dateFormat: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      total: 0,\n      minDate: null,\n      maxDate: null,\n      records: [],\n      topKSlider: null,\n      othersCheck: false\n    }\n  },\n  computed: {\n    validProps() {\n      let valid = true\n      if (!this.values.length) {\n        console.error('Values is empty')\n        valid = false\n        return valid\n      }\n      if (\n        this.dateAccessor &&\n        !Object.keys(this.values[0]).includes(this.dateAccessor)\n      ) {\n        console.error('Date Accessor not found')\n        valid = false\n      }\n      if (!Object.keys(this.values[0]).includes(this.yAccessor)) {\n        console.error('Y Accessor not found')\n        valid = false\n      }\n      if (\n        this.xAccessor &&\n        !Object.keys(this.values[0]).includes(this.xAccessor)\n      ) {\n        console.error('X Accessor not found')\n        valid = false\n      }\n      return valid\n    }\n  },\n  methods: {\n    k(key) {\n      return `chart-view.top-row.${key}`\n    },\n    // Update data depending on the current states of the buttons\n    draw() {\n      const newData = this.records.slice(\n        0,\n        this.othersCheck ? this.topKSlider - 1 : this.topKSlider\n      )\n      if (this.othersCheck) {\n        newData.push({\n          key: 'Others',\n          value: d3.sum(this.records.slice(this.topKSlider), d => d.value)\n        })\n        newData.sort(function(a, b) {\n          return d3.descending(a.value, b.value)\n        })\n      }\n\n      this.xScale.domain(d3.extent(newData, d => d.value))\n      this.yScale.domain(\n        newData.map(function(d) {\n          return d.key\n        })\n      )\n\n      // Create/update bars\n      const bars = this.svg.selectAll('.bars').data(newData, d => d.key)\n      const that = this\n      bars\n        .enter()\n        .append('rect')\n        .attr('class', 'bars')\n        .attr('x', 5)\n        .attr('y', d => this.yScale(d.key))\n        .attr('width', 0)\n        .attr('height', this.yScale.bandwidth())\n        .attr('fill', this.colorPalette[0]) // '#69b3a2'\n        .on('mouseover', function(evt, d) {\n          d3.select(this).style('opacity', 0.7)\n          d3.select(this.parentNode)\n            .append('text')\n            .attr('class', 'barsLabel')\n            .text(d.value)\n            .attr('text-anchor', 'start')\n            .attr('alignment-baseline', 'middle')\n            .attr('x', that.xScale(d.value) + 15)\n            .attr('y', that.yScale(d.key) + that.yScale.bandwidth() / 2)\n            .style('font-size', '0.8rem')\n            .style('font-weight', 'bold')\n            .style('fill', '#0A0A0A')\n        })\n        .on('mouseleave', function(evt, d) {\n          d3.select(this).style('opacity', 1)\n          d3.select('.barsLabel').remove()\n        })\n        .merge(bars)\n        .transition()\n        .duration(1000)\n        .delay(200)\n        .attr('y', d => this.yScale(d.key))\n        .attr('width', d => this.xScale(d.value) + 5)\n        .attr('height', this.yScale.bandwidth())\n\n      // Animate bars when removing\n      bars.exit().transition().duration(1000).attr('width', 0).remove()\n\n      d3.select('.yAxis')\n        .transition()\n        .duration(1000)\n        .delay(200)\n        .call(this.yAxis)\n      d3.selectAll('.yAxis g text')\n        .transition()\n        .duration(1000)\n        .delay(200)\n        .style('font-size', 1.8 / Math.log(this.topKSlider) + 'rem')\n\n      d3.select('.xAxis')\n        .transition()\n        .duration(1000)\n        .delay(200)\n        .call(this.xAxis)\n    },\n    drawViz() {\n      if (!this.validProps) { return }\n      // Compute date range\n      const dateParser = this.dateFormat\n        ? d3.timeParse(this.dateFormat)\n        : d => new Date(d)\n\n      const formatDate = date => this.$d(date, 'dateOnly', this.$i18n.locale)\n      if (this.dateAccessor) {\n        const [minDate, maxDate] = d3.extent(\n          this.values,\n          d => dateParser(d[this.dateAccessor])\n        )\n        if (minDate && maxDate) {\n          this.minDate = formatDate(minDate)\n          this.maxDate = formatDate(maxDate)\n        } else {\n          throw new Error('Unable to parse date fields')\n        }\n      }\n\n      // Add number of samples\n      this.total = !this.xAccessor\n        ? this.values.length\n        : d3.sum(this.values, d => d[this.xAccessor])\n\n      this.topKSlider = Math.min(20, this.total)\n      // Precompute aggregation\n      this.records = nest()\n        .key(d => d[this.yAccessor])\n        .rollup(d => d3.sum(d, l => (this.xAccessor ? l[this.xAccessor] : 1)))\n        .entries(this.values)\n        .sort(function(a, b) {\n          return d3.descending(a.value, b.value)\n        })\n\n      /* create svg element */\n      const width = 300\n      const height = 380\n      d3.select('#' + this.graphId + ' svg').remove()\n      this.svg = d3\n        .select('#' + this.graphId)\n        .append('svg')\n        .attr('preserveAspectRatio', 'xMinYMin meet')\n        .attr(\n          'viewBox',\n          '-' +\n            this.adjHorizontal[0] +\n            ' -' +\n            this.adjVertical[0] +\n            ' ' +\n            (width + d3.sum(this.adjHorizontal)) +\n            ' ' +\n            (height + d3.sum(this.adjVertical))\n        )\n        .style('padding', this.padding)\n        .style('margin', this.margin)\n        .classed('svg-content', true)\n\n      /* Scales */\n      this.xScale = d3.scaleLinear().range([0, width])\n      this.yScale = d3.scaleBand().range([0, height]).paddingInner(0.1)\n\n      /* Axis */\n      function cutLongNames(name, maxLength) {\n        if (name.length > maxLength) { return name.slice(0, maxLength) + '..' } else { return name }\n      }\n      const yAxis = d3\n        .axisLeft(this.yScale)\n        .tickFormat(x => cutLongNames(x, this.yAxisMaxTickLength))\n        .tickSizeOuter(0)\n      const xAxis = d3.axisBottom(this.xScale).ticks(4)\n      this.xAxis = xAxis\n      this.yAxis = yAxis\n\n      this.svg\n        .append('g')\n        .attr('class', 'xAxis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(xAxis)\n        .append('text')\n        .attr('dy', '.75em')\n        .attr('y', 30)\n        .attr('x', width / 2)\n        .style('text-anchor', 'middle')\n        .text(this.xLabel)\n      this.svg.append('g').attr('class', 'yAxis').call(yAxis)\n      this.draw()\n    }\n  }\n}\n</script>\n<style scoped>\n/* AXES */\n/* ticks */\n::v-deep .xAxis line,\n::v-deep .yAxis line {\n  stroke: #706f6f;\n  stroke-width: 0.5;\n  shape-rendering: geometricPrecision;\n}\n\n/* axis contour */\n::v-deep .xAxis path,\n::v-deep .yAxis path {\n  stroke: #706f6f;\n  stroke-width: 0.7;\n  shape-rendering: geometricPrecision;\n}\n\n::v-deep .yAxis path {\n  display: none;\n}\n\n/* axis text */\n::v-deep .xAxis text,\n::v-deep .yAxis text {\n  fill: #2b2929;\n  font-weight: 300;\n}\n::v-deep .xAxis text {\n  fill: #2b2929;\n  font-weight: 300;\n  font-size: 1rem;\n}\n</style>\n","import mod from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewTopRow.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewTopRow.vue?vue&type=script&lang=js&\"","// extracted by mini-css-extract-plugin\nexport {};","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-12.use[0]!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-12.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-12.use[2]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewTopRow.vue?vue&type=style&index=0&id=be13dd44&prod&scoped=true&lang=css&\"","import { render, staticRenderFns } from \"./ChartViewTopRow.vue?vue&type=template&id=be13dd44&scoped=true&\"\nimport script from \"./ChartViewTopRow.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewTopRow.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ChartViewTopRow.vue?vue&type=style&index=0&id=be13dd44&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"be13dd44\",\n  null\n  \n)\n\nexport default component.exports","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","export default function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n}\n","export {default as nest} from \"./nest\";\nexport {default as set} from \"./set\";\nexport {default as map} from \"./map\";\nexport {default as keys} from \"./keys\";\nexport {default as values} from \"./values\";\nexport {default as entries} from \"./entries\";\n"],"names":[],"sourceRoot":""}