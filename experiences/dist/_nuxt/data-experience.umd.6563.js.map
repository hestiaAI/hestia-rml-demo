{"version":3,"file":"data-experience.umd.6563.js","mappings":";;;;;;;;;;;;;;;AAAA,+BAA+B,6BAA6B,+DAA+D,OAAO,aAAa,wBAAwB,OAAO,sBAAsB,YAAY,OAAO,oBAAoB,YAAY,GAAG,YAAY,aAAa,kBAAkB,+EAA+E,OAAO,sBAAsB,YAAY,OAAO,kBAAkB,YAAY,GAAG,YAAY,aAAa,kBAAkB,wFAAwF,OAAO,sBAAsB,YAAY,OAAO,uBAAuB,YAAY,GAAG,YAAY,aAAa,kBAAkB,+DAA+D,OAAO,sBAAsB,YAAY,OAAO,iCAAiC,YAAY,GAAG,YAAY,aAAa,kBAAkB,+GAA+G,mCAAmC,sBAAsB,YAAY,GAAG,0BAA0B,OAAO,aAAa,oCAAoC,yBAAyB,yCAAyC;AAC9tC;AACA;;;;;;;;;;;;;;;;;;;;;;;ACkDwB;AACA;AACc;AACX;AAC0B;AACV;AACoB;AACF;AAC+B;;AAE5F;AACA,uBAAuB,CAAC,gBAAe;;AAEvC,uFAAe;AACf,qCAAqC,oDAAkB,kDAAqB;AAC5E,WAAW,gBAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,YAAY;AAClB,MAAM,YAAY;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,aAAY;AACrC,4BAA4B,cAAa;AACzC;AACA;AACA;AACA;AACA;AACA,iBAAiB,aAAY;AAC7B,eAAe,WAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,6BAAW;AAChC,kBAAkB,uBAAW;AAC7B,6BAA6B,YAAY;AACzC,gCAAgC,YAAY;AAC5C,2BAA2B,WAAW;AACtC,mCAAmC,WAAW;AAC9C;AACA,MAAM,UAAS;AACf;AACA,QAAQ,YAAY;AACpB;AACA,MAAM,UAAS;AACf;AACA,QAAQ,YAAY;AACpB;AACA,MAAM,UAAS;AACf;AACA,QAAQ,YAAY;AACpB;AACA,MAAM,UAAS;AACf;AACA,QAAQ,YAAY;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,UACH;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,2BAAgB;AACnD;AACA,cAAc,UACC;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,2BAAgB;AAC3D;AACA,yBAAyB,UAAS;AAClC,cAAc,UACC;AACf;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAY;AACvB;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,UACC;AACf;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAY;AACvB,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,YAAY;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,UAAS;AACnB,YAAY,YAAY;AACxB,YAAY,YAAY;AACxB;AACA;AACA,MAAM,YAAY;AAClB;AACA;AACA,CAAC;;;AChU2J,CAAC,4FAAe,kDAAG,EAAC;;;;ACAvE;AAC3B;AACL;;;AAGzE;AACA,CAAyG;AACzG,gBAAgB,sCAAU;AAC1B,EAAE,uDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,+DAAe;;;;;;;;;;;;;;;;AClBf,+BAA+B,6BAA6B,yBAAyB,qBAAqB,wDAAwD,0CAA0C,aAAa,0BAA0B,OAAO,mCAAmC,KAAK,yBAAyB,gBAAgB,8DAA8D,8CAA8C,4BAA4B,uFAAuF,sCAAsC,OAAO,iBAAiB,qBAAqB,wCAAwC;AACrqB;AACA;;;;;;;;;;;;;ACiByE;AACT;AACiC;AACvB;;AAE1E,kFAAe;AACf,0BAA0B,mDAAwB,wDAAiB;AACnE,WAAW,6CAAuB;AAClC,CAAC;;;AC3BsJ,CAAC,uFAAe,6CAAG,EAAC;;;;ACAvE;AAC3B;AACL;;;AAGpE;AACA,CAAyG;AACzG,gBAAgB,sCAAU;AAC1B,EAAE,kDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,0DAAe;;;;;;;;;;;;;;;;AClBf,+BAA+B,6BAA6B,eAAe,sBAAsB,yEAAyE,qBAAqB,YAAY,aAAa,4DAA4D,mCAAmC,kBAAkB;AACzU;AACA;;;;;ACSA,6EAAe;;AAEf,CAAC;;;ACboJ,CAAC,qFAAe,wCAAG,EAAC;;;;ACA1E;AAC3B;AACL;;;AAG/D;AACA,CAA4G;AAC5G,gBAAgB,sCAAU;AAC1B,EAAE,gDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,qDAAe;;;;;;;;;;;;AClBsB;AACJ;;AAEkB;;AAEnD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB;AACxB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,iBAAiB;AACjB;AACA,yBAAyB,gDAAgB;AACzC;AACA;AACA;AACA;AACA;;AAEA,+DAAe,8DAAK,QAAQ,qEAAe,CAAC;;;;;;;;;;;;;;;;;;;AC7CpB;AACA;;AAExB;AACA;AACA;AACA;AACA;AACA,IAAI;AACG;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,iBAAiB;AACjB,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,mBAAmB,sCAAS;AAC5B;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,UAAU,sDAAyB;AACnC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH","sources":["webpack://data-experience/./src/components/chart/view/ChartViewOverviewHerTinder.vue?06f5","webpack://data-experience/src/components/chart/view/ChartViewOverviewHerTinder.vue","webpack://data-experience/./src/components/chart/view/ChartViewOverviewHerTinder.vue?e724","webpack://data-experience/./src/components/chart/view/ChartViewOverviewHerTinder.vue","webpack://data-experience/./src/components/chart/view/ChartViewVRowWebShare.vue?ea0d","webpack://data-experience/src/components/chart/view/ChartViewVRowWebShare.vue","webpack://data-experience/./src/components/chart/view/ChartViewVRowWebShare.vue?2101","webpack://data-experience/./src/components/chart/view/ChartViewVRowWebShare.vue","webpack://data-experience/./src/components/chart/view/filters/ChartViewFilters.vue?cff0","webpack://data-experience/src/components/chart/view/filters/ChartViewFilters.vue","webpack://data-experience/./src/components/chart/view/filters/ChartViewFilters.vue?e912","webpack://data-experience/./src/components/chart/view/filters/ChartViewFilters.vue","webpack://data-experience/./src/components/chart/view/mixin.js","webpack://data-experience/./src/components/chart/view/utils/dc-helpers.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('VContainer',[_c('ChartViewVRowWebShare',[_c('VCol',{attrs:{\"cols\":\"12\"}},[_c('VRow',[_c('VCol',{attrs:{\"cols\":\"12\",\"md\":\"8\"}},[_c('div',{attrs:{\"id\":`likes-chart-${_vm.graphId}`}},[_c('div',{staticStyle:{\"display\":\"flex\"}},[_c('strong',[_vm._v(\"Likes / Passes / Matches per month\")])])])]),_c('VCol',{attrs:{\"cols\":\"12\",\"md\":\"4\"}},[_c('div',{attrs:{\"id\":`app-chart-${_vm.graphId}`}},[_c('div',{staticStyle:{\"display\":\"flex\"}},[_c('strong',[_vm._v(\"App\")])]),_c('ChartViewFilters')],1)])],1),_c('VRow',[_c('VCol',{attrs:{\"cols\":\"12\",\"md\":\"8\"}},[_c('div',{attrs:{\"id\":`messages-chart-${_vm.graphId}`}},[_c('div',{staticStyle:{\"display\":\"flex\"}},[_c('strong',[_vm._v(\"Messages per month\")])])])]),_c('VCol',{attrs:{\"cols\":\"12\",\"md\":\"4\"}},[_c('div',{attrs:{\"id\":`sexualOrientations-chart-${_vm.graphId}`}},[_c('div',{staticStyle:{\"display\":\"flex\"}},[_c('strong',[_vm._v(\"Sexual Orientations\")])]),_c('ChartViewFilters')],1)])],1)],1)],1),_c('VRow',[_c('div',{staticClass:\"dc-data-count\",attrs:{\"id\":`dc-data-count-${_vm.graphId}`}})]),_c('VRow',[_c('VCol',{attrs:{\"cols\":\"12\"}},[_c('UnitFilterableTable',_vm._b({},'UnitFilterableTable',{ headers: _vm.header, items: _vm.results },false))],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <VContainer>\n    <ChartViewVRowWebShare>\n      <VCol cols=\"12\">\n        <VRow>\n          <VCol cols=\"12\" md=\"8\">\n            <div :id=\"`likes-chart-${graphId}`\">\n              <div style=\"display: flex\">\n                <strong>Likes / Passes / Matches per month</strong>\n              </div>\n            </div>\n          </VCol>\n          <VCol cols=\"12\" md=\"4\">\n            <div :id=\"`app-chart-${graphId}`\">\n              <div style=\"display: flex\">\n                <strong>App</strong>\n              </div>\n              <ChartViewFilters />\n            </div>\n          </VCol>\n        </VRow>\n        <VRow>\n          <VCol cols=\"12\" md=\"8\">\n            <div :id=\"`messages-chart-${graphId}`\">\n              <div style=\"display: flex\">\n                <strong>Messages per month</strong>\n              </div>\n            </div>\n          </VCol>\n          <VCol cols=\"12\" md=\"4\">\n            <div :id=\"`sexualOrientations-chart-${graphId}`\">\n              <div style=\"display: flex\">\n                <strong>Sexual Orientations</strong>\n              </div>\n              <ChartViewFilters />\n            </div>\n          </VCol>\n        </VRow>\n      </VCol>\n    </ChartViewVRowWebShare>\n    <VRow>\n      <div :id=\"`dc-data-count-${graphId}`\" class=\"dc-data-count\" />\n    </VRow>\n    <VRow>\n      <VCol cols=\"12\">\n        <UnitFilterableTable v-bind=\"{ headers: header, items: results }\" />\n      </VCol>\n    </VRow>\n  </VContainer>\n</template>\n\n<script>\nimport * as d3 from 'd3'\nimport * as dc from 'dc'\nimport crossfilter from 'crossfilter2'\nimport mixin from './mixin'\nimport { addPiePercentage } from './utils/dc-helpers'\nimport { isValidDate } from '@/utils/dates'\nimport ChartViewVRowWebShare from './ChartViewVRowWebShare.vue'\nimport ChartViewFilters from './filters/ChartViewFilters.vue'\nimport UnitFilterableTable from '@/components/unit/filterable-table/UnitFilterableTable.vue'\n\n// Remove warning on default colorscheme, even if not used..\ndc.config.defaultColors(d3.schemePaired)\n\nexport default {\n  components: { ChartViewVRowWebShare, ChartViewFilters, UnitFilterableTable },\n  mixins: [mixin],\n  props: {},\n  data() {\n    return {\n      header: [\n        { text: 'Date', value: 'dateStr' },\n        { text: 'App', value: 'app' },\n        { text: 'Likes', value: 'likes' },\n        { text: 'Passes', value: 'passes' },\n        { text: 'Messages sent', value: 'messagesSent' },\n        { text: 'Messages received', value: 'messagesReceived' },\n        { text: 'Matches', value: 'matches' },\n        { text: 'Sexual Orientation', value: 'sexualOrientations' },\n        { text: 'User ID', value: 'userId' }\n      ],\n      results: [],\n      colorPalette: ['#58539E', '#847CEB', '#605BAB', '#4A4685', '#9498F2']\n    }\n  },\n  methods: {\n    resetAll() {\n      dc.filterAll()\n      dc.renderAll()\n    },\n    decodeDefault(str) {\n      try {\n        return str && str !== 'undefined'\n          ? decodeURIComponent(escape(str))\n          : 'Unknown'\n      } catch (e) {\n        console.error(e)\n        return str || 'Unknown'\n      }\n    },\n    drawViz() {\n      // Parse and format data\n      const dateParser = d3.timeParse('%Y-%m-%d')\n      const dateFormatter = d3.timeFormat('%B, %Y')\n      this.results = this.values.map((d) => {\n        const date = dateParser(d.dateValue) || new Date(d.dateValue)\n        return {\n          date,\n          dateStr: d.dateValue,\n          month: d3.timeMonth(date),\n          day: d3.timeDay(date),\n          app: this.decodeDefault(d.app),\n          likes: +this.decodeDefault(d.likes) || 0,\n          passes: +this.decodeDefault(d.passes) || 0,\n          messagesSent: +this.decodeDefault(d.messagesSent) || 0,\n          messagesReceived: +this.decodeDefault(d.messagesReceived) || 0,\n          matches: +this.decodeDefault(d.matches) || 0,\n          sexualOrientations: d.app === 'tinder'\n            ? JSON.parse(d.sexualOrientations).join(' | ')\n            : this.decodeDefault(d.sexualOrientations),\n          userId: this.decodeDefault(d.userId)\n        }\n      })\n        .filter(d => isValidDate(d.date))\n      const ndx = crossfilter(this.results)\n      const likesChart = new dc.LineChart(`#likes-chart-${this.graphId}`)\n      const messagesChart = new dc.LineChart(`#messages-chart-${this.graphId}`)\n      const appChart = new dc.PieChart(`#app-chart-${this.graphId}`)\n      const orientationChart = new dc.PieChart(`#sexualOrientations-chart-${this.graphId}`)\n      // Bind reset filters buttons\n      d3.select(`#likes-chart-${this.graphId} a.reset`).on('click', function() {\n        likesChart.filterAll()\n        dc.redrawAll()\n      })\n      d3.select(`#messages-chart-${this.graphId} a.reset`).on('click', function() {\n        messagesChart.filterAll()\n        dc.redrawAll()\n      })\n      d3.select(`#app-chart-${this.graphId} a.reset`).on('click', function() {\n        appChart.filterAll()\n        dc.redrawAll()\n      })\n      d3.select(`#sexualOrientations-chart-${this.graphId} a.reset`).on('click', function() {\n        orientationChart.filterAll()\n        dc.redrawAll()\n      })\n      // Custom reduce function to get unique user ids per dimension\n      function add(p, d) {\n        if (d.userId in p.userIds) {\n          p.userIds[d.userId]++\n        } else {\n          p.userIds[d.userId] = 1\n        }\n        return p\n      }\n      function remove(p, d) {\n        p.userIds[d.userId]--\n        if (p.userIds[d.userId] === 0) {\n          delete p.userIds[d.userId]\n        }\n        return p\n      }\n      function init() {\n        return { userIds: {} }\n      }\n      // Create dimensions\n      const appDimension = ndx.dimension(d => d.app)\n      const orientDimension = ndx.dimension(d => d.sexualOrientations)\n      const dateDimension = ndx.dimension(d => d.month)\n      // Create groups\n      const appGroup = appDimension.group().reduce(add, remove, init)\n      const orientGroup = orientDimension.group().reduce(add, remove, init)\n      const likesGroup = dateDimension.group().reduceSum(d => d.likes)\n      const passesGroup = dateDimension.group().reduceSum(d => d.passes)\n      const matchesGroup = dateDimension.group().reduceSum(d => d.matches)\n      const msgSentGroup = dateDimension.group().reduceSum(d => d.messagesSent)\n      const msgRcvGroup = dateDimension\n        .group()\n        .reduceSum(d => d.messagesReceived)\n      const height = 250\n      // Render pie chart for app\n      let width = d3\n        .select(`#app-chart-${this.graphId}`)\n        .node()\n        .getBoundingClientRect().width\n      const scale = Math.min(width, height)\n      appChart\n        .width(width)\n        .height(height)\n        .slicesCap(10)\n        .radius(scale / 4)\n        .innerRadius(scale / 8)\n        .externalLabels(50)\n        .dimension(appDimension)\n        .group(appGroup)\n        .valueAccessor(d => Object.keys(d.value.userIds).length)\n        .title(d => d.key + ': ' + Object.keys(d.value.userIds).length + ' user(s)')\n        .drawPaths(true)\n        .minAngleForLabel(0.1)\n        .ordinalColors(this.colorPalette)\n      appChart.on('pretransition', addPiePercentage)\n      // Render pie chart for sexual orientation\n      width = d3\n        .select(`#sexualOrientations-chart-${this.graphId}`)\n        .node()\n        .getBoundingClientRect().width\n      orientationChart\n        .width(width)\n        .height(height)\n        .slicesCap(10)\n        .radius(scale / 4)\n        .innerRadius(scale / 8)\n        .externalLabels(50)\n        .dimension(orientDimension)\n        .group(orientGroup)\n        .valueAccessor(d => Object.keys(d.value.userIds).length)\n        .title(d => d.key + ': ' + Object.keys(d.value.userIds).length + ' user(s)')\n        .drawPaths(true)\n        .minAngleForLabel(0.1)\n        .ordinalColors(this.colorPalette)\n      orientationChart.on('pretransition', addPiePercentage)\n      // Render Likes / passes chart\n      const dateExtent = d3.extent(this.results, d => d.date)\n      width = d3\n        .select(`#likes-chart-${this.graphId}`)\n        .node()\n        .getBoundingClientRect().width\n      likesChart\n        .margins({ top: 20, left: 40, right: 20, bottom: 20 })\n        .width(width)\n        .turnOnControls(true)\n        .curve(d3.curveMonotoneX)\n        .xyTipsOn(true)\n        .height(height)\n        .brushOn(false)\n        .renderArea(true)\n        .dimension(dateDimension)\n        .group(likesGroup, 'Likes')\n        .x(d3.scaleTime().domain(dateExtent))\n        .title('Likes', d => `${dateFormatter(d.key)}: ${d.value} likes`)\n        .legend(new dc.Legend()\n          .x(width - 100)\n          .y(5)\n          .itemHeight(13)\n          .gap(5))\n        .elasticY(true)\n        .renderDataPoints({\n          radius: 3,\n          fillOpacity: 0.8,\n          strokeOpacity: 0\n        })\n        .clipPadding(10)\n        .yAxisLabel('Total ')\n        .ordinalColors(['#2ecc71', '#e74c3c', '#3498db'])\n      likesChart.xAxis().ticks(10)\n      likesChart.yAxis().ticks(6)\n      likesChart.stack(passesGroup, 'Passes')\n      likesChart.title('Passes', d => `${dateFormatter(d.key)}: ${d.value} passes`)\n      likesChart.stack(matchesGroup, 'Matches')\n      likesChart.title('Matches', d => `${dateFormatter(d.key)}: ${d.value} matches`)\n      // Render Messages chart\n      width = d3\n        .select(`#messages-chart-${this.graphId}`)\n        .node()\n        .getBoundingClientRect().width\n      messagesChart\n        .margins({ top: 20, left: 40, right: 20, bottom: 20 })\n        .width(width)\n        .turnOnControls(false)\n        .curve(d3.curveMonotoneX)\n        .xyTipsOn(true)\n        .height(height)\n        .brushOn(false)\n        .renderArea(true)\n        .dimension(dateDimension)\n        .group(msgSentGroup, 'Messages Sent')\n        .x(d3.scaleTime().domain(dateExtent))\n        .legend(new dc.Legend()\n          .x(width - 110)\n          .y(5)\n          .itemHeight(13)\n          .gap(5))\n        .elasticY(true)\n        .renderDataPoints({\n          radius: 3,\n          fillOpacity: 0.8,\n          strokeOpacity: 0\n        })\n        .clipPadding(10)\n        .yAxisLabel('Total ')\n        .ordinalColors(['#2c3e50', '#58539E'])\n      messagesChart.xAxis().ticks(10)\n      messagesChart.yAxis().ticks(6)\n      messagesChart.stack(msgRcvGroup, 'Messages Received')\n      messagesChart.title('Messages Received', d => `${dateFormatter(d.key)}: ${d.value} messages received`)\n      messagesChart.title('Messages Sent', d => `${dateFormatter(d.key)}: ${d.value} messages sent`)\n      // Render counter and table\n      const all = ndx.groupAll()\n      const allDim = ndx.dimension(d => d)\n      const tableCount = new dc.DataCount(`#dc-data-count-${this.graphId}`)\n      tableCount\n        .crossfilter(ndx)\n        .groupAll(all)\n        .html({\n          some: '<strong>%filter-count</strong> selected out of <strong>%total-count</strong> records' +\n                    \" | <a class='resetAll'>Reset All</a>\",\n          all: 'All <strong>%total-count</strong> records' +\n                    ' selected. Please click on the graph to apply filters.'\n        })\n        .on('pretransition', (chart, filter) => {\n          this.results = allDim.top(all.value())\n          d3.select(`#dc-data-count-${this.graphId} a.resetAll`).on('click', () => {\n            dc.filterAll()\n            dc.renderAll()\n          })\n        })\n      dc.renderAll()\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewOverviewHerTinder.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewOverviewHerTinder.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewOverviewHerTinder.vue?vue&type=template&id=7ccdf49e&\"\nimport script from \"./ChartViewOverviewHerTinder.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewOverviewHerTinder.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('VRow',_vm._b({ref:\"domToImageNode\"},'VRow',_vm.$attrs,false),[_vm._t(\"default\"),_c('VCol',{staticClass:\"dom-to-image-exclude\",attrs:{\"cols\":\"12\"}},[_c('BaseButton',_vm._b({attrs:{\"icon\":\"mdiExport\",\"text\":\"Export\"},on:{\"click\":_vm.exportImage}},'BaseButton',{ progress: _vm.progress, status: _vm.status, error: _vm.error },false)),_c('BaseButtonDownloadData',_vm._b({},'BaseButtonDownloadData',{ disabled: !_vm.blob, extension: _vm.extension, filename: _vm.filename, data: _vm.blob },false)),_c('BaseButtonShare',_vm._b({attrs:{\"file-share\":\"\"}},'BaseButtonShare',{ files: _vm.files, disabled: !_vm.files },false))],1)],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <VRow ref=\"domToImageNode\" v-bind=\"$attrs\">\n    <slot />\n    <VCol cols=\"12\" class=\"dom-to-image-exclude\">\n      <BaseButton\n        icon=\"mdiExport\"\n        text=\"Export\"\n        v-bind=\"{ progress, status, error }\"\n        @click=\"exportImage\"\n      />\n      <BaseButtonDownloadData\n        v-bind=\"{ disabled: !blob, extension, filename, data: blob }\"\n      />\n      <BaseButtonShare file-share v-bind=\"{ files, disabled: !files }\" />\n    </VCol>\n  </VRow>\n</template>\n\n<script>\nimport exportImageMixinFactory from '@/mixins/export-image-mixin-factory'\nimport BaseButton from '@/components/base/button/BaseButton.vue'\nimport BaseButtonDownloadData from '@/components/base/button/download/BaseButtonDownloadData.vue'\nimport BaseButtonShare from '@/components/base/button/BaseButtonShare.vue'\n\nexport default {\n  components: { BaseButton, BaseButtonDownloadData, BaseButtonShare },\n  mixins: [exportImageMixinFactory()]\n}\n</script>\n","import mod from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewVRowWebShare.vue?vue&type=template&id=53512c70&\"\nimport script from \"./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('p',{staticClass:\"filters\"},[_c('span',[_vm._v(\" \"+_vm._s(_vm.$t('Current filter'))+\" \"),_c('span',{staticClass:\"filter\"})]),_c('a',{directives:[{name:\"t\",rawName:\"v-t\",value:('reset'),expression:\"'reset'\"}],staticClass:\"reset\",staticStyle:{\"display\":\"none\"}})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <p class=\"filters\">\n    <span>\n      {{ $t('Current filter') }}\n      <span class=\"filter\" />\n    </span>\n    <a v-t=\"'reset'\" class=\"reset\" style=\"display: none\" />\n  </p>\n</template>\n\n<script>\nexport default {\n\n}\n</script>\n","import mod from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewFilters.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewFilters.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewFilters.vue?vue&type=template&id=2f9280d1&\"\nimport script from \"./ChartViewFilters.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewFilters.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { TextFilterWidget } from 'dc'\nimport { merge } from 'lodash-es'\n\nimport kViewBlockMixin from '@/mixins/k-view-block'\n\nconst mixin = {\n  props: {\n    values: {\n      type: Array,\n      default: () => []\n    },\n    headers: {\n      type: Array,\n      default: () => []\n    },\n    messages: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data() {\n    return {\n      graphId: 'graph_' + this._uid,\n      totalCount: 0,\n      filterCount: 0\n    }\n  },\n  mounted() {\n    this.drawViz()\n  },\n  watch: {\n    values() {\n      this.drawViz()\n    }\n  },\n  methods: {\n    drawViz() { },\n    createTextFilterWidget(parent, placeholder = 'Search') {\n      const widget = new TextFilterWidget(parent)\n      widget.placeHolder(this.$tev(placeholder, placeholder))\n      return widget\n    }\n  }\n}\n\nexport default merge(mixin, kViewBlockMixin)\n","import * as d3 from 'd3'\nimport * as dc from 'dc'\n\n// Functions to add x-label & y-label to Row Charts (Unsupported by dc.js)\n// https://www.intothevoid.io/data-visualization/row-chart-axis-labels-dc-js/\n// Use with:\n// contentChart.on('postRender', function (chart) {\n//  addXLabel(chart, 'Hours watched')\n// })\nexport function addXLabel(chartToUpdate, displayText) {\n  const textSelection = chartToUpdate\n    .svg()\n    .append('text')\n    .attr('class', 'x-axis-label')\n    .attr('text-anchor', 'middle')\n    .attr('x', chartToUpdate.width() / 2)\n    .attr('y', chartToUpdate.height() - 10)\n    .text(displayText)\n  const textDims = textSelection.node().getBBox()\n  const chartMargins = chartToUpdate.margins()\n\n  // Dynamically adjust positioning after reading text dimension from DOM\n  textSelection\n    .attr(\n      'x',\n      chartMargins.left +\n        (chartToUpdate.width() - chartMargins.left - chartMargins.right) / 2\n    )\n    .attr('y', chartToUpdate.height() - Math.ceil(textDims.height) / 2)\n}\nexport function addYLabel(chartToUpdate, displayText) {\n  const textSelection = chartToUpdate\n    .svg()\n    .append('text')\n    .attr('class', 'y-axis-label')\n    .attr('text-anchor', 'middle')\n    .attr('transform', 'rotate(-90)')\n    .attr('x', -chartToUpdate.height() / 2)\n    .attr('y', 10)\n    .text(displayText)\n  const textDims = textSelection.node().getBBox()\n  const chartMargins = chartToUpdate.margins()\n\n  // Dynamically adjust positioning after reading text dimension from DOM\n  textSelection\n    .attr(\n      'x',\n      -chartMargins.top -\n        (chartToUpdate.height() - chartMargins.top - chartMargins.bottom) / 2\n    )\n    .attr(\n      'y',\n      Math.max(\n        Math.ceil(textDims.height),\n        chartMargins.left - Math.ceil(textDims.height) - 5\n      )\n    )\n}\n\n/**\n * Transform a simple group to a cumulative one in order\n * to make cumulative line chart\n * @param {Crossfilter group} group the group to transform\n * @returns the cumulative group\n */\nexport function createCumulativeGroup(group) {\n  return {\n    all() {\n      const cumulate = {}\n      return group.all().map(function(d) {\n        if (cumulate[d.key[0]]) {\n          cumulate[d.key[0]] += d.value\n        } else {\n          cumulate[d.key[0]] = d.value\n        }\n        return { key: d.key, value: cumulate[d.key[0]] }\n      })\n    }\n  }\n}\n\n/**\n * Remove datapoints that are null in a crossfilter group\n * Used to hide empty bins in a bar graph\n * @param {Crossfilter group} group the group to transform\n * @returns the cleaned group\n */\nexport function removeEmptyBins(group) {\n  return {\n    top(n) {\n      return group\n        .top(Infinity)\n        .filter(function(d) {\n          return d.value.count !== 0 && d.value !== 0\n        })\n        .slice(0, n)\n    }\n  }\n}\n\nexport function addPiePercentage(chart) {\n  chart.selectAll('text.pie-slice.pie-label').call(function(t) {\n    t.each(function(d) {\n      const self = d3.select(this)\n      let text = self.text()\n      if (text.length > 14) { text = text.substring(0, 14) + '.. ' }\n      if (text.length > 0) {\n        text =\n          text +\n          ' (' +\n          dc.utils.printSingleValue(\n            ((d.endAngle - d.startAngle) / (2 * Math.PI)) * 100\n          ) +\n          '%)'\n      }\n      self.text(text)\n    })\n  })\n}\n"],"names":[],"sourceRoot":""}