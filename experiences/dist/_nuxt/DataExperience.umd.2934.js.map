{"version":3,"file":"DataExperience.umd.2934.js","mappings":";;;;;;;;;;;;;;;AAAA,+BAA+B,6BAA6B,kCAAkC,OAAO,mBAAmB,YAAY,GAAG;AACvI;AACA;;;;;;;;;;;;;;ACSwB;AACA;AACG;AACmC;;AAE9D;AACA,uBAAuB,CAAC,gBAAe;;AAEvC,sEAAe;AACf,gCAAgC;AAChC,WAAW,gBAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,WAAW;;AAEvC;AACA,MAAM,UAAS;AACf;AACA,QAAQ,YAAY;AACpB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,UAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAM,YAAY;AAClB;AACA;AACA,CAAC;;;AC3G6I,CAAC,yEAAe,iCAAG,EAAC;;;;ACA1E;AAC3B;AACL;;;AAGxD;AACA,CAA4G;AAC5G,gBAAgB,sCAAU;AAC1B,EAAE,oCAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,8CAAe;;;;;;;;;;;;;;;;AClBf,+BAA+B,6BAA6B,eAAe,sBAAsB,yEAAyE,qBAAqB,YAAY,aAAa,4DAA4D,mCAAmC,kBAAkB;AACzU;AACA;;;;;ACSA,6EAAe;;AAEf,CAAC;;;ACboJ,CAAC,qFAAe,wCAAG,EAAC;;;;ACA1E;AAC3B;AACL;;;AAG/D;AACA,CAA4G;AAC5G,gBAAgB,sCAAU;AAC1B,EAAE,gDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,qDAAe;;;;;;;;;AClBsB;;AAErC,+DAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,yBAAyB,gDAAgB;AACzC;AACA;AACA;AACA;AACA,CAAC","sources":["webpack://DataExperience/./src/components/chart/view/dc/WeekChart.vue?9796","webpack://DataExperience/src/components/chart/view/dc/WeekChart.vue","webpack://DataExperience/./src/components/chart/view/dc/WeekChart.vue?fbbd","webpack://DataExperience/./src/components/chart/view/dc/WeekChart.vue","webpack://DataExperience/./src/components/chart/view/filters/ChartViewFilters.vue?cff0","webpack://DataExperience/src/components/chart/view/filters/ChartViewFilters.vue","webpack://DataExperience/./src/components/chart/view/filters/ChartViewFilters.vue?e912","webpack://DataExperience/./src/components/chart/view/filters/ChartViewFilters.vue","webpack://DataExperience/./src/components/chart/view/dc/mixin.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('VContainer',[_c('div',{attrs:{\"id\":`week-chart-${_vm.graphId}`}},[(_vm.title)?_c('strong',[_vm._v(_vm._s(_vm.title))]):_c('strong',[_vm._v(\" \"+_vm._s(_vm.$tc('Day', 1)))]),_c('ChartViewFilters')],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <VContainer>\n    <div :id=\"`week-chart-${graphId}`\">\n      <strong v-if=\"title\">{{ title }}</strong>\n      <strong v-else> {{ $tc('Day', 1) }}</strong>\n      <ChartViewFilters />\n    </div>\n  </VContainer>\n</template>\n<script>\n\nimport * as d3 from 'd3'\nimport * as dc from 'dc'\nimport mixin from './mixin'\nimport ChartViewFilters from '../filters/ChartViewFilters.vue'\n\n// Remove warning on default colorscheme, even if not used..\ndc.config.defaultColors(d3.schemePaired)\n\nexport default {\n  components: { ChartViewFilters },\n  mixins: [mixin],\n  props: {\n    /**\n     * Column name of the {values} that represent date values\n     */\n    dateAccessor: {\n      type: String,\n      required: true\n    },\n    /**\n     * Format of the dates being processed, if not set will use the Date constructor\n     */\n    dateFormat: {\n      type: String,\n      default: ''\n    },\n    /**\n     * The value to consider in respect to the date, if not set, will take the number of records\n     */\n    valueAccessor: {\n      type: String,\n      default: ''\n    },\n    /**\n     * If one of {valueAccessor} is null, replace the value with a default\n     */\n    defaultValue: {\n      type: Number,\n      default: 0\n    }\n  },\n  data() {\n    return {\n      results: [],\n      weekDays: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n    }\n  },\n  computed: {\n    dateParser() {\n      if (this.dateFormat) {\n        return d3.timeParse(this.dateFormat)\n      } else {\n        return d => new Date(d)\n      }\n    }\n  },\n  methods: {\n    drawViz() {\n      // Create and bind charts to their respective divs\n      const weekChart = new dc.RowChart(`#week-chart-${this.graphId}`)\n\n      // Bind reset filters links\n      d3.select(`#week-chart-${this.graphId} a.reset`).on('click', function() {\n        weekChart.filterAll()\n        dc.redrawAll()\n      })\n\n      // Create dimension\n      const dayOfWeekDimension = this.ndx.dimension((d) => {\n        const day = this.dateParser(d[this.dateAccessor]).getDay()\n        return `${this.weekDays[day]}`\n      })\n\n      // Create the aggregation from the date dimension\n      const dayOfWeekGroup = this.valueAccessor ? dayOfWeekDimension.group().reduceSum(d => d[this.valueAccessor]) : dayOfWeekDimension.group().reduceCount()\n\n      // Render week chart\n      const width = d3.select(`#week-chart-${this.graphId}`).node().getBoundingClientRect().width\n      weekChart\n        .width(width)\n        .height(this.height)\n        .margins({ top: 10, left: 10, right: 10, bottom: 20 })\n        .group(dayOfWeekGroup)\n        .dimension(dayOfWeekDimension)\n        .ordinalColors(this.colorPalette)\n        .label(d => d.key)\n        .title(d => d.value)\n        .elasticX(true)\n        .xAxis()\n        .ticks(4)\n\n      weekChart.ordering(d => this.weekDays.indexOf(d.key))\n\n      dc.renderAll()\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./WeekChart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./WeekChart.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./WeekChart.vue?vue&type=template&id=1f4b6cbc&\"\nimport script from \"./WeekChart.vue?vue&type=script&lang=js&\"\nexport * from \"./WeekChart.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('p',{staticClass:\"filters\"},[_c('span',[_vm._v(\" \"+_vm._s(_vm.$t('Current filter'))+\" \"),_c('span',{staticClass:\"filter\"})]),_c('a',{directives:[{name:\"t\",rawName:\"v-t\",value:('reset'),expression:\"'reset'\"}],staticClass:\"reset\",staticStyle:{\"display\":\"none\"}})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <p class=\"filters\">\n    <span>\n      {{ $t('Current filter') }}\n      <span class=\"filter\" />\n    </span>\n    <a v-t=\"'reset'\" class=\"reset\" style=\"display: none\" />\n  </p>\n</template>\n\n<script>\nexport default {\n\n}\n</script>\n","import mod from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewFilters.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewFilters.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewFilters.vue?vue&type=template&id=2f9280d1&\"\nimport script from \"./ChartViewFilters.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewFilters.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { TextFilterWidget } from 'dc'\n\nexport default {\n  props: {\n    /**\n     * The crossfilter object that contains the values and filters\n     * e,g: crossfilter(this.results)\n     */\n    ndx: {\n      type: Object,\n      required: true\n    },\n    /**\n     * Title of the graph\n     */\n    title: {\n      type: String,\n      default: ''\n    },\n    /**\n     * Label to display in the axis\n     */\n    valueLabel: {\n      type: String,\n      default: 'records'\n    },\n    /**\n     * The height of the graph\n     * the width is dynamically computed from it's parent\n     */\n    height: {\n      type: Number,\n      default: 250\n    },\n    /**\n     * Position of the graph in the dashboard\n     * Determine the color to pick in colorPalette\n     */\n    position: {\n      type: Number,\n      required: true\n    },\n    /**\n     * Colors to use in the graph\n     * Default to Set 3: https://observablehq.com/@d3/color-schemes\n     */\n    colorPalette: {\n      type: Array,\n      default: () => ['#bebada', '#8dd3c7', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#bc80bd', '#ccebc5']\n    }\n    /**\n     '#58539E',\n        '#847CEB',\n        '#605BAB',\n        '#4A4685',\n        '#35325E'\n     */\n  },\n  data() {\n    return {\n      graphId: 'graph_' + this._uid\n    }\n  },\n  mounted() {\n    this.drawViz()\n  },\n  watch: {\n    values() {\n      this.drawViz()\n    }\n  },\n  methods: {\n    createTextFilterWidget(parent, placeholder = 'Search') {\n      const widget = new TextFilterWidget(parent)\n      widget.placeHolder(this.$t(placeholder))\n      return widget\n    }\n  }\n}\n"],"names":[],"sourceRoot":""}