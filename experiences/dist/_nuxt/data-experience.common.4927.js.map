{"version":3,"file":"data-experience.common.4927.js","mappings":";;;;;;;;;;;;;;;AAAA,+BAA+B,6BAA6B,kCAAkC,OAAO,kBAAkB,YAAY,GAAG,YAAY,aAAa,kBAAkB;AACjL;AACA;;;;;;;;;;;;;;;ACSwB;AACA;AAC8B;AAC3B;AACmC;;AAE9D;AACA,uBAAuB,CAAC,gBAAe;;AAEvC,qEAAe;AACf,gCAAgC;AAChC,WAAW,gBAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,WAAW;;AAEtC;AACA,MAAM,UAAS;AACf;AACA,QAAQ,YAAY;AACpB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,UACL;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM,gCAAgB;;AAEtB,MAAM,YAAY;AAClB;AACA;AACA,CAAC;;;AC7F4I,CAAC,wEAAe,gCAAG,EAAC;;ACAjK;;;;;;;AEAmG;AACvC;AACL;AACvD,CAAiG;;;AAGjG;AAC4G;AAC5G,gBAAgB,sCAAU;AAC1B,EAAE,mCAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,6CAAe;;;;;;;;;;;;;;;;ACnBf,+BAA+B,6BAA6B,eAAe,sBAAsB,yEAAyE,qBAAqB,YAAY,aAAa,4DAA4D,mCAAmC,kBAAkB;AACzU;AACA;;;;;ACSA,6EAAe;;AAEf,CAAC;;;ACboJ,CAAC,qFAAe,wCAAG,EAAC;;;;ACA1E;AAC3B;AACL;;;AAG/D;AACA,CAA4G;AAC5G,gBAAgB,sCAAU;AAC1B,EAAE,gDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,qDAAe;;;;;;;;;;AClBsB;;AAErC,+DAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,yBAAyB,gDAAgB;AACzC;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;;AC9EuB;AACA;;AAExB;AACA;AACA;AACA;AACA;AACA,IAAI;AACG;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,iBAAiB;AACjB,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,mBAAmB,sCAAS;AAC5B;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,UAAU,sDAAyB;AACnC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH","sources":["webpack://data-experience/./src/components/chart/view/dc/PieChart.vue?e784","webpack://data-experience/src/components/chart/view/dc/PieChart.vue","webpack://data-experience/./src/components/chart/view/dc/PieChart.vue?a62a","webpack://data-experience/./src/components/chart/view/dc/PieChart.vue?05a7","webpack://data-experience/./src/components/chart/view/dc/PieChart.vue?1486","webpack://data-experience/./src/components/chart/view/dc/PieChart.vue","webpack://data-experience/./src/components/chart/view/filters/ChartViewFilters.vue?cff0","webpack://data-experience/src/components/chart/view/filters/ChartViewFilters.vue","webpack://data-experience/./src/components/chart/view/filters/ChartViewFilters.vue?e912","webpack://data-experience/./src/components/chart/view/filters/ChartViewFilters.vue","webpack://data-experience/./src/components/chart/view/dc/mixin.js","webpack://data-experience/./src/components/chart/view/utils/dc-helpers.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('VContainer',[_c('div',{attrs:{\"id\":`pie-chart-${_vm.graphId}`}},[_c('div',{staticStyle:{\"display\":\"flex\"}},[_c('strong',[_vm._v(_vm._s(_vm.title))])]),_c('ChartViewFilters')],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <VContainer>\n    <div :id=\"`pie-chart-${graphId}`\">\n      <div style=\"display: flex\">\n        <strong>{{ title }}</strong>\n      </div>\n      <ChartViewFilters />\n    </div>\n  </VContainer>\n</template>\n<script>\nimport * as d3 from 'd3'\nimport * as dc from 'dc'\nimport { addPiePercentage } from '../utils/dc-helpers'\nimport mixin from './mixin'\nimport ChartViewFilters from '../filters/ChartViewFilters.vue'\n\n// Remove warning on default colorscheme, even if not used..\ndc.config.defaultColors(d3.schemePaired)\n\nexport default {\n  components: { ChartViewFilters },\n  mixins: [mixin],\n  props: {\n    /**\n     * Column name of the {values} to be displayed/compared in the graph\n     */\n    valueAccessor: {\n      type: String,\n      required: true\n    },\n    /**\n     * If defined, calculates the sum of the column named {sumAccessor} over {valueAccessor}.\n     * Otherwise, takes the count of the unique {valueAccessor}.\n     */\n    sumAccessor: {\n      type: String,\n      default: ''\n    },\n    /**\n     * If one of {valueAccessor} is null, replace the value with a default\n     */\n    defaultValue: {\n      type: String,\n      default: 'N/A'\n    }\n  },\n  data() {\n    return {}\n  },\n  methods: {\n    drawViz() {\n      // Init top row chart & search\n      const pieChart = new dc.PieChart(`#pie-chart-${this.graphId}`)\n\n      // Bind reset filters link\n      d3.select(`#pie-chart-${this.graphId} a.reset`).on('click', function() {\n        pieChart.filterAll()\n        dc.redrawAll()\n      })\n\n      // Create dimensions\n      const pieDimension = this.ndx.dimension(d => d[this.valueAccessor] || this.defaultValue)\n\n      // Create group\n      const pieGroup = this.sumAccessor ? pieDimension.group().reduceSum(d => d[this.sumAccessor]) : pieDimension.group().reduceCount()\n\n      // Render pie chart\n      const width = d3\n        .select(`#pie-chart-${this.graphId}`)\n        .node()\n        .getBoundingClientRect().width\n      const scale = Math.min(width, this.height)\n      pieChart\n        .width(width)\n        .height(this.height)\n        .slicesCap(8)\n        .radius(scale / 4)\n        .innerRadius(scale / 8)\n        .externalLabels(40)\n        .dimension(pieDimension)\n        .group(pieGroup)\n        .valueAccessor(d => d.value)\n        .title(d => `${d.key}: ${d.value} ${this.valueLabel}`)\n        .drawPaths(true)\n        .minAngleForLabel(0)\n        .ordinalColors(this.colorPalette)\n\n      addPiePercentage(pieChart)\n\n      dc.renderAll()\n    }\n  }\n}\n</script>\n<style scoped>\n::v-deep .dc-text-filter-input {\n  background: none;\n  color: #596471;\n  border-bottom: 1px solid #596471;\n  outline: none;\n}\n</style>\n","import mod from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./PieChart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./PieChart.vue?vue&type=script&lang=js&\"","// extracted by mini-css-extract-plugin\nexport {};","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-12.use[0]!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-12.use[1]!../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-12.use[2]!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./PieChart.vue?vue&type=style&index=0&id=65e52735&prod&scoped=true&lang=css&\"","import { render, staticRenderFns } from \"./PieChart.vue?vue&type=template&id=65e52735&scoped=true&\"\nimport script from \"./PieChart.vue?vue&type=script&lang=js&\"\nexport * from \"./PieChart.vue?vue&type=script&lang=js&\"\nimport style0 from \"./PieChart.vue?vue&type=style&index=0&id=65e52735&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"65e52735\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('p',{staticClass:\"filters\"},[_c('span',[_vm._v(\" \"+_vm._s(_vm.$t('Current filter'))+\" \"),_c('span',{staticClass:\"filter\"})]),_c('a',{directives:[{name:\"t\",rawName:\"v-t\",value:('reset'),expression:\"'reset'\"}],staticClass:\"reset\",staticStyle:{\"display\":\"none\"}})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <p class=\"filters\">\n    <span>\n      {{ $t('Current filter') }}\n      <span class=\"filter\" />\n    </span>\n    <a v-t=\"'reset'\" class=\"reset\" style=\"display: none\" />\n  </p>\n</template>\n\n<script>\nexport default {\n\n}\n</script>\n","import mod from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewFilters.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewFilters.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewFilters.vue?vue&type=template&id=2f9280d1&\"\nimport script from \"./ChartViewFilters.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewFilters.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { TextFilterWidget } from 'dc'\n\nexport default {\n  props: {\n    /**\n     * The crossfilter object that contains the values and filters\n     * e,g: crossfilter(this.results)\n     */\n    ndx: {\n      type: Object,\n      required: true\n    },\n    /**\n     * Title of the graph\n     */\n    title: {\n      type: String,\n      default: ''\n    },\n    /**\n     * Label to display in the axis\n     */\n    valueLabel: {\n      type: String,\n      default: 'records'\n    },\n    /**\n     * The height of the graph\n     * the width is dynamically computed from it's parent\n     */\n    height: {\n      type: Number,\n      default: 250\n    },\n    /**\n     * Position of the graph in the dashboard\n     * Determine the color to pick in colorPalette\n     */\n    position: {\n      type: Number,\n      required: true\n    },\n    /**\n     * Colors to use in the graph\n     * Default to Set 3: https://observablehq.com/@d3/color-schemes\n     */\n    colorPalette: {\n      type: Array,\n      default: () => ['#bebada', '#8dd3c7', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#bc80bd', '#ccebc5']\n    }\n    /**\n     '#58539E',\n        '#847CEB',\n        '#605BAB',\n        '#4A4685',\n        '#35325E'\n     */\n  },\n  data() {\n    return {\n      graphId: 'graph_' + this._uid\n    }\n  },\n  mounted() {\n    this.drawViz()\n  },\n  watch: {\n    values() {\n      this.drawViz()\n    }\n  },\n  methods: {\n    createTextFilterWidget(parent, placeholder = 'Search') {\n      const widget = new TextFilterWidget(parent)\n      widget.placeHolder(this.$t(placeholder))\n      return widget\n    }\n  }\n}\n","import * as d3 from 'd3'\nimport * as dc from 'dc'\n\n// Functions to add x-label & y-label to Row Charts (Unsupported by dc.js)\n// https://www.intothevoid.io/data-visualization/row-chart-axis-labels-dc-js/\n// Use with:\n// contentChart.on('postRender', function (chart) {\n//  addXLabel(chart, 'Hours watched')\n// })\nexport function addXLabel(chartToUpdate, displayText) {\n  const textSelection = chartToUpdate\n    .svg()\n    .append('text')\n    .attr('class', 'x-axis-label')\n    .attr('text-anchor', 'middle')\n    .attr('x', chartToUpdate.width() / 2)\n    .attr('y', chartToUpdate.height() - 10)\n    .text(displayText)\n  const textDims = textSelection.node().getBBox()\n  const chartMargins = chartToUpdate.margins()\n\n  // Dynamically adjust positioning after reading text dimension from DOM\n  textSelection\n    .attr(\n      'x',\n      chartMargins.left +\n        (chartToUpdate.width() - chartMargins.left - chartMargins.right) / 2\n    )\n    .attr('y', chartToUpdate.height() - Math.ceil(textDims.height) / 2)\n}\nexport function addYLabel(chartToUpdate, displayText) {\n  const textSelection = chartToUpdate\n    .svg()\n    .append('text')\n    .attr('class', 'y-axis-label')\n    .attr('text-anchor', 'middle')\n    .attr('transform', 'rotate(-90)')\n    .attr('x', -chartToUpdate.height() / 2)\n    .attr('y', 10)\n    .text(displayText)\n  const textDims = textSelection.node().getBBox()\n  const chartMargins = chartToUpdate.margins()\n\n  // Dynamically adjust positioning after reading text dimension from DOM\n  textSelection\n    .attr(\n      'x',\n      -chartMargins.top -\n        (chartToUpdate.height() - chartMargins.top - chartMargins.bottom) / 2\n    )\n    .attr(\n      'y',\n      Math.max(\n        Math.ceil(textDims.height),\n        chartMargins.left - Math.ceil(textDims.height) - 5\n      )\n    )\n}\n\n/**\n * Transform a simple group to a cumulative one in order\n * to make cumulative line chart\n * @param {Crossfilter group} group the group to transform\n * @returns the cumulative group\n */\nexport function createCumulativeGroup(group) {\n  return {\n    all() {\n      const cumulate = {}\n      return group.all().map(function(d) {\n        if (cumulate[d.key[0]]) {\n          cumulate[d.key[0]] += d.value\n        } else {\n          cumulate[d.key[0]] = d.value\n        }\n        return { key: d.key, value: cumulate[d.key[0]] }\n      })\n    }\n  }\n}\n\n/**\n * Remove datapoints that are null in a crossfilter group\n * Used to hide empty bins in a bar graph\n * @param {Crossfilter group} group the group to transform\n * @returns the cleaned group\n */\nexport function removeEmptyBins(group) {\n  return {\n    top(n) {\n      return group\n        .top(Infinity)\n        .filter(function(d) {\n          return d.value.count !== 0 && d.value !== 0\n        })\n        .slice(0, n)\n    }\n  }\n}\n\nexport function addPiePercentage(chart) {\n  chart.selectAll('text.pie-slice.pie-label').call(function(t) {\n    t.each(function(d) {\n      const self = d3.select(this)\n      let text = self.text()\n      if (text.length > 14) { text = text.substring(0, 14) + '.. ' }\n      if (text.length > 0) {\n        text =\n          text +\n          ' (' +\n          dc.utils.printSingleValue(\n            ((d.endAngle - d.startAngle) / (2 * Math.PI)) * 100\n          ) +\n          '%)'\n      }\n      self.text(text)\n    })\n  })\n}\n"],"names":[],"sourceRoot":""}