{"version":3,"file":"data-experience.common.552.js","mappings":";;;;;;;;;;;;;;;AAAA,+BAA+B,6BAA6B,+DAA+D,OAAO,aAAa,wBAAwB,OAAO,sBAAsB,YAAY,OAAO,qBAAqB,aAAa,yCAAyC,gDAAgD,uCAAuC,iCAAiC,kCAAkC,sDAAsD,OAAO,sBAAsB,YAAY,OAAO,sBAAsB,YAAY,aAAa,kBAAkB,aAAa,yCAAyC,+CAA+C,0BAA0B,OAAO,uBAAuB,6DAA6D,OAAO,sBAAsB,YAAY,OAAO,yBAAyB,aAAa,yCAAyC,oDAAoD,0CAA0C,OAAO,sBAAsB,YAAY,OAAO,mBAAmB,YAAY,aAAa,kBAAkB,aAAa,yCAAyC,sDAAsD,0BAA0B,OAAO,oBAAoB,8CAA8C,OAAO,sBAAsB,YAAY,OAAO,oBAAoB,YAAY,aAAa,kBAAkB,aAAa,yCAAyC,0DAA0D,0BAA0B,OAAO,qBAAqB,4DAA4D,mCAAmC,sBAAsB,kCAAkC,OAAO,aAAa,oCAAoC,yBAAyB,yCAAyC;AAC73D;AACA;;;;;;;;;;;;;;;;;;;;;ACiEwB;AACA;AACc;AACX;AACoC;AACmB;AACrB;AAC+B;;AAE5F;AACA,uBAAuB,CAAC,yBAAe;;AAEvC,qFAAe;AACf;AACA,qCAAqC,gEAA8B,2DAAkB,kDAAqB;AAC1G,WAAW,gBAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,YAAY;AAC1C,6BAA6B,WAAW;AACxC,6BAA6B,YAAY;AACzC,+BAA+B,WAAW;AAC1C,kCAAkC,WAAW;AAC7C,4BAA4B,WAAW;AACvC,6BAA6B,WAAW;AACxC;AACA;AACA;AACA;AACA,MAAM,kBAAS;AACf;AACA;AACA,QAAQ,YAAY;AACpB;AACA,MAAM,kBAAS;AACf;AACA,QAAQ,YAAY;AACpB;AACA,MAAM,kBAAS;AACf;AACA,QAAQ,YAAY;AACpB;AACA,MAAM,kBAAS;AACf;AACA,QAAQ,YAAY;AACpB;AACA,MAAM,kBAAS;AACf;AACA,QAAQ,YAAY;AACpB;AACA;AACA;AACA;AACA,+BAA+B,sBAAY;AAC3C,yBAAyB,uBAAa;AACtC;AACA;AACA;AACA;AACA;AACA,gBAAgB,oBAAU;AAC1B;AACA;AACA;AACA,sBAAsB,gBAAM;AAC5B;AACA;AACA,sBAAsB,gBAAM;AAC5B;AACA;AACA;AACA,kBAAkB,uBAAW;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAY;AACvB;AACA;AACA,eAAe,gCAAgB;AAC/B;AACA,gBAAgB,qBAAW;AAC3B;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBACL;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,uBAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,kBAAS;AACnB,YAAY,YAAY;AACxB,YAAY,YAAY;AACxB;AACA;AACA,MAAM,YAAY;AAClB;AACA;AACA,CAAC;;;AChYyJ,CAAC,0FAAe,gDAAG,EAAC;;;;ACAvE;AAC3B;AACL;;;AAGvE;AACA,CAAyG;AACzG,gBAAgB,sCAAU;AAC1B,EAAE,qDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,6DAAe;;;;;;;;;;;;;;;;AClBf,+BAA+B,6BAA6B,yBAAyB,qBAAqB,wDAAwD,0CAA0C,aAAa,0BAA0B,OAAO,mCAAmC,KAAK,yBAAyB,gBAAgB,8DAA8D,8CAA8C,4BAA4B,uFAAuF,sCAAsC,OAAO,iBAAiB,qBAAqB,wCAAwC;AACrqB;AACA;;;;;;;;;;;;;ACiByE;AACT;AACiC;AACvB;;AAE1E,kFAAe;AACf,0BAA0B,mDAAwB,wDAAiB;AACnE,WAAW,6CAAuB;AAClC,CAAC;;;AC3BsJ,CAAC,uFAAe,6CAAG,EAAC;;;;ACAvE;AAC3B;AACL;;;AAGpE;AACA,CAAyG;AACzG,gBAAgB,sCAAU;AAC1B,EAAE,kDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,0DAAe;;;;;;;;;;;;;;;;AClBf,+BAA+B,6BAA6B,eAAe,sBAAsB,yEAAyE,qBAAqB,YAAY,aAAa,4DAA4D,mCAAmC,kBAAkB;AACzU;AACA;;;;;ACSA,6EAAe;;AAEf,CAAC;;;ACboJ,CAAC,qFAAe,wCAAG,EAAC;;;;ACA1E;AAC3B;AACL;;;AAG/D;AACA,CAA4G;AAC5G,gBAAgB,sCAAU;AAC1B,EAAE,gDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,qDAAe;;;;;;;;;;;;;;;;AClBf,+BAA+B,6BAA6B,eAAe,yDAAyD,aAAa,UAAU,iDAAiD;AAC5M;AACA;;;;;;ACF2G;AAC3G;;;AAGA;AACA,CAA4G;AAC5G,gBAAgB,sCAAU;AAC1B;AACA,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe;;;;;;;;;;;;ACjBsB;AACJ;AACjC;AACmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB;AACxB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,iBAAiB;AACjB;AACA,yBAAyB,gDAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,+DAAe,8DAAK,QAAQ,qEAAe,CAAC","sources":["webpack://data-experience/./src/components/chart/view/ChartViewOverviewTwitter.vue?1de2","webpack://data-experience/src/components/chart/view/ChartViewOverviewTwitter.vue","webpack://data-experience/./src/components/chart/view/ChartViewOverviewTwitter.vue?7372","webpack://data-experience/./src/components/chart/view/ChartViewOverviewTwitter.vue","webpack://data-experience/./src/components/chart/view/ChartViewVRowWebShare.vue?ea0d","webpack://data-experience/src/components/chart/view/ChartViewVRowWebShare.vue","webpack://data-experience/./src/components/chart/view/ChartViewVRowWebShare.vue?2101","webpack://data-experience/./src/components/chart/view/ChartViewVRowWebShare.vue","webpack://data-experience/./src/components/chart/view/filters/ChartViewFilters.vue?cff0","webpack://data-experience/src/components/chart/view/filters/ChartViewFilters.vue","webpack://data-experience/./src/components/chart/view/filters/ChartViewFilters.vue?e912","webpack://data-experience/./src/components/chart/view/filters/ChartViewFilters.vue","webpack://data-experience/./src/components/chart/view/text/ChartViewTextSelectTimeRange.vue?13ad","webpack://data-experience/./src/components/chart/view/text/ChartViewTextSelectTimeRange.vue","webpack://data-experience/./src/components/chart/view/mixin.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('VContainer',[_c('ChartViewVRowWebShare',[_c('VCol',{attrs:{\"cols\":\"12\"}},[_c('VRow',[_c('VCol',{attrs:{\"cols\":\"12\",\"sm\":\"8\"}},[_c('div',{attrs:{\"id\":\"volume-chart\"}},[_c('span',{staticClass:\"font-weight-bold\",domProps:{\"textContent\":_vm._s(_vm.messages['ads-time'])}}),_c('ChartViewFilters')],1),_c('div',{staticClass:\"range-chart\",attrs:{\"id\":'range-chart' + _vm.graphId}},[_c('ChartViewTextSelectTimeRange')],1)]),_c('VCol',{attrs:{\"cols\":\"12\",\"sm\":\"4\"}},[_c('div',{attrs:{\"id\":\"company-chart\"}},[_c('div',{staticStyle:{\"display\":\"flex\"}},[_c('span',{staticClass:\"font-weight-bold\",domProps:{\"textContent\":_vm._s(_vm.messages['top-adv'])}}),_c('VSpacer'),_c('div',{attrs:{\"id\":\"company-search\"}})],1),_c('ChartViewFilters')],1)])],1),_c('VRow',[_c('VCol',{attrs:{\"cols\":\"12\",\"sm\":\"4\"}},[_c('div',{attrs:{\"id\":\"engagement-chart\"}},[_c('span',{staticClass:\"font-weight-bold\",domProps:{\"textContent\":_vm._s(_vm.messages['interactions'])}}),_c('ChartViewFilters')],1)]),_c('VCol',{attrs:{\"cols\":\"12\",\"sm\":\"4\"}},[_c('div',{attrs:{\"id\":\"type-chart\"}},[_c('div',{staticStyle:{\"display\":\"flex\"}},[_c('span',{staticClass:\"font-weight-bold\",domProps:{\"textContent\":_vm._s(_vm.messages['targeting-type'])}}),_c('VSpacer'),_c('div',{attrs:{\"id\":\"type-search\"}})],1),_c('ChartViewFilters')],1)]),_c('VCol',{attrs:{\"cols\":\"12\",\"sm\":\"4\"}},[_c('div',{attrs:{\"id\":\"value-chart\"}},[_c('div',{staticStyle:{\"display\":\"flex\"}},[_c('span',{staticClass:\"font-weight-bold\",domProps:{\"textContent\":_vm._s(_vm.messages['targeting-criteria'])}}),_c('VSpacer'),_c('div',{attrs:{\"id\":\"value-search\"}})],1),_c('ChartViewFilters')],1)])],1),_c('VRow',[_c('div',{staticClass:\"dc-data-count\",attrs:{\"id\":\"dc-data-count\"}})])],1)],1),_c('VRow',[_c('VCol',{attrs:{\"cols\":\"12\"}},[_c('UnitFilterableTable',_vm._b({},'UnitFilterableTable',{ headers: _vm.header, items: _vm.results },false))],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <VContainer>\r\n    <ChartViewVRowWebShare>\r\n      <VCol cols=\"12\">\r\n        <VRow>\r\n          <VCol cols=\"12\" sm=\"8\">\r\n            <div id=\"volume-chart\">\r\n              <span class=\"font-weight-bold\" v-text=\"messages['ads-time']\" />\r\n              <ChartViewFilters />\r\n            </div>\r\n            <div :id=\"'range-chart' + graphId\" class=\"range-chart\">\r\n              <ChartViewTextSelectTimeRange />\r\n            </div>\r\n          </VCol>\r\n          <VCol cols=\"12\" sm=\"4\">\r\n            <div id=\"company-chart\">\r\n              <div style=\"display: flex\">\r\n                <span class=\"font-weight-bold\" v-text=\"messages['top-adv']\" />\r\n                <VSpacer />\r\n                <div id=\"company-search\" />\r\n              </div>\r\n              <ChartViewFilters />\r\n            </div>\r\n          </VCol>\r\n        </VRow>\r\n        <VRow>\r\n          <VCol cols=\"12\" sm=\"4\">\r\n            <div id=\"engagement-chart\">\r\n              <span class=\"font-weight-bold\" v-text=\"messages['interactions']\" />\r\n              <ChartViewFilters />\r\n            </div>\r\n          </VCol>\r\n          <VCol cols=\"12\" sm=\"4\">\r\n            <div id=\"type-chart\">\r\n              <div style=\"display: flex\">\r\n                <span class=\"font-weight-bold\" v-text=\"messages['targeting-type']\" />\r\n                <VSpacer />\r\n                <div id=\"type-search\" />\r\n              </div>\r\n              <ChartViewFilters />\r\n            </div>\r\n          </VCol>\r\n          <VCol cols=\"12\" sm=\"4\">\r\n            <div id=\"value-chart\">\r\n              <div style=\"display: flex\">\r\n                <span class=\"font-weight-bold\" v-text=\"messages['targeting-criteria']\" />\r\n                <VSpacer />\r\n                <div id=\"value-search\" />\r\n              </div>\r\n              <ChartViewFilters />\r\n            </div>\r\n          </VCol>\r\n        </VRow>\r\n        <VRow>\r\n          <div id=\"dc-data-count\" class=\"dc-data-count\" />\r\n        </VRow>\r\n      </VCol>\r\n    </ChartViewVRowWebShare>\r\n    <VRow>\r\n      <VCol cols=\"12\">\r\n        <UnitFilterableTable v-bind=\"{ headers: header, items: results }\" />\r\n      </VCol>\r\n    </VRow>\r\n  </VContainer>\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from 'd3'\r\nimport * as dc from 'dc'\r\nimport crossfilter from 'crossfilter2'\r\nimport mixin from './mixin'\r\nimport ChartViewVRowWebShare from './ChartViewVRowWebShare.vue'\r\nimport ChartViewTextSelectTimeRange from './text/ChartViewTextSelectTimeRange.vue'\r\nimport ChartViewFilters from './filters/ChartViewFilters.vue'\r\nimport UnitFilterableTable from '@/components/unit/filterable-table/UnitFilterableTable.vue'\r\n\r\n// Remove warning on default colorscheme, even if not used..\r\ndc.config.defaultColors(d3.schemePaired)\r\n\r\nexport default {\r\n  name: 'ChartViewOverviewTwitter',\r\n  components: { ChartViewVRowWebShare, ChartViewTextSelectTimeRange, ChartViewFilters, UnitFilterableTable },\r\n  mixins: [mixin],\r\n  data() {\r\n    return {\r\n      header: [\r\n        { text: 'Tweet ID', value: 'tweetId' },\r\n        { text: 'Company', value: 'companyName' },\r\n        { text: 'Date', value: 'date_' },\r\n        { text: 'Promoted Tweet', value: 'url' },\r\n        { text: 'Engagement', value: 'engagedWith' },\r\n        { text: 'Targeting Criteria', value: 'count' }\r\n      ],\r\n      results: []\r\n    }\r\n  },\r\n  methods: {\r\n    drawViz() {\r\n      this.results = this.values\r\n      // Define a color palette for the viz\r\n      const colorPalette = [\r\n        '#0D4B7A',\r\n        // '#0B2B38',\r\n        '#248EB8',\r\n        '#7FCEF0',\r\n        '#4A659E'\r\n      ]\r\n      // Create and bind charts to their respective divs\r\n      const volumeChart = new dc.LineChart('#volume-chart')\r\n      const rangeChart = new dc.BarChart('#range-chart' + this.graphId)\r\n      const tableCount = new dc.DataCount('.dc-data-count')\r\n      const companyChart = new dc.RowChart('#company-chart')\r\n      const engagementChart = new dc.PieChart('#engagement-chart')\r\n      const typeChart = new dc.RowChart('#type-chart')\r\n      const valueChart = new dc.RowChart('#value-chart')\r\n      const companySearch = this.createTextFilterWidget('#company-search')\r\n      const typeSearch = this.createTextFilterWidget('#type-search')\r\n      const valueSearch = this.createTextFilterWidget('#value-search')\r\n      // Bind reset filters links\r\n      d3.select('#volume-chart p a.reset').on('click', function() {\r\n        rangeChart.filterAll()\r\n        volumeChart.filterAll()\r\n        dc.redrawAll()\r\n      })\r\n      d3.select('#company-chart p a.reset').on('click', function() {\r\n        companyChart.filterAll()\r\n        dc.redrawAll()\r\n      })\r\n      d3.select('#engagement-chart p a.reset').on('click', function() {\r\n        engagementChart.filterAll()\r\n        dc.redrawAll()\r\n      })\r\n      d3.select('#type-chart p a.reset').on('click', function() {\r\n        typeChart.filterAll()\r\n        dc.redrawAll()\r\n      })\r\n      d3.select('#value-chart p a.reset').on('click', function() {\r\n        valueChart.filterAll()\r\n        dc.redrawAll()\r\n      })\r\n      // Format data to correct types\r\n      // const dateFormatParser = d3.timeParse('%Q')\r\n      // 2021-06-04 21:08:08\r\n      const dateFormatParser = d3.timeParse('%Y-%m-%d %H:%M:%S')\r\n      const formatTime = d3.timeFormat('%B %d, %Y')\r\n      this.results.forEach((d) => {\r\n        d.targetingType = d.targetingType ? d.targetingType : 'Unknown'\r\n        d.targetingValue = d.targetingValue ? d.targetingValue : 'Unknown'\r\n        d.companyName = d.companyName ? d.companyName : ''\r\n        d.dateParsed = dateFormatParser(d.date_)\r\n        d.day = d3.timeDay(d.dateParsed) // pre-calculate days for better performance\r\n        d.dateStr = formatTime(d.dateParsed)\r\n        d.url = 'https://twitter.com/x/status/' + d.tweetId\r\n      })\r\n      const minDate = d3.min(this.results, function(d) {\r\n        return d.day\r\n      })\r\n      const maxDate = d3.max(this.results, function(d) {\r\n        return d.day\r\n      })\r\n      // Build index crossfilter\r\n      const ndx = crossfilter(this.results)\r\n      const all = ndx.groupAll()\r\n      // Create dimensions\r\n      const adPerDayDimension = ndx.dimension(d => d.day)\r\n      const companyDimension = ndx.dimension(d => d.companyName)\r\n      const engagementDimension = ndx.dimension(d => this.$t(d.engagedWith))\r\n      const targetingTypeDimension = ndx.dimension(d => d.targetingType)\r\n      const targetingValueDimension = ndx.dimension(d => d.targetingValue)\r\n      companySearch.dimension(ndx.dimension(d => d.companyName.toLowerCase()))\r\n      typeSearch.dimension(ndx.dimension(d => d.targetingType.toLowerCase()))\r\n      valueSearch.dimension(ndx.dimension(d => d.targetingValue.toLowerCase()))\r\n      // custom reduce function for grouping by ad and not targeting criteria\r\n      const init = () => ({\r\n        // initial\r\n        count: 0,\r\n        dict: {}\r\n      })\r\n      const addRecord = (p, v) => {\r\n        // add\r\n        p.dict[v.tweetId + v.date_] = (p.dict[v.tweetId + v.date_] || 0) + 1\r\n        if (p.dict[v.tweetId + v.date_] === 1) {\r\n          p.count++\r\n        }\r\n        return p\r\n      }\r\n      const removeRecord = (p, v) => {\r\n        // remove\r\n        p.dict[v.tweetId + v.date_] -= 1\r\n        if (p.dict[v.tweetId + v.date_] === 0) {\r\n          p.count--\r\n        }\r\n        return p\r\n      }\r\n      function orderValue(p) {\r\n        return p.count\r\n      }\r\n      // Create groups from dimension\r\n      const adPerDayGroup = adPerDayDimension\r\n        .group()\r\n        .reduce(addRecord, removeRecord, init)\r\n        .order(orderValue)\r\n      const companyGroup = companyDimension\r\n        .group()\r\n        .reduce(addRecord, removeRecord, init)\r\n        .order(orderValue)\r\n      const engagementGroup = engagementDimension\r\n        .group()\r\n        .reduce(addRecord, removeRecord, init)\r\n        .order(orderValue)\r\n      const allGroup = all.reduce(addRecord, removeRecord, init)\r\n      const targetingTypeGroup = targetingTypeDimension.group().reduceCount()\r\n      const targetingValueGroup = targetingValueDimension.group().reduceCount()\r\n      // Make a Fake group to display only value above 0 on the row graphs\r\n      function removeEmptyBins(group) {\r\n        return {\r\n          top(n) {\r\n            return group\r\n              .top(Infinity)\r\n              .filter(function(d) {\r\n                return d.value.count !== 0 && d.value !== 0\r\n              })\r\n              .slice(0, n)\r\n          }\r\n        }\r\n      }\r\n      // Render volume line chart\r\n      volumeChart\r\n        .renderArea(true)\r\n        .width(d3.select('#volume-chart').node().getBoundingClientRect().width)\r\n        .height(150)\r\n        .transitionDuration(1000)\r\n        .margins({ top: 30, right: 10, bottom: 25, left: 40 })\r\n        .group(adPerDayGroup)\r\n        .dimension(adPerDayDimension)\r\n      // .curve(d3.curveCardinal.tension(0.6))\r\n        .x(d3.scaleTime().domain([minDate, maxDate]))\r\n        .valueAccessor(d => d.value.count)\r\n        .ordinalColors(colorPalette)\r\n      // .xUnits(d3.timeHour)\r\n        .brushOn(false)\r\n        .elasticX(false)\r\n        .elasticY(true)\r\n        .xyTipsOn(true)\r\n        .mouseZoomable(false)\r\n        .rangeChart(rangeChart)\r\n        .renderHorizontalGridLines(false)\r\n        .renderDataPoints({\r\n          radius: 3,\r\n          fillOpacity: 0.8,\r\n          strokeOpacity: 0\r\n        })\r\n        .yAxisLabel('N° of ads')\r\n        .clipPadding(10)\r\n        .title((d) => {\r\n          return `${formatTime(d.key)}: ${d.value.count}`\r\n        })\r\n        .yAxis()\r\n        .ticks(5)\r\n      // volume chart date picker\r\n      rangeChart\r\n        .width(d3.select('#volume-chart').node().getBoundingClientRect().width)\r\n        .height(40)\r\n        .margins({ top: 0, right: 10, bottom: 20, left: 40 })\r\n        .dimension(adPerDayDimension)\r\n        .group(adPerDayGroup)\r\n        .centerBar(true)\r\n        .gap(1)\r\n        .x(d3.scaleTime().domain([minDate, maxDate]))\r\n        .valueAccessor(d => d.value.count)\r\n        .label(d => d.key)\r\n        .round(d3.timeDay.round)\r\n        .alwaysUseRounding(true)\r\n        .xUnits(d3.timeDays)\r\n        .ordinalColors(colorPalette)\r\n        .yAxis()\r\n        .ticks(0)\r\n      // Render advertiser row chart\r\n      companyChart\r\n        .width(d3.select('#company-chart').node().getBoundingClientRect().width)\r\n        .height(240)\r\n        .margins({ top: 20, left: 10, right: 10, bottom: 20 })\r\n        .group(removeEmptyBins(companyGroup))\r\n        .dimension(companyDimension)\r\n        .ordinalColors(colorPalette)\r\n        .label(d => d.key)\r\n        .valueAccessor(d => d.value.count)\r\n        .data(group => group.top(10))\r\n        .title(d => d.value.count)\r\n        .elasticX(true)\r\n        .xAxis()\r\n        .ticks(4)\r\n      // Render targeting value row chart\r\n      const width = d3\r\n        .select('#engagement-chart')\r\n        .node()\r\n        .getBoundingClientRect().width\r\n      engagementChart\r\n        .width(width)\r\n        .height(220)\r\n        .radius(width / 2.5)\r\n        .innerRadius(width / 8)\r\n        .dimension(engagementDimension)\r\n        .group(engagementGroup)\r\n        .valueAccessor(d => d.value.count)\r\n        .title(d => d.value.count + ' ads')\r\n        .ordinalColors(colorPalette)\r\n        .label((d) => {\r\n          if (engagementChart.hasFilter() &&\r\n                    !engagementChart.hasFilter(d.key)) {\r\n            return `${d.key} (0%)`\r\n          }\r\n          let label = d.key\r\n          if (all.value()) {\r\n            label += ` (${Math.round((d.value.count / allGroup.value().count) * 100)}%)`\r\n          }\r\n          return label\r\n        })\r\n      // Render targeting type row chart\r\n      typeChart\r\n        .width(d3.select('#type-chart').node().getBoundingClientRect().width)\r\n        .height(240)\r\n        .margins({ top: 20, left: 10, right: 10, bottom: 20 })\r\n        .group(removeEmptyBins(targetingTypeGroup))\r\n        .dimension(targetingTypeDimension)\r\n        .ordinalColors(colorPalette)\r\n        .label(d => d.key)\r\n        .data(group => group.top(10))\r\n      // .labelOffsetX(0)\r\n        .title(d => d.value)\r\n        .elasticX(true)\r\n        .xAxis()\r\n        .ticks(4)\r\n      // Render targeting value row chart\r\n      valueChart\r\n        .width(d3.select('#value-chart').node().getBoundingClientRect().width)\r\n        .height(240)\r\n        .margins({ top: 20, left: 10, right: 10, bottom: 20 })\r\n        .group(removeEmptyBins(targetingValueGroup))\r\n        .dimension(targetingValueDimension)\r\n        .ordinalColors(colorPalette)\r\n        .label(d => d.key)\r\n        .data(group => group.top(10))\r\n      // .labelOffsetX(0)\r\n        .title(d => d.value)\r\n        .elasticX(true)\r\n        .xAxis()\r\n        .ticks(4)\r\n      // Render counter and table\r\n      const total = allGroup.value().count\r\n      tableCount\r\n        .crossfilter({\r\n          size() {\r\n            return total\r\n          }\r\n        })\r\n        .groupAll({\r\n          value() {\r\n            return allGroup.value().count\r\n          }\r\n        })\r\n        .html({\r\n          some: `<strong>%filter-count</strong> ${this.$t('selected-out-of')} <strong>%total-count</strong> ` +\r\n                    `${this.messages.ads} | <a class='resetAll'>${this.$t('Reset All')}</a>`,\r\n          all: `Total: <strong>%total-count</strong> ${this.messages.ads}. ${this.$t('click-graph')}`\r\n        })\r\n        .on('pretransition', (chart, filter) => {\r\n          const newData = d3.flatRollup(ndx.allFiltered(), v => v.length, d => d.tweetId, d => d.companyName, d => d.date_, d => d.url, d => d.engagedWith)\r\n          this.results = newData.map(x => ({\r\n            tweetId: x[0],\r\n            companyName: x[1],\r\n            date_: x[2],\r\n            url: x[3],\r\n            engagedWith: x[4],\r\n            count: x[5]\r\n          }))\r\n          d3.select('#dc-data-count a.reset').on('click', function() {\r\n            dc.filterAll()\r\n            dc.renderAll()\r\n          })\r\n        })\r\n      dc.renderAll()\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewOverviewTwitter.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewOverviewTwitter.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewOverviewTwitter.vue?vue&type=template&id=859050cc&\"\nimport script from \"./ChartViewOverviewTwitter.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewOverviewTwitter.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('VRow',_vm._b({ref:\"domToImageNode\"},'VRow',_vm.$attrs,false),[_vm._t(\"default\"),_c('VCol',{staticClass:\"dom-to-image-exclude\",attrs:{\"cols\":\"12\"}},[_c('BaseButton',_vm._b({attrs:{\"icon\":\"mdiExport\",\"text\":\"Export\"},on:{\"click\":_vm.exportImage}},'BaseButton',{ progress: _vm.progress, status: _vm.status, error: _vm.error },false)),_c('BaseButtonDownloadData',_vm._b({},'BaseButtonDownloadData',{ disabled: !_vm.blob, extension: _vm.extension, filename: _vm.filename, data: _vm.blob },false)),_c('BaseButtonShare',_vm._b({attrs:{\"file-share\":\"\"}},'BaseButtonShare',{ files: _vm.files, disabled: !_vm.files },false))],1)],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <VRow ref=\"domToImageNode\" v-bind=\"$attrs\">\r\n    <slot />\r\n    <VCol cols=\"12\" class=\"dom-to-image-exclude\">\r\n      <BaseButton\r\n        icon=\"mdiExport\"\r\n        text=\"Export\"\r\n        v-bind=\"{ progress, status, error }\"\r\n        @click=\"exportImage\"\r\n      />\r\n      <BaseButtonDownloadData\r\n        v-bind=\"{ disabled: !blob, extension, filename, data: blob }\"\r\n      />\r\n      <BaseButtonShare file-share v-bind=\"{ files, disabled: !files }\" />\r\n    </VCol>\r\n  </VRow>\r\n</template>\r\n\r\n<script>\r\nimport exportImageMixinFactory from '@/mixins/export-image-mixin-factory'\r\nimport BaseButton from '@/components/base/button/BaseButton.vue'\r\nimport BaseButtonDownloadData from '@/components/base/button/download/BaseButtonDownloadData.vue'\r\nimport BaseButtonShare from '@/components/base/button/BaseButtonShare.vue'\r\n\r\nexport default {\r\n  components: { BaseButton, BaseButtonDownloadData, BaseButtonShare },\r\n  mixins: [exportImageMixinFactory()]\r\n}\r\n</script>\r\n","import mod from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewVRowWebShare.vue?vue&type=template&id=53512c70&\"\nimport script from \"./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('p',{staticClass:\"filters\"},[_c('span',[_vm._v(\" \"+_vm._s(_vm.$t('Current filter'))+\" \"),_c('span',{staticClass:\"filter\"})]),_c('a',{directives:[{name:\"t\",rawName:\"v-t\",value:('reset'),expression:\"'reset'\"}],staticClass:\"reset\",staticStyle:{\"display\":\"none\"}})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <p class=\"filters\">\r\n    <span>\r\n      {{ $t('Current filter') }}\r\n      <span class=\"filter\" />\r\n    </span>\r\n    <a v-t=\"'reset'\" class=\"reset\" style=\"display: none\" />\r\n  </p>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n\r\n}\r\n</script>\r\n","import mod from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewFilters.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewFilters.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewFilters.vue?vue&type=template&id=2f9280d1&\"\nimport script from \"./ChartViewFilters.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewFilters.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('p',{staticClass:\"muted pull-right text-subtitle-2 mr-4 mb-1\"},[_c('span',{domProps:{\"innerHTML\":_vm._s(_vm.$t('select-time-range'))}}),_vm._t(\"default\")],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./ChartViewTextSelectTimeRange.vue?vue&type=template&id=46f28fc2&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { TextFilterWidget } from 'dc'\r\nimport { merge } from 'lodash-es'\r\n\r\nimport kViewBlockMixin from '@/mixins/k-view-block'\r\n\r\nconst mixin = {\r\n  props: {\r\n    values: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    headers: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    messages: {\r\n      type: Object,\r\n      default: () => ({})\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      graphId: 'graph_' + this.$store.state.xp.currentTab,\r\n      totalCount: 0,\r\n      filterCount: 0\r\n    }\r\n  },\r\n  mounted() {\r\n    this.drawViz()\r\n  },\r\n  watch: {\r\n    values() {\r\n      this.drawViz()\r\n    }\r\n  },\r\n  methods: {\r\n    drawViz() { },\r\n    createTextFilterWidget(parent, placeholder = 'Search') {\r\n      const widget = new TextFilterWidget(parent)\r\n      widget.placeHolder(this.$tev(placeholder, placeholder))\r\n      return widget\r\n    }\r\n  }\r\n}\r\n\r\nexport default merge(mixin, kViewBlockMixin)\r\n"],"names":[],"sourceRoot":""}