{"version":3,"file":"DataExperience.umd.5058.js","mappings":";;;;;;;;;;;;;;;AAAA,+BAA+B,6BAA6B,kCAAkC,OAAO,mBAAmB,YAAY,GAAG,aAAa,oCAAoC,kEAAkE,kBAAkB,oBAAoB,OAAO,2BAA2B,sBAAsB,0BAA0B,2CAA2C,YAAY,EAAE,6BAA6B,2DAA2D,YAAY,GAAG,2CAA2C,iCAAiC,oBAAoB,YAAY,GAAG;AACjoB;AACA;;;;;;;;;;;;;;;;;;ACuBwB;AACA;AACG;AACwD;AACrB;AACH;;AAE3D;AACA,uBAAuB,CAAC,gBAAe;;AAEvC,0EAAe;AACf,4CAA4C,2DAAkB;AAC9D,WAAW,gBAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,WAAU;AACjC,gBAAgB,YAAW;AAC3B,eAAe,iBAAgB;AAC/B;AACA;AACA;AACA,uBAAuB,aAAY;AACnC,gBAAgB,cAAa;AAC7B,eAAe,mBAAkB;AACjC;AACA;AACA;AACA,uBAAuB,YAAW;AAClC,gBAAgB,aAAY;AAC5B,eAAe,kBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA,qBAAqB,cAAa;AAClC;AACA;AACA;AACA;AACA;AACA,eAAe,aAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,YAAY;AACxC,6BAA6B,WAAW;AACxC;AACA,MAAM,UAAS;AACf;AACA;AACA,QAAQ,YAAY;AACpB;AACA;AACA,yBAAyB,UAAS;AAClC,sBAAsB,kBAAiB;AACvC,sBAAsB,kBAAiB;AACvC,uBAAuB,mBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,UACL;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA,sCAAsC,oCAAqB;AAC3D,WAAW,aAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,YAAY;AAClB;AACA;AACA,CAAC;;;AC7LiJ,CAAC,6EAAe,qCAAG,EAAC;;;;ACA1E;AAC3B;AACL;;;AAG5D;AACA,CAA4G;AAC5G,gBAAgB,sCAAU;AAC1B,EAAE,wCAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,kDAAe;;;;;;;;;;;;;;;;AClBf,+BAA+B,6BAA6B,eAAe,sBAAsB,yEAAyE,qBAAqB,YAAY,aAAa,4DAA4D,mCAAmC,kBAAkB;AACzU;AACA;;;;;ACSA,6EAAe;;AAEf,CAAC;;;ACboJ,CAAC,qFAAe,wCAAG,EAAC;;;;ACA1E;AAC3B;AACL;;;AAG/D;AACA,CAA4G;AAC5G,gBAAgB,sCAAU;AAC1B,EAAE,gDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,qDAAe;;;;;;;;;;;;;;;;AClBf,+BAA+B,6BAA6B,eAAe,yDAAyD,aAAa,UAAU,iDAAiD;AAC5M;AACA;;;;;;ACF2G;AAC3G;;;AAGA;AACA,CAA4G;AAC5G,gBAAgB,sCAAU;AAC1B;AACA,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe;;;;;;;;;ACjBsB;;AAErC,+DAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,yBAAyB,gDAAgB;AACzC;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;AC9EuB;AACA;;AAExB;AACA;AACA;AACA;AACA;AACA,IAAI;AACG;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,iBAAiB;AACjB,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,mBAAmB,sCAAS;AAC5B;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,UAAU,sDAAyB;AACnC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH","sources":["webpack://DataExperience/./src/components/chart/view/dc/TimelineChart.vue?d273","webpack://DataExperience/src/components/chart/view/dc/TimelineChart.vue","webpack://DataExperience/./src/components/chart/view/dc/TimelineChart.vue?4921","webpack://DataExperience/./src/components/chart/view/dc/TimelineChart.vue","webpack://DataExperience/./src/components/chart/view/filters/ChartViewFilters.vue?cff0","webpack://DataExperience/src/components/chart/view/filters/ChartViewFilters.vue","webpack://DataExperience/./src/components/chart/view/filters/ChartViewFilters.vue?e912","webpack://DataExperience/./src/components/chart/view/filters/ChartViewFilters.vue","webpack://DataExperience/./src/components/chart/view/text/ChartViewTextSelectTimeRange.vue?13ad","webpack://DataExperience/./src/components/chart/view/text/ChartViewTextSelectTimeRange.vue","webpack://DataExperience/./src/components/chart/view/dc/mixin.js","webpack://DataExperience/./src/components/chart/view/utils/dc-helpers.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('VContainer',[_c('div',{attrs:{\"id\":`area-chart-${_vm.graphId}`}},[_c('span',{staticClass:\"font-weight-bold ml-1\"},[(_vm.cumulativeGroup)?[_vm._v(\" \"+_vm._s(_vm.$t('item-total', { title: _vm.title }))+\" \")]:_c('i18n',{attrs:{\"path\":\"item-per-timeunit\"},scopedSlots:_vm._u([{key:\"title\",fn:function(){return [_vm._v(\" \"+_vm._s(_vm.title)+\" \")]},proxy:true},{key:\"timeUnit\",fn:function(){return [_vm._v(\" \"+_vm._s(_vm.$t(_vm.timeUnit.name))+\" \")]},proxy:true}])})],2),_c('ChartViewFilters')],1),_c('div',{staticClass:\"range-chart\",attrs:{\"id\":`range-chart-${_vm.graphId}`}},[_c('ChartViewTextSelectTimeRange')],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <VContainer>\n    <div :id=\"`area-chart-${graphId}`\">\n      <span class=\"font-weight-bold ml-1\">\n        <template v-if=\"cumulativeGroup\">\n          {{ $t('item-total', { title }) }}\n        </template>\n        <i18n v-else path=\"item-per-timeunit\">\n          <template #title>\n            {{ title }}\n          </template>\n          <template #timeUnit>\n            {{ $t(timeUnit.name) }}\n          </template>\n        </i18n>\n      </span>\n      <ChartViewFilters />\n    </div>\n    <div :id=\"`range-chart-${graphId}`\" class=\"range-chart\">\n      <ChartViewTextSelectTimeRange />\n    </div>\n  </VContainer>\n</template>\n<script>\n\nimport * as d3 from 'd3'\nimport * as dc from 'dc'\nimport mixin from './mixin'\nimport ChartViewTextSelectTimeRange from '../text/ChartViewTextSelectTimeRange.vue'\nimport ChartViewFilters from '../filters/ChartViewFilters.vue'\nimport { createCumulativeGroup } from '../utils/dc-helpers'\n\n// Remove warning on default colorscheme, even if not used..\ndc.config.defaultColors(d3.schemePaired)\n\nexport default {\n  components: { ChartViewTextSelectTimeRange, ChartViewFilters },\n  mixins: [mixin],\n  props: {\n    /**\n      * Column name of the {values} that represent date values\n      */\n    dateAccessor: {\n      type: String,\n      required: true\n    },\n    /**\n      * Format of the dates being processed, if not set will use the Date constructor\n      */\n    dateFormat: {\n      type: String,\n      default: ''\n    },\n    /**\n      * The value to consider in respect to the date, if not set, will take the number of records\n      */\n    valueAccessor: {\n      type: String,\n      default: ''\n    },\n    /**\n      * If one of {valueAccessor} is null, replace the value with a default\n      */\n    defaultValue: {\n      type: Number,\n      default: 0\n    },\n    /**\n     * If set to true use cumulative sum over the time period\n     */\n    cumulativeGroup: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    const timeUnits = {\n      day: {\n        name: 'day',\n        accessor: d => d3.timeDay(this.dateParser(d)),\n        xUnits: d3.timeDays,\n        round: d3.timeDay.round\n      },\n      month: {\n        name: 'month',\n        accessor: d => d3.timeMonth(this.dateParser(d)),\n        xUnits: d3.timeMonths,\n        round: d3.timeMonth.round\n      },\n      year: {\n        name: 'year',\n        accessor: d => d3.timeYear(this.dateParser(d)),\n        xUnits: d3.timeYears,\n        round: d3.timeYear.round\n      }\n    }\n    return {\n      timeUnits,\n      timeUnit: timeUnits.day,\n      dateFormatter: d3.timeFormat('%B %d, %Y')\n    }\n  },\n  computed: {\n    dateParser() {\n      if (this.dateFormat) {\n        return d3.timeParse(this.dateFormat)\n      } else {\n        return (d) => {\n          return new Date(d)\n        }\n      }\n    }\n  },\n  methods: {\n    drawViz() {\n      // Create and bind charts to their respective divs\n      const lineChart = new dc.LineChart(`#area-chart-${this.graphId}`)\n      const rangeChart = new dc.BarChart(`#range-chart-${this.graphId}`)\n      // Bind reset filters links\n      d3.select(`#area-chart-${this.graphId} a.reset`).on('click', function() {\n        lineChart.filterAll()\n        rangeChart.filterAll()\n        dc.redrawAll()\n      })\n      // Create dimensions\n      const dateExtent = d3.extent(this.ndx.all(), d => this.dateParser(d[this.dateAccessor]))\n      dateExtent[0] = d3.timeDay.offset(dateExtent[0], -1)\n      dateExtent[1] = d3.timeDay.offset(dateExtent[1], 1)\n      const nbMonths = d3.timeMonth.count(...dateExtent)\n      this.timeUnit = nbMonths > 10 ? nbMonths > 120 ? this.timeUnits.year : this.timeUnits.month : this.timeUnits.day\n      // Create the date dimension\n      const dateDimension = this.ndx.dimension(d => this.timeUnit.accessor(d[this.dateAccessor]))\n      // Create the aggregation from the date dimension\n      const valueGroup = this.valueAccessor ? dateDimension.group().reduceSum(d => d[this.valueAccessor]) : dateDimension.group().reduceCount()\n      // Render line chart\n      const width = d3\n        .select(`#area-chart-${this.graphId}`)\n        .node()\n        .getBoundingClientRect().width\n      lineChart\n        .margins({ top: 20, left: 40, right: 20, bottom: 20 })\n        .width(width)\n        .transitionDuration(1000)\n        .turnOnControls(false)\n        .curve(d3.curveMonotoneX)\n        .xyTipsOn(true)\n        .height((this.height - 30) * 0.8)\n        .brushOn(false)\n        .renderArea(true)\n        .dimension(dateDimension)\n        .group(this.cumulativeGroup ? createCumulativeGroup(valueGroup) : valueGroup)\n        .x(d3.scaleTime().domain(dateExtent))\n        .elasticY(true)\n        .rangeChart(rangeChart)\n        .renderDataPoints({\n          radius: 3,\n          fillOpacity: 0.8,\n          strokeOpacity: 0\n        })\n        .round(this.timeUnit.round)\n        .xUnits(this.timeUnit.xUnits)\n        .title(d => `${this.dateFormatter(d.key)} : ${d.value} ${this.valueLabel}`)\n        .clipPadding(10)\n        .yAxisLabel(`Total ${this.valueLabel}`)\n        .ordinalColors(this.colorPalette)\n      lineChart.xAxis().ticks(10)\n      lineChart.yAxis().ticks(6)\n      lineChart.filterAll()\n      // range chart date picker\n      rangeChart\n        .width(width)\n        .height((this.height - 30) * 0.2)\n        .margins({ top: 0, right: 10, bottom: 20, left: 40 })\n        .dimension(dateDimension)\n        .group(valueGroup)\n        .centerBar(true)\n        .gap(1)\n        .x(d3.scaleTime().domain(dateExtent))\n        .valueAccessor(d => d.value)\n        .label(d => d.key)\n        .round(this.timeUnit.round)\n        .alwaysUseRounding(true)\n        .xUnits(this.timeUnit.xUnits)\n        .ordinalColors(this.colorPalette)\n        .yAxis()\n        .ticks(0)\n      dc.renderAll()\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TimelineChart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TimelineChart.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TimelineChart.vue?vue&type=template&id=68cb5cdc&\"\nimport script from \"./TimelineChart.vue?vue&type=script&lang=js&\"\nexport * from \"./TimelineChart.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('p',{staticClass:\"filters\"},[_c('span',[_vm._v(\" \"+_vm._s(_vm.$t('Current filter'))+\" \"),_c('span',{staticClass:\"filter\"})]),_c('a',{directives:[{name:\"t\",rawName:\"v-t\",value:('reset'),expression:\"'reset'\"}],staticClass:\"reset\",staticStyle:{\"display\":\"none\"}})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <p class=\"filters\">\n    <span>\n      {{ $t('Current filter') }}\n      <span class=\"filter\" />\n    </span>\n    <a v-t=\"'reset'\" class=\"reset\" style=\"display: none\" />\n  </p>\n</template>\n\n<script>\nexport default {\n\n}\n</script>\n","import mod from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewFilters.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewFilters.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewFilters.vue?vue&type=template&id=2f9280d1&\"\nimport script from \"./ChartViewFilters.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewFilters.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('p',{staticClass:\"muted pull-right text-subtitle-2 mr-4 mb-1\"},[_c('span',{domProps:{\"innerHTML\":_vm._s(_vm.$t('select-time-range'))}}),_vm._t(\"default\")],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./ChartViewTextSelectTimeRange.vue?vue&type=template&id=46f28fc2&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { TextFilterWidget } from 'dc'\n\nexport default {\n  props: {\n    /**\n     * The crossfilter object that contains the values and filters\n     * e,g: crossfilter(this.results)\n     */\n    ndx: {\n      type: Object,\n      required: true\n    },\n    /**\n     * Title of the graph\n     */\n    title: {\n      type: String,\n      default: ''\n    },\n    /**\n     * Label to display in the axis\n     */\n    valueLabel: {\n      type: String,\n      default: 'records'\n    },\n    /**\n     * The height of the graph\n     * the width is dynamically computed from it's parent\n     */\n    height: {\n      type: Number,\n      default: 250\n    },\n    /**\n     * Position of the graph in the dashboard\n     * Determine the color to pick in colorPalette\n     */\n    position: {\n      type: Number,\n      required: true\n    },\n    /**\n     * Colors to use in the graph\n     * Default to Set 3: https://observablehq.com/@d3/color-schemes\n     */\n    colorPalette: {\n      type: Array,\n      default: () => ['#bebada', '#8dd3c7', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#bc80bd', '#ccebc5']\n    }\n    /**\n     '#58539E',\n        '#847CEB',\n        '#605BAB',\n        '#4A4685',\n        '#35325E'\n     */\n  },\n  data() {\n    return {\n      graphId: 'graph_' + this._uid\n    }\n  },\n  mounted() {\n    this.drawViz()\n  },\n  watch: {\n    values() {\n      this.drawViz()\n    }\n  },\n  methods: {\n    createTextFilterWidget(parent, placeholder = 'Search') {\n      const widget = new TextFilterWidget(parent)\n      widget.placeHolder(this.$t(placeholder))\n      return widget\n    }\n  }\n}\n","import * as d3 from 'd3'\nimport * as dc from 'dc'\n\n// Functions to add x-label & y-label to Row Charts (Unsupported by dc.js)\n// https://www.intothevoid.io/data-visualization/row-chart-axis-labels-dc-js/\n// Use with:\n// contentChart.on('postRender', function (chart) {\n//  addXLabel(chart, 'Hours watched')\n// })\nexport function addXLabel(chartToUpdate, displayText) {\n  const textSelection = chartToUpdate\n    .svg()\n    .append('text')\n    .attr('class', 'x-axis-label')\n    .attr('text-anchor', 'middle')\n    .attr('x', chartToUpdate.width() / 2)\n    .attr('y', chartToUpdate.height() - 10)\n    .text(displayText)\n  const textDims = textSelection.node().getBBox()\n  const chartMargins = chartToUpdate.margins()\n\n  // Dynamically adjust positioning after reading text dimension from DOM\n  textSelection\n    .attr(\n      'x',\n      chartMargins.left +\n        (chartToUpdate.width() - chartMargins.left - chartMargins.right) / 2\n    )\n    .attr('y', chartToUpdate.height() - Math.ceil(textDims.height) / 2)\n}\nexport function addYLabel(chartToUpdate, displayText) {\n  const textSelection = chartToUpdate\n    .svg()\n    .append('text')\n    .attr('class', 'y-axis-label')\n    .attr('text-anchor', 'middle')\n    .attr('transform', 'rotate(-90)')\n    .attr('x', -chartToUpdate.height() / 2)\n    .attr('y', 10)\n    .text(displayText)\n  const textDims = textSelection.node().getBBox()\n  const chartMargins = chartToUpdate.margins()\n\n  // Dynamically adjust positioning after reading text dimension from DOM\n  textSelection\n    .attr(\n      'x',\n      -chartMargins.top -\n        (chartToUpdate.height() - chartMargins.top - chartMargins.bottom) / 2\n    )\n    .attr(\n      'y',\n      Math.max(\n        Math.ceil(textDims.height),\n        chartMargins.left - Math.ceil(textDims.height) - 5\n      )\n    )\n}\n\n/**\n * Transform a simple group to a cumulative one in order\n * to make cumulative line chart\n * @param {Crossfilter group} group the group to transform\n * @returns the cumulative group\n */\nexport function createCumulativeGroup(group) {\n  return {\n    all() {\n      const cumulate = {}\n      return group.all().map(function(d) {\n        if (cumulate[d.key[0]]) {\n          cumulate[d.key[0]] += d.value\n        } else {\n          cumulate[d.key[0]] = d.value\n        }\n        return { key: d.key, value: cumulate[d.key[0]] }\n      })\n    }\n  }\n}\n\n/**\n * Remove datapoints that are null in a crossfilter group\n * Used to hide empty bins in a bar graph\n * @param {Crossfilter group} group the group to transform\n * @returns the cleaned group\n */\nexport function removeEmptyBins(group) {\n  return {\n    top(n) {\n      return group\n        .top(Infinity)\n        .filter(function(d) {\n          return d.value.count !== 0 && d.value !== 0\n        })\n        .slice(0, n)\n    }\n  }\n}\n\nexport function addPiePercentage(chart) {\n  chart.selectAll('text.pie-slice.pie-label').call(function(t) {\n    t.each(function(d) {\n      const self = d3.select(this)\n      let text = self.text()\n      if (text.length > 14) { text = text.substring(0, 14) + '.. ' }\n      if (text.length > 0) {\n        text =\n          text +\n          ' (' +\n          dc.utils.printSingleValue(\n            ((d.endAngle - d.startAngle) / (2 * Math.PI)) * 100\n          ) +\n          '%)'\n      }\n      self.text(text)\n    })\n  })\n}\n"],"names":[],"sourceRoot":""}