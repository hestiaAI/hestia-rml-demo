{"version":3,"file":"DataExperience.umd.7155.js","mappings":";;;;;;;;;;;;;;;AAAA,+BAA+B,6BAA6B,kCAAkC,OAAO,iCAAiC,YAAY,qBAAqB,wGAAwG,aAAa,qBAAqB,gBAAgB,+BAA+B,4EAA4E,KAAK,oBAAoB,QAAQ,8CAA8C,iBAAiB,wBAAwB;AACpiB;AACA;;;;;;;;;;;;;;ACwBwB;AACA;AACG;AACmC;;AAE9D;AACA,uBAAuB,CAAC,gBAAe;;AAEvC,6EAAe;AACf,gCAAgC;AAChC,WAAW,gBAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAU;AACrB,YAAY,YAAW;AACvB,aAAa,aAAY;AACzB,YAAY,YAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,WAAW;AACrC,oBAAoB,UAAS;;AAE7B;AACA,MAAM,UAAS;AACf;AACA,QAAQ,YAAY;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,aACS;AACpB;AACA,YAAY,mBAAkB;AAC9B,YAAY,mBAAkB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM,YAAY;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AC7KoJ,CAAC,gFAAe,wCAAG,EAAC;;;;ACA1E;AAC3B;AACL;;;AAG/D;AACA,CAA4G;AAC5G,gBAAgB,sCAAU;AAC1B,EAAE,2CAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,qDAAe;;;;;;;;;;;;;;;;AClBf,+BAA+B,6BAA6B,eAAe,sBAAsB,yEAAyE,qBAAqB,YAAY,aAAa,4DAA4D,mCAAmC,kBAAkB;AACzU;AACA;;;;;ACSA,6EAAe;;AAEf,CAAC;;;ACboJ,CAAC,qFAAe,wCAAG,EAAC;;;;ACA1E;AAC3B;AACL;;;AAG/D;AACA,CAA4G;AAC5G,gBAAgB,sCAAU;AAC1B,EAAE,gDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,qDAAe;;;;;;;;;AClBsB;;AAErC,+DAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,yBAAyB,gDAAgB;AACzC;AACA;AACA;AACA;AACA,CAAC","sources":["webpack://DataExperience/./src/components/chart/view/dc/BarTimelineChart.vue?9e85","webpack://DataExperience/src/components/chart/view/dc/BarTimelineChart.vue","webpack://DataExperience/./src/components/chart/view/dc/BarTimelineChart.vue?eab1","webpack://DataExperience/./src/components/chart/view/dc/BarTimelineChart.vue","webpack://DataExperience/./src/components/chart/view/filters/ChartViewFilters.vue?cff0","webpack://DataExperience/src/components/chart/view/filters/ChartViewFilters.vue","webpack://DataExperience/./src/components/chart/view/filters/ChartViewFilters.vue?e912","webpack://DataExperience/./src/components/chart/view/filters/ChartViewFilters.vue","webpack://DataExperience/./src/components/chart/view/dc/mixin.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('VContainer',[_c('div',{attrs:{\"id\":'bar-chart-' + _vm.graphId}},[_c('div',{staticClass:\"d-flex\"},[_c('div',[_c('strong',[_vm._v(_vm._s(_vm.title))]),_c('ChartViewFilters')],1),_c('VSpacer'),_c('div',{staticStyle:{\"max-width\":\"160px\"}},[_c('VSelect',{staticClass:\"ma-0 ml-2\",attrs:{\"items\":_vm.intervalsName,\"label\":_vm.$t('Time interval'),\"hide-details\":\"\"},on:{\"change\":_vm.redraw},model:{value:(_vm.interval),callback:function ($$v) {_vm.interval=$$v},expression:\"interval\"}})],1)],1)])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <VContainer>\n    <div :id=\"'bar-chart-' + graphId\">\n      <div class=\"d-flex\">\n        <div>\n          <strong>{{ title }}</strong>\n          <ChartViewFilters />\n        </div>\n        <VSpacer />\n        <div style=\"max-width: 160px\">\n        <VSelect\n          v-model=\"interval\"\n          :items=\"intervalsName\"\n          :label=\"$t('Time interval')\"\n          @change=\"redraw\"\n          class=\"ma-0 ml-2\"\n          hide-details\n        />\n        </div>\n      </div>\n\n    </div>\n  </VContainer>\n</template>\n<script>\n\nimport * as d3 from 'd3'\nimport * as dc from 'dc'\nimport mixin from './mixin'\nimport ChartViewFilters from '../filters/ChartViewFilters.vue'\n\n// Remove warning on default colorscheme, even if not used..\ndc.config.defaultColors(d3.schemePaired)\n\nexport default {\n  components: { ChartViewFilters },\n  mixins: [mixin],\n  props: {\n    /**\n     * Column name of the {values} that represent date values\n     */\n    dateAccessor: {\n      type: String,\n      required: true\n    },\n    /**\n     * Format of the dates being processed, if not set will use the Date constructor\n     */\n    dateFormat: {\n      type: String,\n      default: ''\n    },\n    /**\n     * The value to consider in respect to the date, if not set, will take the number of records\n     */\n    valueAccessor: {\n      type: String,\n      default: ''\n    },\n    /**\n     * If one of {valueAccessor} is null, replace the value with a default\n     */\n    defaultValue: {\n      type: Number,\n      default: 0\n    },\n    /**\n     * The type of the value, if set will display a stacked bar chart\n     */\n    typeAccessor: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    const intervals = {\n      Day: d3.timeDay,\n      Week: d3.timeWeek,\n      Month: d3.timeMonth,\n      Year: d3.timeYear\n    }\n    return {\n      results: [],\n      interval: null,\n      intervals,\n      intervalsName: Object.keys(intervals),\n      minDate: null,\n      maxDate: null,\n      barChart: null,\n      dateDimension: null,\n      dateGroup: null\n    }\n  },\n  computed: {\n    dateParser() {\n      if (this.dateFormat) {\n        return d3.timeParse(this.dateFormat)\n      } else {\n        return d => new Date(d)\n      }\n    }\n  },\n  methods: {\n    drawViz() {\n      // Create and bind charts to their respective divs\n      this.barChart = new dc.BarChart(`#bar-chart-${this.graphId}`)\n      const width = d3.select(`#bar-chart-${this.graphId}`).node().getBoundingClientRect().width\n\n      // Bind reset filters links\n      d3.select(`#bar-chart-${this.graphId} a.reset`).on('click', function() {\n        this.barChart.filterAll()\n        dc.redrawAll()\n      })\n\n      // Choose the time interval to use\n      this.dateDimension = this.ndx.dimension(d => this.dateParser(d[this.dateAccessor]))\n      console.log(this.dateDimension)\n      this.minDate = this.dateParser(this.dateDimension.bottom(1)[0][this.dateAccessor])\n      this.maxDate = this.dateParser(this.dateDimension.top(1)[0][this.dateAccessor])\n      const diffDays = d3.timeDay.count(this.minDate, this.maxDate)\n      console.log(this.minDate, this.maxDate, diffDays)\n      if (diffDays < 100) {\n        this.interval = 'Day'\n      } else if (diffDays < 1000) {\n        this.interval = 'Week'\n      } else {\n        this.interval = 'Month'\n      }\n\n      const grouper = k => this.intervals[this.interval](k)\n      this.dateGroup = this.valueAccessor\n        ? this.dateDimension.group(grouper).reduceSum(d => d[this.valueAccessor])\n        : this.dateDimension.group(grouper).reduceCount()\n      console.log(this.interval, this.dateGroup)\n\n      // Render hour date chart\n      this.barChart\n        .width(width)\n        .height(this.height)\n        .ordinalColors([this.colorPalette[0]])\n        .x(d3\n          .scaleTime()\n          .domain([\n            d3.timeHour.offset(this.minDate, 0),\n            d3.timeHour.offset(this.maxDate, 2)\n          ]))\n        .xUnits(this.intervals[this.interval].range)\n        .margins({ left: 50, top: 20, right: 50, bottom: 20 })\n        .dimension(this.dateDimension)\n        .group(this.dateGroup)\n        .brushOn(false)\n        .elasticX(false)\n        .elasticY(true)\n        .mouseZoomable(false)\n        .clipPadding(10)\n\n      dc.renderAll()\n    },\n    redraw() {\n      const grouper = k => this.intervals[this.interval](k)\n      console.log(this.intervals[this.interval])\n      this.dateGroup = this.valueAccessor\n        ? this.dateDimension.group(grouper).reduceSum(d => d[this.valueAccessor])\n        : this.dateDimension.group(grouper).reduceCount()\n      this.barChart.xUnits(this.intervals[this.interval].range)\n      this.barChart\n        .dimension(this.dateDimension)\n        .group(this.dateGroup)\n      // .gap(this.selectTimeInt === 'Months' ? 10 : 0)\n        .transitionDuration(1000)\n        .render()\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./BarTimelineChart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./BarTimelineChart.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./BarTimelineChart.vue?vue&type=template&id=4a6ecdba&\"\nimport script from \"./BarTimelineChart.vue?vue&type=script&lang=js&\"\nexport * from \"./BarTimelineChart.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('p',{staticClass:\"filters\"},[_c('span',[_vm._v(\" \"+_vm._s(_vm.$t('Current filter'))+\" \"),_c('span',{staticClass:\"filter\"})]),_c('a',{directives:[{name:\"t\",rawName:\"v-t\",value:('reset'),expression:\"'reset'\"}],staticClass:\"reset\",staticStyle:{\"display\":\"none\"}})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <p class=\"filters\">\n    <span>\n      {{ $t('Current filter') }}\n      <span class=\"filter\" />\n    </span>\n    <a v-t=\"'reset'\" class=\"reset\" style=\"display: none\" />\n  </p>\n</template>\n\n<script>\nexport default {\n\n}\n</script>\n","import mod from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewFilters.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewFilters.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewFilters.vue?vue&type=template&id=2f9280d1&\"\nimport script from \"./ChartViewFilters.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewFilters.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { TextFilterWidget } from 'dc'\n\nexport default {\n  props: {\n    /**\n     * The crossfilter object that contains the values and filters\n     * e,g: crossfilter(this.results)\n     */\n    ndx: {\n      type: Object,\n      required: true\n    },\n    /**\n     * Title of the graph\n     */\n    title: {\n      type: String,\n      default: ''\n    },\n    /**\n     * Label to display in the axis\n     */\n    valueLabel: {\n      type: String,\n      default: 'records'\n    },\n    /**\n     * The height of the graph\n     * the width is dynamically computed from it's parent\n     */\n    height: {\n      type: Number,\n      default: 250\n    },\n    /**\n     * Position of the graph in the dashboard\n     * Determine the color to pick in colorPalette\n     */\n    position: {\n      type: Number,\n      required: true\n    },\n    /**\n     * Colors to use in the graph\n     * Default to Set 3: https://observablehq.com/@d3/color-schemes\n     */\n    colorPalette: {\n      type: Array,\n      default: () => ['#bebada', '#8dd3c7', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#bc80bd', '#ccebc5']\n    }\n    /**\n     '#58539E',\n        '#847CEB',\n        '#605BAB',\n        '#4A4685',\n        '#35325E'\n     */\n  },\n  data() {\n    return {\n      graphId: 'graph_' + this._uid\n    }\n  },\n  mounted() {\n    this.drawViz()\n  },\n  watch: {\n    values() {\n      this.drawViz()\n    }\n  },\n  methods: {\n    createTextFilterWidget(parent, placeholder = 'Search') {\n      const widget = new TextFilterWidget(parent)\n      widget.placeHolder(this.$t(placeholder))\n      return widget\n    }\n  }\n}\n"],"names":[],"sourceRoot":""}