(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{1209:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return O}));var o=n(1255),r=(n(9),n(75),n(6),n(79),n(50),n(46),n(1256),n(1257),n(1259),n(668),n(669),n(670),n(667),n(10),n(36),n(1260),n(51),n(65),n(29),n(33),n(81),n(130),n(13),n(78),n(76),n(131),{d:function(e,t){for(var a in t)r.o(t,a)&&!r.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}),l={};r.d(l,{Z:function(){return E}});var c=JSON.parse('{"name":"@hestia.ai/google","version":"3.3.2","main":"dist/index.mjs","type":"module","files":["dist","src/google-viewer.json"],"repository":{"type":"git","url":"https://github.com/hestiaai/hestialabs-experiences","directory":"packages/packages/experiences/google"},"publishConfig":{"access":"public"},"author":"","license":"UNLICENSED"}'),a={genericDateViewer:{en:{viewBlocks:{genericDateViewer:{name:"Timeline",title:"Timeline",text:"See all the dated events in your files, corresponding to data that has been collected on you at or concerning a specific date.",graphTitle:"Number of dated events in your files",graphNoDate:"No dated events were found in your file(s).",datedEvents:"From {currMinDate} to {currMaxDate} we found {total} dated events in your file(s).",headers:{"File name":"File name",Date:"Date",Description:"Description"}}}},fr:{viewBlocks:{genericDateViewer:{name:"Chronologie",title:"Chronologie",text:"Voir tous les événements datés dans vos dossiers, correspondant aux données qui ont été collectées sur vous à ou concernant une date spécifique.",graphTitle:"Nombre d'événements datés dans vos dossiers",graphNoDate:"Aucun événement daté n'a été trouvé dans votre (vos) dossier(s).",datedEvents:"De {currMinDate} à {currMaxDate} nous avons trouvé {total} événements datés dans votre (vos) fichier(s).",headers:{"File name":"Nom de fichier",Date:"Date",Description:"Description"}}}}},genericLocationViewer:{en:{viewBlocks:{genericLocationViewer:{name:"Location Observations",title:"Location Observations",text:"See all the location events in your files, corresponding to data that has been collected on you at or concerning a specific location.",graphTitle:"Number of location records in your files",graphNoLocation:"No location were found in your file(s).",locations:"We found {total} locations in your file(s).",headers:{File:"File",Path:"Path",Latitude:"Latitude",Longitude:"Longitude",Description:"Description"}}}},fr:{viewBlocks:{genericLocationViewer:{name:"Positions",title:"Observations de localisation",text:"Voir tous les événements de localisation dans vos fichiers, correspondant aux données qui ont été collectées sur vous à ou concernant un lieu spécifique.",graphTitle:"Nombre de localisation dans vos fichiers",graphNoLocation:"Aucune localisation n'a été trouvé dans votre/vos fichier(s).",locations:"Nous avons trouvé {total} observations de localisation dans votre/vos fichier(s).",headers:{File:"Fichier",Path:"Chemin",Latitude:"Latitude",Longitude:"Longitude",Description:"Description"}}}}}};function i(e){return i="function"==typeof Symbol&&"symbol"==Object(o.a)(Symbol.iterator)?function(e){return Object(o.a)(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":Object(o.a)(e)},i(e)}function s(){s=function(){return e};var e={},t=Object.prototype,n=t.hasOwnProperty,a=Object.defineProperty||function(e,t,n){e[t]=n.value},o="function"==typeof Symbol?Symbol:{},r=o.iterator||"@@iterator",l=o.asyncIterator||"@@asyncIterator",c=o.toStringTag||"@@toStringTag";function d(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{d({},"")}catch(e){d=function(e,t,n){return e[t]=n}}function u(e,t,n,i){var o=t&&t.prototype instanceof f?t:f,r=Object.create(o.prototype),s=new O(i||[]);return a(r,"_invoke",{value:L(e,n,s)}),r}function m(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=u;var p={};function f(){}function h(){}function g(){}var y={};d(y,r,(function(){return this}));var v=Object.getPrototypeOf,b=v&&v(v(x([])));b&&b!==t&&n.call(b,r)&&(y=b);var C=g.prototype=f.prototype=Object.create(y);function w(e){["next","throw","return"].forEach((function(t){d(e,t,(function(e){return this._invoke(t,e)}))}))}function T(e,t){function o(a,r,s,l){var c=m(e[a],e,r);if("throw"!==c.type){var d=c.arg,u=d.value;return u&&"object"==i(u)&&n.call(u,"__await")?t.resolve(u.__await).then((function(e){o("next",e,s,l)}),(function(e){o("throw",e,s,l)})):t.resolve(u).then((function(e){d.value=e,s(d)}),(function(e){return o("throw",e,s,l)}))}l(c.arg)}var r;a(this,"_invoke",{value:function(e,n){function a(){return new t((function(t,a){o(e,n,t,a)}))}return r=r?r.then(a,a):a()}})}function L(e,t,n){var a="suspendedStart";return function(i,o){if("executing"===a)throw new Error("Generator is already running");if("completed"===a){if("throw"===i)throw o;return{value:void 0,done:!0}}for(n.method=i,n.arg=o;;){var r=n.delegate;if(r){var s=S(r,n);if(s){if(s===p)continue;return s}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===a)throw a="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);a="executing";var l=m(e,t,n);if("normal"===l.type){if(a=n.done?"completed":"suspendedYield",l.arg===p)continue;return{value:l.arg,done:n.done}}"throw"===l.type&&(a="completed",n.method="throw",n.arg=l.arg)}}}function S(e,t){var n=t.method,a=e.iterator[n];if(void 0===a)return t.delegate=null,"throw"===n&&e.iterator.return&&(t.method="return",t.arg=void 0,S(e,t),"throw"===t.method)||"return"!==n&&(t.method="throw",t.arg=new TypeError("The iterator does not provide a '"+n+"' method")),p;var i=m(a,e.iterator,t.arg);if("throw"===i.type)return t.method="throw",t.arg=i.arg,t.delegate=null,p;var o=i.arg;return o?o.done?(t[e.resultName]=o.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,p):o:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,p)}function k(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function E(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function O(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(k,this),this.reset(!0)}function x(e){if(e){var t=e[r];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var a=-1,i=function t(){for(;++a<e.length;)if(n.call(e,a))return t.value=e[a],t.done=!1,t;return t.value=void 0,t.done=!0,t};return i.next=i}}return{next:F}}function F(){return{value:void 0,done:!0}}return h.prototype=g,a(C,"constructor",{value:g,configurable:!0}),a(g,"constructor",{value:h,configurable:!0}),h.displayName=d(g,c,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===h||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,g):(e.__proto__=g,d(e,c,"GeneratorFunction")),e.prototype=Object.create(C),e},e.awrap=function(e){return{__await:e}},w(T.prototype),d(T.prototype,l,(function(){return this})),e.AsyncIterator=T,e.async=function(t,n,a,i,o){void 0===o&&(o=Promise);var r=new T(u(t,n,a,i),o);return e.isGeneratorFunction(n)?r:r.next().then((function(e){return e.done?e.value:r.next()}))},w(C),d(C,c,"Generator"),d(C,r,(function(){return this})),d(C,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=Object(e),n=[];for(var a in t)n.push(a);return n.reverse(),function e(){for(;n.length;){var a=n.pop();if(a in t)return e.value=a,e.done=!1,e}return e.done=!0,e}},e.values=x,O.prototype={constructor:O,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(E),!e)for(var t in this)"t"===t.charAt(0)&&n.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function a(n,a){return r.type="throw",r.arg=e,t.next=n,a&&(t.method="next",t.arg=void 0),!!a}for(var i=this.tryEntries.length-1;i>=0;--i){var o=this.tryEntries[i],r=o.completion;if("root"===o.tryLoc)return a("end");if(o.tryLoc<=this.prev){var s=n.call(o,"catchLoc"),l=n.call(o,"finallyLoc");if(s&&l){if(this.prev<o.catchLoc)return a(o.catchLoc,!0);if(this.prev<o.finallyLoc)return a(o.finallyLoc)}else if(s){if(this.prev<o.catchLoc)return a(o.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return a(o.finallyLoc)}}}},abrupt:function(e,t){for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a];if(i.tryLoc<=this.prev&&n.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var o=i;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=t&&t<=o.finallyLoc&&(o=null);var r=o?o.completion:{};return r.type=e,r.arg=t,o?(this.method="next",this.next=o.finallyLoc,p):this.complete(r)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),p},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),E(n),p}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var a=n.completion;if("throw"===a.type){var i=a.arg;E(n)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:x(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=void 0),p}},e}function d(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}var m=function(e,t,n,a){return new(n||(n=Promise))((function(i,o){function r(e){try{l(a.next(e))}catch(e){o(e)}}function s(e){try{l(a.throw(e))}catch(e){o(e)}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(r,s)}l((a=a.apply(e,t||[])).next())}))},f={showTable:!1},u={preprocessors:{},databaseConfig:void 0,disabled:!1,files:{},keepOnlyFiles:!0},h={collaborator:void 0,dataPortal:void 0,dataPortalMessage:void 0,dataPortalHtml:void 0,dataSamples:[],hideEmptyTabs:!1,hideFileExplorer:!0,hideSummary:!0,messages:{en:{viewBlocks:{}},fr:{viewBlocks:{}}},tutorialVideos:[],url:void 0},p=["viewerVersion","preprocessors","databaseConfig","dataModel","disabled","files","keepOnlyFiles"],y=["title","hideEmptyTabs","hideFileExplorer","hideSummary","icon","messages","subtitle","dataPortal","dataPortalHtml","dataPortalMessage","dataSamples","tutorialVideos","url","viewBlocks","collaborator"];function v(e,t){var n,a={},i=function(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=function(e,t){if(e){if("string"==typeof e)return d(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?d(e,t):void 0}}(e))){n&&(e=n);var a=0,i=function(){};return{s:i,n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,r=!0,s=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return r=e.done,e},e:function(e){s=!0,o=e},f:function(){try{r||null==n.return||n.return()}finally{if(s)throw o}}}}(t);try{for(i.s();!(n=i.n()).done;){var o=n.value;o in e&&(a[o]=e[o])}}catch(e){i.e(e)}finally{i.f()}return a}function g(e,t){return m(this,void 0,void 0,s().mark((function n(){var a,i;return s().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return a="".concat(t,"/").concat(e,"-viewer.json"),n.next=3,fetch(a);case 3:if(!(i=n.sent).ok){n.next=8;break}return n.next=7,i.json();case 7:return n.abrupt("return",n.sent);case 8:return n.abrupt("return",void 0);case 9:case"end":return n.stop()}}),n)})))}var b,C,w=function(){function e(t,n,a,i){var o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")})(this,e),this.loaderOptions=Object.assign(Object.assign({},u),v(t,p)),this.viewerOptions=Object.assign(Object.assign({},h),v(n,y)),this.viewerFunctions=o,this.initializeViewBlocks(this.viewerOptions,this.viewerFunctions);var s=a.name.replace(/@hestia\.?ai\//,"");this.checkPackageDirectory(s,i),this.name=s,this.version=a.version}var t,n;return t=e,(n=[{key:"viewerCompatibilityErrors",value:function(e){if(void 0===e)return"Undefined viewer options passed to experience ".concat(this.name);var t=this.loaderOptions.viewerVersion;if(void 0!==t){var n=e.version;if(!n||n<t)return"Experience ".concat(this.name," ").concat(this.version)+" requires viewerVersion ".concat(t,",")+" which is incompatible with viewerOptions version ".concat(n,".")}return!1}},{key:"configureViewer",value:function(t){var n=this.viewerCompatibilityErrors(t);if(n)throw new Error(n);var a={name:this.name,version:this.version};return new e(this.loaderOptions,t,a,void 0,this.viewerFunctions)}},{key:"provideViewerOptions",value:function(e){return m(this,void 0,void 0,s().mark((function t(){var n;return s().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(void 0!==e){t.next=2;break}return t.abrupt("return",void 0);case 2:if("string"!=typeof e){t.next=4;break}return t.abrupt("return",g(this.name,e));case 4:if("string"!=typeof(n=e[this.name])){t.next=7;break}return t.abrupt("return",g(this.name,n));case 7:return t.abrupt("return",n);case 8:case"end":return t.stop()}}),t,this)})))}},{key:"checkPackageDirectory",value:function(e,t){if(t){var n=t.match(/\/([^/]+)\/src\//);if(!n){var a='Package directory for package "'.concat(e,'" not found');throw new Error(a)}var i=n[1];if(e!==i){var o='Package name "'.concat(e,'" must match directory name "').concat(i,'"');throw new Error(o)}}}},{key:"initializeViewBlocks",value:function(e,t){var n=this;e.viewBlocks.filter((function(e){return e.id in a})).forEach((function(t){var i=t.id;if(n.viewerOptions.messages)for(var o in e.messages){var r=o;n.viewerOptions.messages[r].viewBlocks[i]=a[i][r].viewBlocks[i]}})),e.viewBlocks=e.viewBlocks.map((function(e){return function(e,t){var n=Object.assign(Object.assign({},f),e);return function(e,t){var n,a,i=e.postprocessor;"string"==typeof i&&(e.postprocessor=null===(n=t.postprocessors)||void 0===n?void 0:n[i]);var o=e.customPipeline,r=null===(a=t.customPipelines)||void 0===a?void 0:a[o];"string"==typeof o&&r&&(e.customPipeline=r)}(n,t),n}(e,t)}))}},{key:"options",get:function(){return Object.assign(Object.assign({},this.loaderOptions),this.viewerOptions)}},{key:"config",get:function(){return Object.assign({name:this.name,slug:this.name,version:this.version},this.options)}}])&&function(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,(o=function(e,t){if("object"!==i(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var a=n.call(e,"string");if("object"!==i(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(a.key),"symbol"===i(o)?o:String(o)),a)}var o}(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),T=JSON.parse('{"dataPortal":"https://takeout.google.com/settings/takeout","dataSamples":["https://raw.githubusercontent.com/hestiaAI/hestialabs-experiences/master/packages/lib/data-samples/google-takeout.zip?contenthash=df64540e5e61160a0591&filename=google-takeout.zip"],"hideEmptyTabs":false,"hideFileExplorer":true,"hideSummary":true,"messages":{"en":{"intro":{"title":"Google Takeout","dataPortal":" https://takeout.google.com/takeout/custom/location_history"},"viewBlocks":{"PlaceVisited":{"title":"Places visited","text":"This map shows what places Google think you visited with the size corresponding to the time you spent in this place:","vizProps":{"label":"visited places"},"headers":{"latitude":"Latitude","longitude":"Longitude","address":"Address","name":"Name","startTimestamp":"Start Time","endTimestamp":"End Time","placeVisitImportance":"Place Visit Importance","visitConfidence":"Visit Confidence","locationConfidence":"Location Confidence","duration":"Duration","semanticType":"Semantic Type"}},"OnePlace":{"title":"One Place","text":"","vizProps":{"messages":{"Place":"Place","total-time-spent":"Total time spent at","mean-time-spent":"Mean time spent at","entropy":"Entropy for","entropy-info":"The higher this value is, the more uncertain Google was when deciding if you visited","other-candidates":"This map shows the other candidates proposed by Google associated to the","keplerFields":{"name":"Name","latitude":"Latitude","longitude":"Longitude","confidence":"Confidence"}}}},"OtherCandidates":{"title":"Other Candidates","text":"This map shows the other candidate places proposed by Google linked to the location that Google think you visited:","headers":{"winnerLatitude":"Winner Latitude","winnerLongitude":"Winner Longitude","winnerAddress":"Winner Address","winnerName":"Winner Name","winnerConfidence":"Winner Confidence","winnerSemanticType":"Winner Semantic Type","loserLatitude":"Loser Latitude","loserLongitude":"Loser Longitude","loserAddress":"Loser Address","loserName":"Loser Name","loserConfidence":"Loser Confidence","loserSemanticType":"Loser Semantic Type","startTimestamp":"Start Time","endTimestamp":"End Time"}},"ActivitySegment":{"title":"Travels","text":"This map shows what trips Google think you did:","vizProps":{"label":"trips"},"headers":{"startLatitude":"Start Latitude","startLongitude":"Start Longitude","startAddress":"Start Address","startName":"Start Name","startTimestamp":"Start Timestamp","endLatitude":"End Latitude","endLongitude":"End Longitude","endAddress":"End Address","endName":"End Name","endTimestamp":"End Timestamp","confidence":"Confidence","transitPath":"Transit Path","distanceMeters":"Distance (m)","activityType":"Activity Type"}},"Records":{"title":"Records","text":"This map shows records associated to a trip with the color corresponding to an activity type:","headers":{"latitude":"Latitude","longitude":"Longitude","timestamp":"Time","accuracy":"Accuracy","source":"Source","activityType":"Activity Type"}},"WifiScan":{"title":"Wifi","text":"This map shows where your phone detected mac addresses with the size corresponding to the number of times it was detected:","vizProps":{"label":"mac adresses"},"headers":{"mac":"MAC","latitude":"Latitude","longitude":"Longitude","number_of_detections":"Number of Detections"}}}},"fr":{"intro":{"title":"Google Takeout","dataPortal":" https://takeout.google.com/takeout/custom/location_history"},"viewBlocks":{"PlaceVisited":{"title":"Endroits visités","text":"Carte des endroits que Google pense que vous avez visités. La taille des points montre le temps passé à l\'endroit","vizProps":{"label":"endroits visités"},"headers":{"latitude":"Latitude","longitude":"Longitude","address":"Adresse","name":"Nom","startTimestamp":"Heure de début","endTimestamp":"Heure de fin","placeVisitImportance":"Lieu Visite Importance","visitConfidence":"Confiance de la visite","locationConfidence":"Confiance en l\'emplacement","duration":"Duration","semanticType":"Type sémantique"}},"OnePlace":{"title":"Un endroit particulier","text":"","vizProps":{"messages":{"Place":"Endroit","total-time-spent":"Temps total passé à","mean-time-spent":"Temps moyen passé à","entropy":"Entropie pour","entropy-info":"Plus cette valeur est élevée, plus l\'incertitude de Google était grande au moment de décider si vous avez visité","other-candidates":"Cette carte montre les autres candidats proposés par Google associés à","keplerFields":{"name":"Nom","latitude":"Latitude","longitude":"Longitude","confidence":"Confiance"}}}},"OtherCandidates":{"title":"Autres candidats","text":"Carte des autres endroits que vous êtes susceptible d\'avoir visités d\'après l\'historique de vos positions.","headers":{"winnerLatitude":"Latitude du gagnant","winnerLongitude":"Longitude du gagnant","winnerAddress":"Adresse du gagnant","winnerName":"Nom du gagnant","winnerConfidence":"Confiance du gagnant","winnerSemanticType":"Type sémantique du gagnant","loserLatitude":"Latitude du perdant","loserLongitude":"Longitude du perdant","loserAddress":"Adresse du perdant","loserName":"Nom du perdant","loserConfidence":"Confiance du perdant","loserSemanticType":"Type sémantique du perdant","startTimestamp":"Heure de début","endTimestamp":"Heure de fin"}},"ActivitySegment":{"title":"Trajets","text":"Carte des trajets que Google a reconnus","vizProps":{"label":"trajets"},"headers":{"startLatitude":"Latitude de départ","startLongitude":"Longitude de départ","startAddress":"Adresse de départ","startName":"Nom de départ","startTimestamp":"Heure de départ","endLatitude":"Latitude de fin","endLongitude":"Longitude de fin","endAddress":"Adresse de fin","endName":"Nom de fin","endTimestamp":"Heure de fin","confidence":"Confiance","transitPath":"Chemin de transit","distanceMeters":"Distance (m)","activityType":"Type d\'activité"}},"Records":{"title":"Historique","text":"Carte des historiques associés à un trajet, les couleurs dénotant un type d\'activité","headers":{"latitude":"Latitude","longitude":"Longitude","timestamp":"Heure","accuracy":"Précision","source":"Source","activityType":"Type d\'activité"}},"WifiScan":{"title":"Wifi","text":"Carte des adresses MAC détectées par votre téléphone, la taille dénotant le nombre de détections.","vizProps":{"label":"adresses MAC"},"headers":{"mac":"MAC","latitude":"Latitude","longitude":"Longitude","number_of_detections":"Nombre de détections"}}}}},"tutorialVideos":[],"title":"Google Takeout","icon":"https://raw.githubusercontent.com/hestiaAI/hestialabs-experiences/master/packages/lib/icons/google-takeout.png","viewBlocks":[{"showTable":false,"id":"PlaceVisited","sql":"SELECT * FROM PlaceVisit; ","files":["LOCATION_HISTORY"],"visualization":"ChartViewGenericMap.vue","title":"Places visited","text":"This map shows what places Google think you visited with the size corresponding to the time you spent in this place:","vizProps":{"keplerConfig":{"version":"v1","config":{"visState":{"filters":[],"layers":[{"id":"yiawwh3","type":"point","config":{"dataId":"data","label":"Point","color":[187,0,0],"highlightColor":[252,242,26,255],"columns":{"lat":"latitude","lng":"longitude","altitude":null},"isVisible":true,"visConfig":{"radius":10,"fixedRadius":false,"opacity":0.8,"outline":true,"thickness":1,"strokeColor":null,"colorRange":{"name":"Global Warming","type":"sequential","category":"Uber","colors":["#5A1846","#900C3F","#C70039","#E3611C","#F1920E","#FFC300"]},"strokeColorRange":{"name":"Uber Viz Qualitative 1.2","type":"qualitative","category":"Uber","colors":["#12939A","#DDB27C","#88572C","#FF991F","#F15C17","#223F9A"]},"radiusRange":[10,30],"filled":true},"hidden":false,"textLabel":[{"field":null,"color":[255,255,255],"size":18,"offset":[0,0],"anchor":"start","alignment":"center"}]},"visualChannels":{"colorField":null,"colorScale":"quantile","strokeColorField":{"name":"semanticType","type":"string"},"strokeColorScale":"ordinal","sizeField":{"name":"duration","type":"real"},"sizeScale":"sqrt"}}],"interactionConfig":{"tooltip":{"fieldsToShow":{"data":[{"name":"address","format":null},{"name":"name","format":null},{"name":"startTimestamp","format":null},{"name":"endTimestamp","format":null},{"name":"semanticType","format":null},{"name":"duration","format":null},{"name":"placeVisitImportance","format":null},{"name":"visitConfidence","format":null},{"name":"locationConfidence","format":null}]},"compareMode":false,"compareType":"absolute","enabled":true},"brush":{"size":0.5,"enabled":false},"geocoder":{"enabled":false},"coordinate":{"enabled":false}},"layerBlending":"normal","splitMaps":[],"animationConfig":{"currentTime":null,"speed":1}},"mapState":{"bearing":0,"dragRotate":false,"latitude":46.38494014302197,"longitude":6.571780257805701,"pitch":0,"zoom":7.802552830838788,"isSplit":false}}}}},{"showTable":false,"id":"OnePlace","sql":"SELECT winnerLatitude, winnerLongitude, winnerAddress, winnerName, winnerConfidence, winnerSemanticType, loserLatitude, loserLongitude, loserAddress, loserName, loserConfidence, loserSemanticType, startTimestamp, endTimestamp FROM Winners INNER JOIN Losers ON Winners.id = Losers.loserId ","files":["LOCATION_HISTORY"],"visualization":"ChartViewGoogleOnePlace.vue","title":"One Place","text":"","vizProps":{"keplerConfig":{"version":"v1","config":{"visState":{"filters":[],"layers":[{"id":"yiawwh3","type":"point","config":{"dataId":"data","label":"Point","color":[187,0,0],"highlightColor":[252,242,26,255],"columns":{"lat":"latitude","lng":"longitude","altitude":null},"isVisible":true,"visConfig":{"radius":10,"fixedRadius":false,"opacity":0.8,"outline":true,"thickness":1,"strokeColor":null,"colorRange":{"name":"Global Warming","type":"sequential","category":"Uber","colors":["#5A1846","#900C3F","#C70039","#E3611C","#F1920E","#FFC300"]},"strokeColorRange":{"name":"Uber Viz Qualitative 1.2","type":"qualitative","category":"Uber","colors":["#12939A","#DDB27C","#88572C","#FF991F","#F15C17","#223F9A"]},"radiusRange":[10,30],"filled":true},"hidden":false,"textLabel":[{"field":null,"color":[255,255,255],"size":18,"offset":[0,0],"anchor":"start","alignment":"center"}]},"visualChannels":{"colorField":null,"colorScale":"quantile","strokeColorField":{"name":"semanticType","type":"string"},"strokeColorScale":"ordinal","sizeField":{"name":"duration","type":"real"},"sizeScale":"sqrt"}}],"interactionConfig":{"tooltip":{"fieldsToShow":{"data":[{"name":"address","format":null},{"name":"name","format":null},{"name":"startTimestamp","format":null},{"name":"endTimestamp","format":null},{"name":"semanticType","format":null},{"name":"duration","format":null},{"name":"placeVisitImportance","format":null},{"name":"visitConfidence","format":null},{"name":"locationConfidence","format":null}]},"compareMode":false,"compareType":"absolute","enabled":true},"brush":{"size":0.5,"enabled":false},"geocoder":{"enabled":false},"coordinate":{"enabled":false}},"layerBlending":"normal","splitMaps":[],"animationConfig":{"currentTime":null,"speed":1}},"mapState":{"bearing":0,"dragRotate":false,"latitude":46.38494014302197,"longitude":6.571780257805701,"pitch":0,"zoom":7.802552830838788,"isSplit":false}}}}},{"showTable":false,"id":"OtherCandidates","sql":"SELECT winnerLatitude, winnerLongitude, winnerAddress, winnerName, winnerConfidence, winnerSemanticType, loserLatitude, loserLongitude, loserAddress, loserName, loserConfidence, loserSemanticType, startTimestamp, endTimestamp FROM Winners INNER JOIN Losers ON Winners.id = Losers.loserId ","files":["LOCATION_HISTORY"],"visualization":"ChartViewGenericMap.vue","title":"Other Candidates","text":"This map shows the other candidate places proposed by Google linked to the location that Google think you visited:","vizProps":{"keplerConfig":{"version":"v1","config":{"visState":{"filters":[],"layers":[{"id":"di6sjwk","type":"point","config":{"dataId":"data","label":"winner","color":[210,0,0],"highlightColor":[252,242,26,255],"columns":{"lat":"winnerLatitude","lng":"winnerLongitude","altitude":null},"isVisible":true,"visConfig":{"radius":8,"fixedRadius":false,"opacity":0.8,"outline":true,"thickness":2,"strokeColor":null,"colorRange":{"name":"Global Warming","type":"sequential","category":"Uber","colors":["#5A1846","#900C3F","#C70039","#E3611C","#F1920E","#FFC300"]},"strokeColorRange":{"name":"Custom Palette","type":"custom","category":"Custom","colors":["#12939A","#6aca1f","#dba71c"]},"radiusRange":[0,50],"filled":true},"hidden":false,"textLabel":[{"field":null,"color":[255,255,255],"size":18,"offset":[0,0],"anchor":"start","alignment":"center"}]},"visualChannels":{"colorField":null,"colorScale":"quantile","strokeColorField":{"name":"winnerSemanticType","type":"string"},"strokeColorScale":"ordinal","sizeField":null,"sizeScale":"linear"}},{"id":"cc20vld","type":"point","config":{"dataId":"data","label":"loser","color":[254,242,26],"highlightColor":[252,242,26,255],"columns":{"lat":"loserLatitude","lng":"loserLongitude","altitude":null},"isVisible":true,"visConfig":{"radius":10,"fixedRadius":false,"opacity":0.8,"outline":true,"thickness":2,"strokeColor":null,"colorRange":{"name":"Global Warming","type":"sequential","category":"Uber","colors":["#5A1846","#900C3F","#C70039","#E3611C","#F1920E","#FFC300"]},"strokeColorRange":{"name":"Custom Palette","type":"custom","category":"Custom","colors":["#12939A","#72d228","#d0a531"]},"radiusRange":[0,50],"filled":true},"hidden":false,"textLabel":[{"field":null,"color":[255,255,255],"size":18,"offset":[0,0],"anchor":"start","alignment":"center"}]},"visualChannels":{"colorField":null,"colorScale":"quantile","strokeColorField":{"name":"loserSemanticType","type":"string"},"strokeColorScale":"ordinal","sizeField":null,"sizeScale":"linear"}},{"id":"4am7zj","type":"line","config":{"dataId":"data","label":"winner -> loser line","color":[218,0,0],"highlightColor":[252,242,26,255],"columns":{"lat0":"winnerLatitude","lng0":"winnerLongitude","alt0":null,"lat1":"loserLatitude","lng1":"loserLongitude","alt1":null},"isVisible":true,"visConfig":{"opacity":0.8,"thickness":2,"colorRange":{"name":"Global Warming","type":"sequential","category":"Uber","colors":["#5A1846","#900C3F","#C70039","#E3611C","#F1920E","#FFC300"]},"sizeRange":[0.5,10],"targetColor":[254,242,26],"elevationScale":1},"hidden":false,"textLabel":[{"field":null,"color":[255,255,255],"size":18,"offset":[0,0],"anchor":"start","alignment":"center"}]},"visualChannels":{"colorField":null,"colorScale":"quantile","sizeField":{"name":"loserConfidence","type":"real"},"sizeScale":"linear"}}],"interactionConfig":{"tooltip":{"fieldsToShow":{"data":[{"name":"winnerAddress","format":null},{"name":"winnerName","format":null},{"name":"winnerConfidence","format":null},{"name":"winnerSemanticType","format":null},{"name":"loserAddress","format":null},{"name":"loserName","format":null},{"name":"loserConfidence","format":null},{"name":"loserSemanticType","format":null},{"name":"timestamp","format":null}]},"compareMode":false,"compareType":"absolute","enabled":true},"brush":{"size":0.5,"enabled":false},"geocoder":{"enabled":false},"coordinate":{"enabled":false}},"layerBlending":"normal","splitMaps":[],"animationConfig":{"currentTime":null,"speed":1}},"mapState":{"bearing":0,"dragRotate":false,"latitude":46.532766228529596,"longitude":6.629735388007509,"pitch":0,"zoom":12.205264650981901,"isSplit":false},"mapStyle":{"styleType":"tqwsxjb","topLayerGroups":{},"visibleLayerGroups":{"label":true,"road":true,"building":true,"water":true,"land":true},"threeDBuildingColor":[194.6103322548211,191.81688250953655,185.2988331038727],"mapStyles":{"tqwsxjb":{"accessToken":null,"custom":true,"id":"tqwsxjb","label":"Mapbox Streets","url":"mapbox://styles/mapbox/streets-v11"}}}}}}},{"showTable":false,"id":"ActivitySegment","sql":"SELECT * FROM ActivitySegment; ","files":["LOCATION_HISTORY"],"visualization":"ChartViewGenericMap.vue","title":"Travels","text":"This map shows what trips Google think you did:","vizProps":{"keplerConfig":{"version":"v1","config":{"visState":{"filters":[],"layers":[{"id":"g0vqe8g","type":"point","config":{"dataId":"data","label":"start","color":[218,0,0],"highlightColor":[252,242,26,255],"columns":{"lat":"startLatitude","lng":"startLongitude","altitude":null},"isVisible":true,"visConfig":{"radius":10,"fixedRadius":false,"opacity":0.8,"outline":false,"thickness":2,"strokeColor":null,"colorRange":{"name":"Global Warming","type":"sequential","category":"Uber","colors":["#5A1846","#900C3F","#C70039","#E3611C","#F1920E","#FFC300"]},"strokeColorRange":{"name":"Global Warming","type":"sequential","category":"Uber","colors":["#5A1846","#900C3F","#C70039","#E3611C","#F1920E","#FFC300"]},"radiusRange":[0,50],"filled":true},"hidden":false,"textLabel":[{"field":null,"color":[255,255,255],"size":18,"offset":[0,0],"anchor":"start","alignment":"center"}]},"visualChannels":{"colorField":null,"colorScale":"quantile","strokeColorField":null,"strokeColorScale":"quantile","sizeField":null,"sizeScale":"linear"}},{"id":"c64x49g","type":"point","config":{"dataId":"data","label":"end","color":[218,0,0],"highlightColor":[252,242,26,255],"columns":{"lat":"endLatitude","lng":"endLongitude","altitude":null},"isVisible":true,"visConfig":{"radius":10,"fixedRadius":false,"opacity":0.8,"outline":false,"thickness":2,"strokeColor":null,"colorRange":{"name":"Global Warming","type":"sequential","category":"Uber","colors":["#5A1846","#900C3F","#C70039","#E3611C","#F1920E","#FFC300"]},"strokeColorRange":{"name":"Global Warming","type":"sequential","category":"Uber","colors":["#5A1846","#900C3F","#C70039","#E3611C","#F1920E","#FFC300"]},"radiusRange":[0,50],"filled":true},"hidden":false,"textLabel":[{"field":null,"color":[255,255,255],"size":18,"offset":[0,0],"anchor":"start","alignment":"center"}]},"visualChannels":{"colorField":null,"colorScale":"quantile","strokeColorField":null,"strokeColorScale":"quantile","sizeField":null,"sizeScale":"linear"}},{"id":"xbdqwbb","type":"line","config":{"dataId":"data","label":"start -> end line","color":[30,150,190],"highlightColor":[252,242,26,255],"columns":{"lat0":"startLatitude","lng0":"startLongitude","alt0":null,"lat1":"endLatitude","lng1":"endLongitude","alt1":null},"isVisible":true,"visConfig":{"opacity":0.8,"thickness":2,"colorRange":{"name":"Custom Palette","type":"custom","category":"Custom","colors":["#a6cee3","#1f78b4","#b2df8a","#33a02c","#fb9a99","#e31a1c","#fdbf6f","#ff7f00","#cab2d6","#6a3d9a","#ffff99","#b15928","#49493f","#f800c0"]},"sizeRange":[0,10],"targetColor":null,"elevationScale":1},"hidden":false,"textLabel":[{"field":null,"color":[255,255,255],"size":18,"offset":[0,0],"anchor":"start","alignment":"center"}]},"visualChannels":{"colorField":{"name":"activityType","type":"string"},"colorScale":"ordinal","sizeField":null,"sizeScale":"linear"}}],"interactionConfig":{"tooltip":{"fieldsToShow":{"data":[{"name":"startAddress","format":null},{"name":"startName","format":null},{"name":"startTimestamp","format":null},{"name":"endAddress","format":null},{"name":"endName","format":null},{"name":"endTimestamp","format":null},{"name":"confidence","format":null},{"name":"transitPath","format":null},{"name":"distanceMeters","format":null},{"name":"activityType","format":null}]},"compareMode":false,"compareType":"absolute","enabled":true},"brush":{"size":0.5,"enabled":false},"geocoder":{"enabled":false},"coordinate":{"enabled":false}},"layerBlending":"normal","splitMaps":[],"animationConfig":{"currentTime":null,"speed":1}},"mapState":{"bearing":0,"dragRotate":false,"latitude":45.723304634494724,"longitude":4.649325630519184,"pitch":0,"zoom":5.807773337936039,"isSplit":false},"mapStyle":{"styleType":"tqwsxjb","topLayerGroups":{},"visibleLayerGroups":{"label":true,"road":true,"building":true,"water":true,"land":true},"threeDBuildingColor":[194.6103322548211,191.81688250953655,185.2988331038727],"mapStyles":{"tqwsxjb":{"accessToken":null,"custom":true,"id":"tqwsxjb","label":"Mapbox Streets","url":"mapbox://styles/mapbox/streets-v11"}}}}},"label":"trips"}},{"showTable":false,"id":"Records","sql":"WITH a AS ( SELECT * FROM Records ORDER BY Records.timestamp DESC LIMIT 100000 ) SELECT a.latitude, a.longitude, a.timestamp, a.accuracy, a.source, ActivitySegment.activityType FROM a, ActivitySegment WHERE a.timestamp >= startTimestamp AND a.timestamp <= endTimestamp ","files":["LOCATION_HISTORY"],"visualization":"ChartViewGenericMap.vue","title":"Records","text":"This map shows records associated to a trip with the color corresponding to an activity type:","vizProps":{"keplerConfig":{"version":"v1","config":{"visState":{"filters":[],"layers":[{"id":"r9fyctw","type":"point","config":{"dataId":"data","label":"Point","color":[18,147,154],"highlightColor":[252,242,26,255],"columns":{"lat":"latitude","lng":"longitude","altitude":null},"isVisible":true,"visConfig":{"radius":5,"fixedRadius":false,"opacity":0.8,"outline":false,"thickness":2,"strokeColor":null,"colorRange":{"name":"Custom Palette","type":"custom","category":"Custom","colors":["#a6cee3","#1f78b4","#b2df8a","#33a02c","#fb9a99","#e31a1c","#fdbf6f","#ff7f00","#cab2d6","#6a3d9a","#ffff99","#b15928","#49493f","#f800c0"]},"strokeColorRange":{"name":"Global Warming","type":"sequential","category":"Uber","colors":["#5A1846","#900C3F","#C70039","#E3611C","#F1920E","#FFC300"]},"radiusRange":[0,50],"filled":true},"hidden":false,"textLabel":[{"field":null,"color":[255,255,255],"size":18,"offset":[0,0],"anchor":"start","alignment":"center"}]},"visualChannels":{"colorField":{"name":"activityType","type":"string"},"colorScale":"ordinal","strokeColorField":null,"strokeColorScale":"quantile","sizeField":null,"sizeScale":"linear"}}],"interactionConfig":{"tooltip":{"fieldsToShow":{"data":[{"name":"timestamp","format":null},{"name":"accuracy","format":null},{"name":"source","format":null},{"name":"activityType","format":null}]},"compareMode":false,"compareType":"absolute","enabled":true},"brush":{"size":0.5,"enabled":false},"geocoder":{"enabled":false},"coordinate":{"enabled":false}},"layerBlending":"normal","splitMaps":[],"animationConfig":{"currentTime":null,"speed":1}},"mapState":{"bearing":0,"dragRotate":false,"latitude":46.3694608867237,"longitude":6.506723131765135,"pitch":0,"zoom":7.78697017968798,"isSplit":false},"mapStyle":{"styleType":"tqwsxjb","topLayerGroups":{},"visibleLayerGroups":{"label":true,"road":true,"building":true,"water":true,"land":true},"threeDBuildingColor":[194.6103322548211,191.81688250953655,185.2988331038727],"mapStyles":{"tqwsxjb":{"accessToken":null,"custom":true,"id":"tqwsxjb","label":"Mapbox Streets","url":"mapbox://styles/mapbox/streets-v11"}}}}},"showButton":true}},{"showTable":false,"id":"WifiScan","sql":"SELECT mac, AVG(latitude) AS latitude, AVG(longitude) AS longitude, COUNT(*) AS number_of_detections FROM WifiScan INNER JOIN MacAdresses ON WifiScan.id = MacAdresses.macId GROUP BY mac ORDER BY COUNT() DESC ","files":["LOCATION_HISTORY"],"visualization":"ChartViewGenericMap.vue","title":"Wifi","text":"This map shows where your phone detected mac addresses with the size corresponding to the number of times it was detected:","vizProps":{"keplerConfig":{"version":"v1","config":{"visState":{"filters":[],"layers":[{"id":"0dpan25","type":"point","config":{"dataId":"data","label":"Point","color":[218,0,0],"highlightColor":[252,242,26,255],"columns":{"lat":"latitude","lng":"longitude","altitude":null},"isVisible":true,"visConfig":{"radius":10,"fixedRadius":false,"opacity":0.8,"outline":false,"thickness":2,"strokeColor":null,"colorRange":{"name":"Global Warming","type":"sequential","category":"Uber","colors":["#5A1846","#900C3F","#C70039","#E3611C","#F1920E","#FFC300"]},"strokeColorRange":{"name":"Global Warming","type":"sequential","category":"Uber","colors":["#5A1846","#900C3F","#C70039","#E3611C","#F1920E","#FFC300"]},"radiusRange":[10,30],"filled":true},"hidden":false,"textLabel":[{"field":null,"color":[255,255,255],"size":18,"offset":[0,0],"anchor":"start","alignment":"center"}]},"visualChannels":{"colorField":null,"colorScale":"quantile","strokeColorField":null,"strokeColorScale":"quantile","sizeField":{"name":"number_of_detections","type":"integer"},"sizeScale":"sqrt"}}],"interactionConfig":{"tooltip":{"fieldsToShow":{"data":[{"name":"mac","format":null},{"name":"number_of_detections","format":null}]},"compareMode":false,"compareType":"absolute","enabled":true},"brush":{"size":0.5,"enabled":false},"geocoder":{"enabled":false},"coordinate":{"enabled":false}},"layerBlending":"normal","splitMaps":[],"animationConfig":{"currentTime":null,"speed":1}},"mapState":{"bearing":0,"dragRotate":false,"latitude":46.41269271195032,"longitude":6.560159114941752,"pitch":0,"zoom":9,"isSplit":false},"mapStyle":{"styleType":"tqwsxjb","topLayerGroups":{},"visibleLayerGroups":{"label":true,"road":true,"building":true,"water":true,"land":true},"threeDBuildingColor":[194.6103322548211,191.81688250953655,185.2988331038727],"mapStyles":{"tqwsxjb":{"accessToken":null,"custom":true,"id":"tqwsxjb","label":"Mapbox Streets","url":"mapbox://styles/mapbox/streets-v11"}}}}},"label":"mac adresses"}}],"version":1}');!function(e){e.INTEGER="INTEGER",e.TEXT="TEXT",e.FLOAT="FLOAT",e.DATE="DATE"}(b||(b={})),function(e){e.value="value",e.path="path",e.pointer="pointer",e.parent="parent",e.parentProperty="parentProperty",e.all="all"}(C||(C={}));var L=b.TEXT,S=b.INTEGER,k=b.FLOAT,E=new w({viewerVersion:1,databaseConfig:{tables:[{name:"ActivitySegment",columns:[["startLatitude",S],["startLongitude",S],["startAddress",L],["startName",L],["startTimestamp",L],["endLatitude",S],["endLongitude",S],["endAddress",L],["endName",L],["endTimestamp",L],["confidence",L],["transitPath",L],["distanceMeters",k],["activityType",L]]},{name:"PlaceVisit",columns:[["latitude",S],["longitude",S],["address",L],["name",L],["startTimestamp",L],["endTimestamp",L],["placeVisitImportance",k],["visitConfidence",k],["locationConfidence",k],["duration",k],["semanticType",L]]},{name:"Winners",columns:[["id",S],["winnerLatitude",S],["winnerLongitude",S],["winnerAddress",L],["winnerName",L],["winnerConfidence",k],["winnerSemanticType",L],["startTimestamp",L],["endTimestamp",L]],primaryKey:"id"},{name:"Losers",columns:[["loserId",S],["loserLatitude",S],["loserLongitude",S],["loserAddress",L],["loserName",L],["loserConfidence",k],["loserSemanticType",L]],foreignKeys:[{columns:"loserId",reference:{table:"Winners",columns:"id"}}]},{name:"Records",columns:[["latitude",S],["longitude",S],["timestamp",L],["accuracy",S],["activityType",L],["activityConfidence",S],["source",L]]},{name:"WifiScan",columns:[["id",S],["latitude",S],["longitude",S],["timestamp",L]],primaryKey:"id"},{name:"MacAdresses",columns:[["macId",S],["mac",S]],foreignKeys:[{columns:"macId",reference:{table:"WifiScan",columns:"id"}}]}],getters:[{fileId:"LOCATION_HISTORY",path:"$.timelineObjects[*].activitySegment",table:"ActivitySegment",options:{callback:function(e){var t,n=e;n.startLocation.latitudeE7*=1e-7,n.startLocation.longitudeE7*=1e-7,n.endLocation.latitudeE7*=1e-7,n.endLocation.longitudeE7*=1e-7,n.startLocation.address="undefined"===n.startLocation.address?null:n.startLocation.address,n.endLocation.address="undefined"===n.endLocation.address?null:n.endLocation.address,n.startLocation.name="undefined"===n.startLocation.name?null:n.startLocation.name,n.endLocation.name="undefined"===n.endLocation.name?null:n.endLocation.name,n.transitPath=n.transitPath&&null!==(t=n.transitPath)?t.name+": "+t.transitStops[0].name+" -> "+t.transitStops[t.transitStops.length-1].name:null}},getters:[{column:"startLatitude",path:"$.startLocation.latitudeE7"},{column:"startLongitude",path:"$.startLocation.longitudeE7"},{column:"startAddress",path:"$.startLocation.address"},{column:"startName",path:"$.startLocation.name"},{column:"startTimestamp",path:"$.duration.startTimestamp"},{column:"endLatitude",path:"$.endLocation.latitudeE7"},{column:"endLongitude",path:"$.endLocation.longitudeE7"},{column:"endAddress",path:"$.endLocation.address"},{column:"endName",path:"$.endLocation.name"},{column:"endTimestamp",path:"$.duration.endTimestamp"},{column:"confidence",path:"$.confidence"},{column:"transitPath",path:"$.transitPath"},{column:"distanceMeters",path:"$.distance"},{column:"activityType",path:"$.activityType"}]},{fileId:"LOCATION_HISTORY",path:"$.timelineObjects.[*].placeVisit",table:"PlaceVisit",options:{callback:function(e){var t,n,a,i,o=e;o.location.latitudeE7*=1e-7,o.location.longitudeE7*=1e-7,o.location.semanticType="undefined"===o.location.semanticType?null:o.location.semanticType,o.duration.time=(t=o.duration.startTimestamp,n=o.duration.endTimestamp,a=new Date(t).getTime(),i=new Date(n).getTime(),Math.floor(Math.abs(a-i)/1e3))}},getters:[{column:"latitude",path:"$.location.latitudeE7"},{column:"longitude",path:"$.location.longitudeE7"},{column:"address",path:"$.location.address"},{column:"name",path:"$.location.name"},{column:"startTimestamp",path:"$.duration.startTimestamp"},{column:"endTimestamp",path:"$.duration.endTimestamp"},{column:"placeVisitImportance",path:"$.placeVisitImportance"},{column:"visitConfidence",path:"$.visitConfidence"},{column:"locationConfidence",path:"$.locationConfidence"},{column:"duration",path:"$.duration.time"},{column:"semanticType",path:"$.location.semanticType"}]},{fileId:"LOCATION_HISTORY",path:"$.timelineObjects.[*].placeVisit",table:"Winners",options:{callback:function(e){var t=e;t.location.latitudeE7*=1e-7,t.location.longitudeE7*=1e-7,t.location.semanticType="undefined"===t.location.semanticType?null:t.location.semanticType,t.location.address="undefined"===t.location.address?null:t.location.address,t.location.name="undefined"===t.location.name?null:t.location.name}},getters:[{column:"winnerLatitude",path:"$.location.latitudeE7"},{column:"winnerLongitude",path:"$.location.longitudeE7"},{column:"winnerAddress",path:"$.location.address"},{column:"winnerName",path:"$.location.name"},{column:"winnerConfidence",path:"$.location.locationConfidence"},{column:"winnerSemanticType",path:"$.location.semanticType"},{column:"startTimestamp",path:"$.duration.startTimestamp"},{column:"endTimestamp",path:"$.duration.endTimestamp"},{path:"$.otherCandidateLocations[*]",table:"Losers",options:{callback:function(e){var t=e;t.latitudeE7*=1e-7,t.longitudeE7*=1e-7,t.semanticType="undefined"===t.semanticType?null:t.semanticType,t.address="undefined"===t.address?null:t.address,t.name="undefined"===t.name?null:t.name}},getters:[{column:"loserId",reference:{table:"Winners",column:"id",autoincrementedId:!0}},{column:"loserLatitude",path:"$.latitudeE7"},{column:"loserLongitude",path:"$.longitudeE7"},{column:"loserAddress",path:"$.address"},{column:"loserName",path:"$.name"},{column:"loserConfidence",path:"$.locationConfidence"},{column:"loserSemanticType",path:"$.semanticType"}]}]},{fileId:"LOCATION_HISTORY",path:"$.locations[*]",table:"Records",options:{callback:function(e){var t=e;t.latitudeE7*=1e-7,t.longitudeE7*=1e-7}},getters:[{column:"latitude",path:"$.latitudeE7"},{column:"longitude",path:"$.longitudeE7"},{column:"timestamp",path:"$.timestamp"},{column:"accuracy",path:"$.accuracy"},{column:"activityType",path:"$.activity[0].activity[0].type"},{column:"activityConfidence",path:"$.activity[0].activity[0].confidence"},{column:"source",path:"$.source"}]},{fileId:"LOCATION_HISTORY",path:"$.locations[*]",table:"WifiScan",options:{callback:function(e){var t=e;t.latitudeE7*=1e-7,t.longitudeE7*=1e-7}},getters:[{column:"latitude",path:"$.latitudeE7"},{column:"longitude",path:"$.longitudeE7"},{column:"timestamp",path:"$.timestamp"},{path:"$.activeWifiScan.accessPoints[*]",table:"MacAdresses",options:{callback:function(e){var t=e;t.mac=function(e){for(var t=String(e.toString(16));t.length<12;)t="0"+t;return function(e,t){var n,a,i=[];for(n=0,a=e.length;n<a;n+=2)i.push(e.substr(n,2));return i}(t).join(":")}(t.mac)}},getters:[{column:"macId",reference:{table:"WifiScan",column:"id",autoincrementedId:!0}},{column:"mac",path:"$.mac"}]}]}]},files:{LOCATION_HISTORY:"**/*.json"},keepOnlyFiles:!0},T,c,"file:///Users/francoisquellec/Documents/Hestia.ai.nosync/hestialabs-experiences/packages/packages/experiences/google/src/index.ts"),O=l.Z},1255:function(e,t,n){"use strict";function o(e){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o(e)}n.d(t,"a",(function(){return o}))},1256:function(e,t,n){var o=n(371),r=n(666);o("toPrimitive"),r()},1257:function(e,t,n){var o=n(54),r=n(85),l=n(1258),c=n(37)("toPrimitive"),d=Date.prototype;o(d,c)||r(d,c,l)},1258:function(e,t,n){"use strict";var o=n(57),r=n(665),l=TypeError;e.exports=function(e){if(o(this),"string"===e||"default"===e)e="string";else if("number"!==e)throw l("Incorrect hint");return r(this,e)}},1259:function(e,t,n){n(371)("asyncIterator")},1260:function(e,t,n){n(5)({target:"Object",stat:!0},{setPrototypeOf:n(204)})}}]);