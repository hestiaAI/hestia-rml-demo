{"version":3,"file":"data-experience.umd.min.6636.js","mappings":"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","sources":["webpack://data-experience/./src/components/chart/view/dc/TopChart.vue?392d","webpack://data-experience/src/components/chart/view/dc/TopChart.vue","webpack://data-experience/./src/components/chart/view/dc/TopChart.vue?b9f6","webpack://data-experience/./src/components/chart/view/dc/TopChart.vue","webpack://data-experience/./src/components/chart/view/filters/ChartViewFilters.vue?cff0","webpack://data-experience/src/components/chart/view/filters/ChartViewFilters.vue","webpack://data-experience/./src/components/chart/view/filters/ChartViewFilters.vue?e912","webpack://data-experience/./src/components/chart/view/filters/ChartViewFilters.vue","webpack://data-experience/./src/components/chart/view/dc/mixin.js","webpack://data-experience/./src/components/chart/view/utils/dc-axis.js","webpack://data-experience/./src/components/chart/view/utils/dc-helpers.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('VContainer',{style:(_vm.cssProps)},[_c('div',{staticStyle:{\"display\":\"flex\"}},[_c('strong',[_vm._v(_vm._s(_vm.title))]),_c('VSpacer'),_c('div',{attrs:{\"id\":`top-search-${_vm.graphId}`}})],1),_c('ChartViewFilters'),_c('div',{class:{ isScrollable: _vm.isScrollable },attrs:{\"id\":`top-chart-${_vm.graphId}`}}),_c('div',{attrs:{\"id\":`top-chart-${_vm.graphId}-axis`}}),(_vm.topK < _vm.total)?_c('div',{directives:[{name:\"t\",rawName:\"v-t\",value:({ path: 'show-top-n', args: { n: _vm.topK, m: _vm.total } }),expression:\"{ path: 'show-top-n', args: { n: topK, m: total } }\"}],staticClass:\"text-caption\"}):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <VContainer :style=\"cssProps\">\n    <div style=\"display: flex\">\n        <strong>{{ title }}</strong>\n        <VSpacer />\n        <div :id=\"`top-search-${graphId}`\" />\n    </div>\n    <ChartViewFilters />\n    <div :id=\"`top-chart-${graphId}`\" :class=\"{ isScrollable }\"></div>\n    <div :id=\"`top-chart-${graphId}-axis`\"></div>\n    <div v-if=\"topK < total\" class=\"text-caption\" v-t=\"{ path: 'show-top-n', args: { n: topK, m: total } }\"></div>\n  </VContainer>\n</template>\n<script>\nimport * as d3 from 'd3'\nimport * as dc from 'dc'\nimport { removeEmptyBins } from '../utils/dc-helpers'\nimport mixin from './mixin'\nimport ChartViewFilters from '../filters/ChartViewFilters.vue'\nrequire('../utils/dc-axis.js')\n\n// Remove warning on default colorscheme, even if not used..\ndc.config.defaultColors(d3.schemePaired)\n\nexport default {\n  components: { ChartViewFilters },\n  mixins: [mixin],\n  props: {\n    /**\n     * Column name of the {values} to be displayed/compared in the graph\n     */\n    valueAccessor: {\n      type: String,\n      required: true\n    },\n    /**\n     * Whether or not each value should be considered as an array\n     * eg here col2 should be considered and an array:\n     * [ { col1: \"test\", col2: [\"test1\", \"test2\"] }, ... ]\n     */\n    valueAsArray: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * If defined, calculates the sum of the column named {sumAccessor} over {valueAccessor}.\n     * Otherwise, takes the count of the unique {valueAccessor}.\n     */\n    sumAccessor: {\n      type: String,\n      default: ''\n    },\n    /**\n     * Number of bars to display in descendant order\n     */\n    topK: {\n      type: Number,\n      default: 10\n    },\n    /**\n     * Define if the chart should be scrollable to see all values\n     */\n    isScrollable: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * If one of {valueAccessor} is null, replace the value with a default\n     */\n    defaultValue: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      total: 'N/A'\n    }\n  },\n  computed: {\n    cssProps() {\n      return {\n        '--height': (this.height + 6.5) + 'px'\n      }\n    }\n  },\n  methods: {\n    drawViz() {\n      // Init top row chart & search\n      const topChart = new dc.RowChart(`#top-chart-${this.graphId}`)\n      const topSearch = this.createTextFilterWidget(`#top-search-${this.graphId}`)\n\n      // Bind reset filters link\n      d3.select(`#top-chart-${this.graphId} a.reset`).on('click', function() {\n        topChart.filterAll()\n        dc.redrawAll()\n      })\n\n      // Create dimensions\n      const topDimension = this.ndx.dimension((d) => {\n        if (this.valueAsArray) {\n          return JSON.parse(d[this.valueAccessor]) || [this.defaultValue]\n        } else {\n          return d[this.valueAccessor] || this.defaultValue\n        }\n      }, this.valueAsArray)\n\n      topSearch.dimension(this.ndx.dimension((d) => {\n        if (this.valueAsArray) {\n          return JSON.parse(d[this.valueAccessor].toLowerCase()) || [this.defaultValue.toLowerCase()]\n        } else {\n          return (d[this.valueAccessor] || this.defaultValue).toLowerCase()\n        }\n      }, this.valueAsArray))\n\n      // Create group\n      const topGroup = this.sumAccessor ? topDimension.group().reduceSum(d => d[this.sumAccessor]) : topDimension.group().reduceCount()\n      this.total = topGroup.size()\n      const height = this.isScrollable ? Math.max(Math.min(this.topK, topGroup.size()) * 20, this.height) : this.height\n      const width = d3.select(`#top-chart-${this.graphId}`).node().getBoundingClientRect().width\n\n      // Create top row chart\n      topChart\n        .width(width)\n        .height(height)\n        .margins({ top: 20, left: 10, right: 10, bottom: -5 })\n        .group(this.isScrollable ? topGroup : removeEmptyBins(topGroup))\n        .dimension(topDimension)\n        .ordinalColors([this.colorPalette[this.position % this.colorPalette.length]])\n        .label(d => d.key)\n        .data(group => group.top(this.topK))\n        .title(d => `${d.value} ${this.valueLabel}`)\n        .elasticX(true)\n        .xAxis()\n        .ticks(4)\n\n      dc.axisChart(`#top-chart-${this.graphId}-axis`)\n        .margins({ top: 0, left: 10, right: 10, bottom: 10 })\n        .height(20)\n        .width(width)\n        .dimension(topDimension)\n        .group(topGroup)\n        .elastic(true)\n        .axis()\n        .ticks(4)\n\n      dc.renderAll()\n      // addXLabel(topChart, this.valueLabel)\n    }\n  }\n}\n</script>\n<style scoped>\n::v-deep .dc-text-filter-input {\n  background: none;\n  color: #596471;\n  border-bottom: 1px solid #596471;\n  outline: none;\n}\n.isScrollable {\n  overflow-y: auto;\n  height: var(--height);\n}\n</style>\n","import mod from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TopChart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TopChart.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TopChart.vue?vue&type=template&id=c8af34f6&scoped=true&\"\nimport script from \"./TopChart.vue?vue&type=script&lang=js&\"\nexport * from \"./TopChart.vue?vue&type=script&lang=js&\"\nimport style0 from \"./TopChart.vue?vue&type=style&index=0&id=c8af34f6&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"c8af34f6\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('p',{staticClass:\"filters\"},[_c('span',[_vm._v(\" \"+_vm._s(_vm.$t('Current filter'))+\" \"),_c('span',{staticClass:\"filter\"})]),_c('a',{directives:[{name:\"t\",rawName:\"v-t\",value:('reset'),expression:\"'reset'\"}],staticClass:\"reset\",staticStyle:{\"display\":\"none\"}})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <p class=\"filters\">\n    <span>\n      {{ $t('Current filter') }}\n      <span class=\"filter\" />\n    </span>\n    <a v-t=\"'reset'\" class=\"reset\" style=\"display: none\" />\n  </p>\n</template>\n\n<script>\nexport default {\n\n}\n</script>\n","import mod from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewFilters.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewFilters.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewFilters.vue?vue&type=template&id=2f9280d1&\"\nimport script from \"./ChartViewFilters.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewFilters.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { TextFilterWidget } from 'dc'\n\nexport default {\n  props: {\n    /**\n     * The crossfilter object that contains the values and filters\n     * e,g: crossfilter(this.results)\n     */\n    ndx: {\n      type: Object,\n      required: true\n    },\n    /**\n     * Title of the graph\n     */\n    title: {\n      type: String,\n      default: ''\n    },\n    /**\n     * Label to display in the axis\n     */\n    valueLabel: {\n      type: String,\n      default: 'records'\n    },\n    /**\n     * The height of the graph\n     * the width is dynamically computed from it's parent\n     */\n    height: {\n      type: Number,\n      default: 250\n    },\n    /**\n     * Position of the graph in the dashboard\n     * Determine the color to pick in colorPalette\n     */\n    position: {\n      type: Number,\n      required: true\n    },\n    /**\n     * Colors to use in the graph\n     * Default to Set 3: https://observablehq.com/@d3/color-schemes\n     */\n    colorPalette: {\n      type: Array,\n      default: () => ['#bebada', '#8dd3c7', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#bc80bd', '#ccebc5']\n    }\n    /**\n     '#58539E',\n        '#847CEB',\n        '#605BAB',\n        '#4A4685',\n        '#35325E'\n     */\n  },\n  data() {\n    return {\n      graphId: 'graph_' + this._uid\n    }\n  },\n  mounted() {\n    this.drawViz()\n  },\n  watch: {\n    values() {\n      this.drawViz()\n    }\n  },\n  methods: {\n    createTextFilterWidget(parent, placeholder = 'Search') {\n      const widget = new TextFilterWidget(parent)\n      widget.placeHolder(this.$t(placeholder))\n      return widget\n    }\n  }\n}\n","/* eslint-disable no-import-assign */\nimport * as d3 from 'd3'\nimport * as dc from 'dc'\n/**\n * Separate axis implementation.\n * by @ialarmedalien\n * Source / Author: https://gist.github.com/gordonwoodhull/13689975c3ec069a4e0bef380846157b\n * Examples:\n * - {@link https://bl.ocks.org/ialarmedalien/0a4bf25ffc0fb96ae569a20f91957bc1 eslint on dc.js source}\n * @class axisChart\n * @memberof dc\n * @mixes dc.capMixin\n * @mixes dc.marginMixin\n * @mixes dc.baseMixin\n * @example\n * // create an axis under #chart-container1 element using the default global chart group\n * var chart1 = dc.axisChart('#chart-container1');\n * // create an axis under #chart-container2 element using chart group A\n * var chart2 = dc.axisChart('#chart-container2', 'chartGroupA');\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.axisChart} a dc axis chart\n */\ndc.axisChart = function(parent, chartGroup) {\n  let _g\n\n  const _chart = new (dc.CapMixin(dc.MarginMixin))()\n\n  let _scale\n\n  let _elastic\n\n  let _type\n\n  let _theAxis = d3.axisBottom()\n\n  let _axisData\n\n  const validAxisTypes = ['axisBottom', 'axisTop', 'axisLeft', 'axisRight']\n\n  _chart.axisCap = _chart.cap\n\n  function calculateAxisScale() {\n    if (!_scale || _elastic) {\n      const extent = d3.extent(_axisData, d => _chart.cappedValueAccessor(d))\n      if (extent[0] > 0) {\n        extent[0] = 0\n      }\n      if (extent[1] < 0) {\n        extent[1] = 0\n      }\n      _scale = d3.scaleLinear().domain(extent)\n        .range([0, _chart.effectiveWidth()])\n    }\n    _theAxis.scale(_scale)\n  }\n\n  function drawAxis() {\n    let axisG = _g.select('g.axis')\n\n    calculateAxisScale()\n\n    if (axisG.empty()) {\n      axisG = _g.append('g').attr('class', 'axis')\n    }\n\n    dc.transition(axisG, _chart.transitionDuration(), _chart.transitionDelay())\n      .call(_theAxis)\n  }\n\n  _chart._doRender = function() {\n    _chart.resetSvg()\n\n    _g = _chart.svg()\n      .append('g')\n      .attr('transform', 'translate(' + _chart.margins().left + ',' + _chart.margins().top + ')')\n\n    drawChart()\n\n    return _chart\n  }\n\n  /**\n     * Gets or sets the axis type. The axis type can be any valid\n     * {@link https://github.com/d3/d3-axis d3 axis}. The default is\n     * axisBottom (a bottom axis).\n     * @method type\n     * @memberof dc.axisChart\n     * @instance\n     * @see {@link https://github.com/d3/d3-axis d3 axis}\n     * @param {d3.type} [type]\n     * @returns {string|dc.axisChart} no args: type string; args: axis chart\n     */\n\n  _chart.type = function(type) {\n    if (!arguments.length) {\n      return _type\n    }\n    // set the axis type here\n    if (validAxisTypes.indexOf(type) !== -1) {\n      _theAxis = d3[type]()\n      _type = type\n    } else {\n      console.error(type + ' is not a valid d3 axis type')\n    }\n\n    return _chart\n  }\n\n  /**\n     * Gets or sets the axis scale. The axis scale can be any d3\n     * {@link https://github.com/d3/d3-scale quantitive scale}.\n     * @method scale\n     * @memberof dc.axisChart\n     * @instance\n     * @see {@link https://github.com/d3/d3-scale quantitive scale}\n     * @param {d3.scale} [scale] any value d3 scale\n     * @returns {d3.scale|dc.axisChart} no args: chart scale; args: axis chart\n     */\n  _chart.scale = function(scale) {\n    if (!arguments.length) {\n      return _scale\n    }\n    _scale = scale\n    return _chart\n  }\n\n  /**\n     * Get or set the elasticity on the axis. If this attribute is set to true,\n     * then the axis will rescale to auto-fit the data range when filtered.\n     * @method elastic\n     * @memberof dc.axisChart\n     * @instance\n     * @param {Boolean} [elastic] any valid boolean\n     * @returns {Boolean|dc.axisChart} no args: boolean; args: axis chart\n     */\n  _chart.elastic = function(elastic) {\n    if (!arguments.length) {\n      return _elastic\n    }\n    _elastic = elastic\n    return _chart\n  }\n\n  /**\n     * Get the axis for the axis chart instance.\n     * See the {@link https://github.com/d3/d3-axis d3 axis object}\n     * documention for more information.\n     * @method axis\n     * @memberof dc.axisChart\n     * @instance\n     * @see {@link https://github.com/d3/d3-axis d3.axis}\n     * @example\n     * // customize axis tick format\n     * chart.axis().tickFormat(function (v) {return v + '%';});\n     * // customize axis tick values\n     * chart.axis().tickValues([0, 100, 200, 300]);\n     * @returns {d3.axis} d3 axis\n     */\n  _chart.axis = function() {\n    return _theAxis\n  }\n\n  function drawChart() {\n    _axisData = _chart.data()\n    drawAxis()\n  }\n\n  _chart._doRedraw = function() {\n    drawChart()\n    return _chart\n  }\n\n  return _chart.anchor(parent, chartGroup)\n}\n","import * as d3 from 'd3'\nimport * as dc from 'dc'\n\n// Functions to add x-label & y-label to Row Charts (Unsupported by dc.js)\n// https://www.intothevoid.io/data-visualization/row-chart-axis-labels-dc-js/\n// Use with:\n// contentChart.on('postRender', function (chart) {\n//  addXLabel(chart, 'Hours watched')\n// })\nexport function addXLabel(chartToUpdate, displayText) {\n  const textSelection = chartToUpdate\n    .svg()\n    .append('text')\n    .attr('class', 'x-axis-label')\n    .attr('text-anchor', 'middle')\n    .attr('x', chartToUpdate.width() / 2)\n    .attr('y', chartToUpdate.height() - 10)\n    .text(displayText)\n  const textDims = textSelection.node().getBBox()\n  const chartMargins = chartToUpdate.margins()\n\n  // Dynamically adjust positioning after reading text dimension from DOM\n  textSelection\n    .attr(\n      'x',\n      chartMargins.left +\n        (chartToUpdate.width() - chartMargins.left - chartMargins.right) / 2\n    )\n    .attr('y', chartToUpdate.height() - Math.ceil(textDims.height) / 2)\n}\nexport function addYLabel(chartToUpdate, displayText) {\n  const textSelection = chartToUpdate\n    .svg()\n    .append('text')\n    .attr('class', 'y-axis-label')\n    .attr('text-anchor', 'middle')\n    .attr('transform', 'rotate(-90)')\n    .attr('x', -chartToUpdate.height() / 2)\n    .attr('y', 10)\n    .text(displayText)\n  const textDims = textSelection.node().getBBox()\n  const chartMargins = chartToUpdate.margins()\n\n  // Dynamically adjust positioning after reading text dimension from DOM\n  textSelection\n    .attr(\n      'x',\n      -chartMargins.top -\n        (chartToUpdate.height() - chartMargins.top - chartMargins.bottom) / 2\n    )\n    .attr(\n      'y',\n      Math.max(\n        Math.ceil(textDims.height),\n        chartMargins.left - Math.ceil(textDims.height) - 5\n      )\n    )\n}\n\n/**\n * Transform a simple group to a cumulative one in order\n * to make cumulative line chart\n * @param {Crossfilter group} group the group to transform\n * @returns the cumulative group\n */\nexport function createCumulativeGroup(group) {\n  return {\n    all() {\n      const cumulate = {}\n      return group.all().map(function(d) {\n        if (cumulate[d.key[0]]) {\n          cumulate[d.key[0]] += d.value\n        } else {\n          cumulate[d.key[0]] = d.value\n        }\n        return { key: d.key, value: cumulate[d.key[0]] }\n      })\n    }\n  }\n}\n\n/**\n * Remove datapoints that are null in a crossfilter group\n * Used to hide empty bins in a bar graph\n * @param {Crossfilter group} group the group to transform\n * @returns the cleaned group\n */\nexport function removeEmptyBins(group) {\n  return {\n    top(n) {\n      return group\n        .top(Infinity)\n        .filter(function(d) {\n          return d.value.count !== 0 && d.value !== 0\n        })\n        .slice(0, n)\n    }\n  }\n}\n\nexport function addPiePercentage(chart) {\n  chart.selectAll('text.pie-slice.pie-label').call(function(t) {\n    t.each(function(d) {\n      const self = d3.select(this)\n      let text = self.text()\n      if (text.length > 14) { text = text.substring(0, 14) + '.. ' }\n      if (text.length > 0) {\n        text =\n          text +\n          ' (' +\n          dc.utils.printSingleValue(\n            ((d.endAngle - d.startAngle) / (2 * Math.PI)) * 100\n          ) +\n          '%)'\n      }\n      self.text(text)\n    })\n  })\n}\n"],"names":["render","_vm","this","_c","_self","style","staticStyle","_v","_s","title","attrs","graphId","class","isScrollable","topK","total","directives","name","rawName","value","path","args","n","m","expression","staticClass","_e","staticRenderFns","dc","config","defaultColors","components","ChartViewFilters","mixins","mixin","props","valueAccessor","type","String","required","valueAsArray","Boolean","default","sumAccessor","Number","defaultValue","data","computed","cssProps","height","methods","drawViz","topChart","RowChart","topSearch","createTextFilterWidget","on","filterAll","redrawAll","topDimension","ndx","dimension","d","JSON","parse","toLowerCase","topGroup","group","reduceSum","reduceCount","size","Math","max","min","width","node","getBoundingClientRect","margins","top","left","right","bottom","removeEmptyBins","ordinalColors","colorPalette","position","length","label","key","valueLabel","elasticX","xAxis","ticks","axisChart","elastic","axis","renderAll","component","$t","Object","Array","_uid","mounted","watch","values","parent","placeholder","widget","TextFilterWidget","placeHolder","chartGroup","_g","_chart","_scale","_elastic","_type","_axisData","_theAxis","validAxisTypes","calculateAxisScale","extent","cappedValueAccessor","domain","range","effectiveWidth","scale","drawAxis","axisG","select","empty","append","attr","transitionDuration","transitionDelay","call","drawChart","axisCap","cap","_doRender","resetSvg","svg","arguments","indexOf","console","error","_doRedraw","anchor","addXLabel","chartToUpdate","displayText","textSelection","text","textDims","getBBox","chartMargins","ceil","addYLabel","createCumulativeGroup","all","cumulate","map","Infinity","filter","count","slice","addPiePercentage","chart","selectAll","t","each","self","substring","endAngle","startAngle","PI"],"sourceRoot":""}