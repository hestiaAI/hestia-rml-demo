{"version":3,"file":"data-experience.common.5049.js","mappings":";;;;;;;;;;;;;;;AAAA,+BAA+B,6BAA6B,sEAAsE,OAAO,sBAAsB,UAAU,sBAAsB,mIAAmI,8BAA8B,6EAA6E,qCAAqC,+CAA+C,+BAA+B,8EAA8E,sBAAsB,QAAQ,sBAAsB,mBAAmB,iDAAiD,6BAA6B,GAAG,aAAa,cAAc,iBAAiB,OAAO,sBAAsB,gBAAgB,OAAO,0DAA0D,KAAK,0BAA0B,QAAQ,mDAAmD,sBAAsB,6BAA6B,iBAAiB,OAAO,sBAAsB,gBAAgB,OAAO,gEAAgE,KAAK,yBAAyB,sBAAsB,iCAAiC,wBAAwB,OAAO,YAAY,KAAK,oBAAoB,oCAAoC,OAAO,6DAA6D,2JAA2J,mBAAmB,GAAG,YAAY,EAAE,8BAA8B,aAAa,EAAE,wIAAwI,sCAAsC,2FAA2F,gCAAgC,iDAAiD,oBAAoB,2BAA2B,iDAAiD,OAAO,aAAa,YAAY,OAAO,kBAAkB,gDAAgD,2BAA2B,qBAAqB,QAAQ,4CAA4C,KAAK,yBAAyB,0DAA0D,iCAAiC,kCAAkC,gCAAgC,OAAO,aAAa,mCAAmC,IAAI,mCAAmC,yBAAyB,qEAAqE,8CAA8C,0BAA0B;AACruF;AACA;;;;;;;;;;;;;;;;;;;;;ACgGwB;AACA;AACc;AACX;AACsB;AACc;AACmB;AACU;;AAE5F,uFAAe;AACf,qCAAqC,gEAA8B,8DAAqB;AACxF,WAAW,gBAAK;AAChB;AACA;AACA,WAAW,oBAAU;AACrB,YAAY,qBAAW;AACvB,aAAa,sBAAY;AACzB,YAAY,qBAAW;AACvB;AACA;AACA,kBAAkB,uBAAa;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,oBAAU;AACvB,iBAAiB,mCAAiB;AAClC;AACA;AACA;AACA,kBAAkB,uBAAW;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,WAAW;AACrC,4BAA4B,WAAW;AACvC,qBAAqB,kCAAiB;AACtC;AACA;AACA;AACA;AACA,uBAAuB,gCAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBACL;AACf;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBACS;AACpB;AACA,YAAY,mCAAkB;AAC9B,YAAY,mCAAkB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBACS;AACpB;AACA,YAAY,kCAAiB;AAC7B,YAAY,mCAAkB;AAC9B;AACA;AACA,gBAAgB,qBAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,YAAY;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,oCAAmB;AACjC,cAAc,oCAAmB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,YAAY;AAClB;AACA;AACA,MAAM,YAAY;AAClB,MAAM,YAAY;AAClB;AACA;AACA,CAAC;;;AC9T2J,CAAC,4FAAe,kDAAG,EAAC;;ACAhL;;;;;;;AEAqH;AACvC;AACL;AACzE,CAAmH;;;AAGnH;AACyG;AACzG,gBAAgB,sCAAU;AAC1B,EAAE,uDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,+DAAe;;;;;;;;;;;;;;;;ACnBf,+BAA+B,6BAA6B,yBAAyB,qBAAqB,wDAAwD,0CAA0C,aAAa,0BAA0B,OAAO,mCAAmC,KAAK,yBAAyB,gBAAgB,8DAA8D,8CAA8C,4BAA4B,uFAAuF,sCAAsC,OAAO,iBAAiB,qBAAqB,wCAAwC;AACrqB;AACA;;;;;;;;;;;;;ACiByE;AACT;AACiC;AACvB;;AAE1E,kFAAe;AACf,0BAA0B,mDAAwB,wDAAiB;AACnE,WAAW,6CAAuB;AAClC,CAAC;;;AC3BsJ,CAAC,uFAAe,6CAAG,EAAC;;;;ACAvE;AAC3B;AACL;;;AAGpE;AACA,CAAyG;AACzG,gBAAgB,sCAAU;AAC1B,EAAE,kDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,0DAAe;;;;;;;;;;;;;;;;AClBf,+BAA+B,6BAA6B,eAAe,yDAAyD,aAAa,UAAU,iDAAiD;AAC5M;AACA;;;;;;ACF2G;AAC3G;;;AAGA;AACA,CAA4G;AAC5G,gBAAgB,sCAAU;AAC1B;AACA,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe;;;;;;;;;;;;ACjBsB;AACJ;AACjC;AACmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB;AACxB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,iBAAiB;AACjB;AACA,yBAAyB,gDAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,+DAAe,8DAAK,QAAQ,qEAAe,CAAC","sources":["webpack://data-experience/./src/components/chart/view/ChartViewGenericDateViewer.vue?07cc","webpack://data-experience/src/components/chart/view/ChartViewGenericDateViewer.vue","webpack://data-experience/./src/components/chart/view/ChartViewGenericDateViewer.vue?343e","webpack://data-experience/./src/components/chart/view/ChartViewGenericDateViewer.vue?6f2e","webpack://data-experience/./src/components/chart/view/ChartViewGenericDateViewer.vue?7520","webpack://data-experience/./src/components/chart/view/ChartViewGenericDateViewer.vue","webpack://data-experience/./src/components/chart/view/ChartViewVRowWebShare.vue?ea0d","webpack://data-experience/src/components/chart/view/ChartViewVRowWebShare.vue","webpack://data-experience/./src/components/chart/view/ChartViewVRowWebShare.vue?2101","webpack://data-experience/./src/components/chart/view/ChartViewVRowWebShare.vue","webpack://data-experience/./src/components/chart/view/text/ChartViewTextSelectTimeRange.vue?13ad","webpack://data-experience/./src/components/chart/view/text/ChartViewTextSelectTimeRange.vue","webpack://data-experience/./src/components/chart/view/mixin.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return (_vm.values.length > 0)?_c('VContainer',[_c('VRow',[_c('VCol',{attrs:{\"cols\":\"12\",\"md\":\"7\"}},[_c('p',{staticClass:\"text-h6\"},[_vm._v(\" \"+_vm._s(_vm.$t(_vm.kViewBlock('graphTitle')))+\" \")]),(_vm.total === 0 && !_vm.currMinDate && !_vm.currMaxDate)?_c('p',{staticClass:\"text-subtitle-2\"},[_vm._v(\" \"+_vm._s(_vm.$t(_vm.kViewBlock('graphNoDate')))+\" \")]):_c('i18n',{staticClass:\"text-subtitle-2\",attrs:{\"path\":_vm.kViewBlock('datedEvents'),\"tag\":\"p\"},scopedSlots:_vm._u([_vm._l(({ currMinDate: _vm.currMinDate, currMaxDate: _vm.currMaxDate, total: _vm.total }),function(value,key){return {key:key,fn:function(){return [_c('span',{key:key,staticClass:\"font-weight-bold\",domProps:{\"textContent\":_vm._s(value)}})]},proxy:true}})],null,true)})],1),_c('VCol',{attrs:{\"cols\":\"12\",\"md\":\"2\"}},[_c('VSelect',{attrs:{\"items\":_vm.intervalNames,\"label\":_vm.$t('Time interval')},on:{\"change\":_vm.drawBarChart},model:{value:(_vm.selectTimeInt),callback:function ($$v) {_vm.selectTimeInt=$$v},expression:\"selectTimeInt\"}})],1),_c('VCol',{attrs:{\"cols\":\"12\",\"md\":\"3\"}},[_c('VSelect',{attrs:{\"items\":_vm.filesNames,\"label\":_vm.$tc('File', 2),\"multiple\":\"\"},on:{\"change\":_vm.filterFiles},scopedSlots:_vm._u([{key:\"prepend-item\",fn:function(){return [_c('VListItem',{attrs:{\"ripple\":\"\"},on:{\"click\":_vm.toggle}},[_c('VListItemAction',[_c('VIcon',{attrs:{\"color\":_vm.selectFiles.length > 0 ? 'indigo darken-4' : ''}},[_vm._v(\" \"+_vm._s(_vm.icon)+\" \")])],1),_c('VListItemContent',[_c('VListItemTitle',[_vm._v(\" \"+_vm._s(_vm.$t('Select All'))+\" \")])],1)],1),_c('VDivider',{staticClass:\"mt-2\"})]},proxy:true},{key:\"selection\",fn:function({ item, index }){return [(index === 0)?_c('span',[_vm._v(_vm._s(item.length > 13 ? item.slice(0, 13) + '..' : item))]):_vm._e(),(index === 1)?_c('span',{staticClass:\"grey--text text-caption\"},[_vm._v(\" (\"+_vm._s(_vm.$tc('plusXOther', _vm.selectFiles.length - 1))+\") \")]):_vm._e()]}}],null,false,1931396690),model:{value:(_vm.selectFiles),callback:function ($$v) {_vm.selectFiles=$$v},expression:\"selectFiles\"}})],1)],1),_c('ChartViewVRowWebShare',[_c('VCol',{attrs:{\"cols\":\"12\"}},[_c('div',{attrs:{\"id\":_vm.graphId}}),_c('ChartViewTextSelectTimeRange',[_c('VBtn',{staticClass:\"ma-1\",class:{ hide: !_vm.filtered },attrs:{\"x-small\":\"\",\"outlined\":\"\",\"color\":\"indigo\"},on:{\"click\":_vm.resetFilter}},[_vm._v(\" \"+_vm._s(_vm.$t('reset'))+\" \")])],1),_c('div',{staticClass:\"range-chart\",attrs:{\"id\":'range-chart' + _vm.graphId}})],1)],1),_c('VRow',[_c('VCol',{attrs:{\"cols\":\"12\"}},[_c('UnitFilterableTable',_vm._b({on:{\"current-items\":_vm.onTableFilter}},'UnitFilterableTable',{ headers: _vm.header, items: _vm.results, kViewBlock: _vm.kViewBlock },false))],1)],1)],1):_c('VContainer',[_c('p',{staticClass:\"text-center\"},[_vm._v(\" \"+_vm._s(_vm.$t('No relevant data found'))+\" \")])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <VContainer v-if=\"values.length > 0\">\r\n    <VRow>\r\n      <VCol cols=\"12\" md=\"7\">\r\n        <p class=\"text-h6\">\r\n          {{ $t(kViewBlock('graphTitle')) }}\r\n        </p>\r\n        <p\r\n          v-if=\"total === 0 && !currMinDate && !currMaxDate\"\r\n          class=\"text-subtitle-2\"\r\n        >\r\n          {{ $t(kViewBlock('graphNoDate')) }}\r\n        </p>\r\n        <!-- https://kazupon.github.io/vue-i18n/guide/interpolation.html#slots-syntax-usage -->\r\n        <i18n v-else :path=\"kViewBlock('datedEvents')\" tag=\"p\" class=\"text-subtitle-2\">\r\n          <template\r\n            v-for=\"(value, key) in { currMinDate, currMaxDate, total }\"\r\n            #[key]\r\n          >\r\n            <span :key=\"key\" class=\"font-weight-bold\" v-text=\"value\" />\r\n          </template>\r\n        </i18n>\r\n      </VCol>\r\n      <VCol cols=\"12\" md=\"2\">\r\n        <VSelect\r\n          v-model=\"selectTimeInt\"\r\n          :items=\"intervalNames\"\r\n          :label=\"$t('Time interval')\"\r\n          @change=\"drawBarChart\"\r\n        />\r\n      </VCol>\r\n      <VCol cols=\"12\" md=\"3\">\r\n        <VSelect\r\n          v-model=\"selectFiles\"\r\n          :items=\"filesNames\"\r\n          :label=\"$tc('File', 2)\"\r\n          multiple\r\n          @change=\"filterFiles\"\r\n        >\r\n          <template #prepend-item>\r\n            <VListItem ripple @click=\"toggle\">\r\n              <VListItemAction>\r\n                <VIcon :color=\"selectFiles.length > 0 ? 'indigo darken-4' : ''\">\r\n                  {{ icon }}\r\n                </VIcon>\r\n              </VListItemAction>\r\n              <VListItemContent>\r\n                <VListItemTitle> {{ $t('Select All') }} </VListItemTitle>\r\n              </VListItemContent>\r\n            </VListItem>\r\n            <VDivider class=\"mt-2\" />\r\n          </template>\r\n          <template #selection=\"{ item, index }\">\r\n            <span v-if=\"index === 0\">{{\r\n              item.length > 13 ? item.slice(0, 13) + '..' : item\r\n            }}</span>\r\n            <span v-if=\"index === 1\" class=\"grey--text text-caption\">\r\n              ({{ $tc('plusXOther', selectFiles.length - 1) }})\r\n            </span>\r\n          </template>\r\n        </VSelect>\r\n      </VCol>\r\n    </VRow>\r\n    <ChartViewVRowWebShare>\r\n      <VCol cols=\"12\">\r\n        <div :id=\"graphId\" />\r\n        <ChartViewTextSelectTimeRange>\r\n          <VBtn\r\n            x-small\r\n            class=\"ma-1\"\r\n            :class=\"{ hide: !filtered }\"\r\n            outlined\r\n            color=\"indigo\"\r\n            @click=\"resetFilter\"\r\n          >\r\n            {{ $t('reset') }}\r\n          </VBtn>\r\n        </ChartViewTextSelectTimeRange>\r\n        <div :id=\"'range-chart' + graphId\" class=\"range-chart\" />\r\n      </VCol>\r\n    </ChartViewVRowWebShare>\r\n    <VRow>\r\n      <VCol cols=\"12\">\r\n        <UnitFilterableTable\r\n          v-bind=\"{ headers: header, items: results, kViewBlock }\"\r\n          @current-items=\"onTableFilter\"\r\n        />\r\n      </VCol>\r\n    </VRow>\r\n  </VContainer>\r\n  <VContainer v-else>\r\n    <p class=\"text-center\">\r\n      {{ $t('No relevant data found') }}\r\n    </p>\r\n  </VContainer>\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from 'd3'\r\nimport * as dc from 'dc'\r\nimport crossfilter from 'crossfilter2'\r\nimport mixin from './mixin'\r\nimport { datetimeFormatter } from '@/utils/dates'\r\nimport ChartViewVRowWebShare from './ChartViewVRowWebShare.vue'\r\nimport ChartViewTextSelectTimeRange from './text/ChartViewTextSelectTimeRange.vue'\r\nimport UnitFilterableTable from '@/components/unit/filterable-table/UnitFilterableTable.vue'\r\n\r\nexport default {\r\n  components: { ChartViewVRowWebShare, ChartViewTextSelectTimeRange, UnitFilterableTable },\r\n  mixins: [mixin],\r\n  data() {\r\n    const intervals = {\r\n      Day: d3.timeDay,\r\n      Week: d3.timeWeek,\r\n      Month: d3.timeMonth,\r\n      Year: d3.timeYear\r\n    }\r\n    return {\r\n      formatDate: d3.timeFormat('%B %d, %Y'),\r\n      fileDimension: null,\r\n      results: [],\r\n      selectTimeInt: null,\r\n      selectFiles: [],\r\n      filesNames: [],\r\n      filtered: false,\r\n      intervals,\r\n      intervalNames: null,\r\n      aggregate: true,\r\n      minDate: null,\r\n      maxDate: null,\r\n      currMinDate: null,\r\n      currMaxDate: null,\r\n      total: 0,\r\n      barChart: null,\r\n      dateDimension: null,\r\n      volumeGroup: null,\r\n      header: [\r\n        ['File name', 'filename'],\r\n        ['Date', 'dateStr'],\r\n        ['Description', 'description']\r\n      ].map(([text, value]) => ({ text, value }))\r\n    }\r\n  },\r\n  computed: {\r\n    selectAll() {\r\n      return this.selectFiles.length === this.filesNames.length\r\n    },\r\n    selectSome() {\r\n      return this.selectFiles.length > 0 && !this.selectAll\r\n    },\r\n    icon() {\r\n      if (this.selectAll) {\r\n        return '$vuetify.icons.mdiCloseBox'\r\n      }\r\n      if (this.selectSome) {\r\n        return '$vuetify.icons.mdiMinusBox'\r\n      }\r\n      return '$vuetify.icons.mdiCheckboxBlankOutline'\r\n    }\r\n  },\r\n  methods: {\r\n    toggle() {\r\n      this.$nextTick(() => {\r\n        if (this.selectAll) {\r\n          this.selectFiles = []\r\n        } else {\r\n          this.selectFiles = this.filesNames.slice()\r\n        }\r\n        this.filterFiles(this.selectFiles)\r\n      })\r\n    },\r\n    drawViz() {\r\n      if (this.values.length === 0) {\r\n        return\r\n      }\r\n\r\n      this.intervalNames = Object.keys(this.intervals).map(value => ({\r\n        value,\r\n        text: this.$tc(value, 2)\r\n      }))\r\n\r\n      // Format dates\r\n      const valuesMapped = this.values.map(d => ({\r\n        ...d,\r\n        date: new Date(d.date),\r\n        day: d3.timeDay(d.date),\r\n        dateStr: datetimeFormatter(d.date)\r\n      }))\r\n      this.results = valuesMapped\r\n      // Build index for crossfiltering\r\n      const ndx = crossfilter(valuesMapped)\r\n      // Build dimension for filesNames selection\r\n      this.fileDimension = ndx.dimension(d => d.filename)\r\n      this.filesNames = this.fileDimension\r\n        .group()\r\n        .top(Infinity)\r\n        .map(e => e.key)\r\n      this.dateDimension = ndx.dimension(d => d.date)\r\n      this.barChart = new dc.BarChart('#' + this.graphId)\r\n      this.rangeChart = new dc.BarChart('#range-chart' + this.graphId)\r\n      this.minDate = d3.timeDay.offset(this.dateDimension.bottom(1)[0].date, -12)\r\n      this.currMinDate = this.formatDate(this.minDate)\r\n      this.maxDate = this.dateDimension.top(1)[0].date\r\n      this.currMaxDate = this.formatDate(this.maxDate)\r\n      this.total = this.dateDimension.top(Infinity).length\r\n      const diffDays = d3.timeDay.count(this.minDate, this.maxDate)\r\n      if (diffDays < 100) {\r\n        this.selectTimeInt = 'Day'\r\n      } else if (diffDays < 1000) {\r\n        this.selectTimeInt = 'Week'\r\n      } else {\r\n        this.selectTimeInt = 'Month'\r\n      }\r\n      const width = d3\r\n        .select('#' + this.graphId)\r\n        .node()\r\n        .getBoundingClientRect().width\r\n      this.barChart\r\n        .width(width)\r\n        .height(180)\r\n        .ordinalColors(['#58539E'])\r\n        .x(d3\r\n          .scaleTime()\r\n          .domain([\r\n            d3.timeHour.offset(this.minDate, 0),\r\n            d3.timeHour.offset(this.maxDate, 2)\r\n          ]))\r\n        .xUnits(this.intervals[this.selectTimeInt].range)\r\n        .margins({ left: 50, top: 20, right: 50, bottom: 20 })\r\n        .dimension(this.dateDimension)\r\n        .group(this.dateDimension.group(k => this.intervals[this.selectTimeInt](k)))\r\n        .rangeChart(this.rangeChart)\r\n        .brushOn(false)\r\n        .elasticX(false)\r\n        .elasticY(true)\r\n        .mouseZoomable(false)\r\n        .clipPadding(10)\r\n      // .barPadding(0)\r\n      // .gap(this.selectTimeInt === 'Month' ? 20 : 0)\r\n      this.barChart.yAxis().tickFormat(v => (Number.isInteger(v) ? v : ''))\r\n      // volume chart date picker\r\n      this.rangeChart\r\n        .width(width)\r\n        .height(40)\r\n        .margins({ top: 0, right: 50, bottom: 20, left: 50 })\r\n        .dimension(this.dateDimension)\r\n        .group(this.dateDimension.group(k => this.intervals.Day(k)))\r\n        .ordinalColors(['#58539E'])\r\n        .x(d3\r\n          .scaleTime()\r\n          .domain([\r\n            d3.timeDay.offset(this.minDate, -12),\r\n            d3.timeHour.offset(this.maxDate, 12)\r\n          ]))\r\n        .elasticY(true)\r\n        .xUnits(d3.timeDays)\r\n        .brushOn(true)\r\n        .clipPadding(10)\r\n      // .gap(0)\r\n      ndx.onChange(() => {\r\n        this.results = ndx.allFiltered()\r\n        this.total = this.results.length\r\n        const filters = this.dateDimension.currentFilter()\r\n        if (filters) {\r\n          this.filtered = true\r\n          this.currMinDate = this.formatDate(filters[0])\r\n          this.currMaxDate = this.formatDate(filters[1])\r\n        } else {\r\n          this.filtered = false\r\n          this.currMinDate = this.formatDate(this.minDate)\r\n          this.currMaxDate = this.formatDate(this.maxDate)\r\n        }\r\n      })\r\n      dc.renderAll()\r\n      this.toggle()\r\n    },\r\n    drawBarChart() {\r\n      if (this.volumeGroup) {\r\n        this.volumeGroup.dispose()\r\n      }\r\n      const interval = this.intervals[this.selectTimeInt]\r\n      this.barChart.xUnits(interval.range)\r\n      this.volumeGroup = this.dateDimension.group(k => interval(k))\r\n      this.barChart\r\n        .dimension(this.dateDimension)\r\n        .group(this.volumeGroup)\r\n      // .gap(this.selectTimeInt === 'Months' ? 10 : 0)\r\n        .transitionDuration(1000)\r\n        .render()\r\n    },\r\n    calcDomain(chart) {\r\n      let max = chart.dimension().top(1)\r\n      let min = chart.dimension().bottom(1)\r\n      if (max.length > 0) {\r\n        this.currMinDate = this.formatDate(min[0].date)\r\n        this.currMaxDate = this.formatDate(max[0].date)\r\n        min = d3.timeMonth.offset(min[0].date, -1)\r\n        max = d3.timeMonth.offset(max[0].date, 1)\r\n        chart.x().domain([min, max])\r\n      }\r\n    },\r\n    onTableFilter(items) {\r\n      // TODO: Update graph\r\n    },\r\n    filterFiles(files) {\r\n      this.fileDimension.filter(null)\r\n      this.fileDimension.filterFunction(function(d) {\r\n        return files.includes(d)\r\n      })\r\n      this.calcDomain(this.rangeChart)\r\n      this.calcDomain(this.barChart)\r\n      dc.redrawAll()\r\n    },\r\n    resetFilter() {\r\n      dc.filterAll()\r\n      dc.redrawAll()\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n::v-deep .hide {\r\n  display: none;\r\n}\r\n</style>\r\n","import mod from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewGenericDateViewer.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewGenericDateViewer.vue?vue&type=script&lang=js&\"","// extracted by mini-css-extract-plugin\nexport {};","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-12.use[0]!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-12.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-12.use[2]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewGenericDateViewer.vue?vue&type=style&index=0&id=3512e396&prod&scoped=true&lang=css&\"","import { render, staticRenderFns } from \"./ChartViewGenericDateViewer.vue?vue&type=template&id=3512e396&scoped=true&\"\nimport script from \"./ChartViewGenericDateViewer.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewGenericDateViewer.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ChartViewGenericDateViewer.vue?vue&type=style&index=0&id=3512e396&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3512e396\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('VRow',_vm._b({ref:\"domToImageNode\"},'VRow',_vm.$attrs,false),[_vm._t(\"default\"),_c('VCol',{staticClass:\"dom-to-image-exclude\",attrs:{\"cols\":\"12\"}},[_c('BaseButton',_vm._b({attrs:{\"icon\":\"mdiExport\",\"text\":\"Export\"},on:{\"click\":_vm.exportImage}},'BaseButton',{ progress: _vm.progress, status: _vm.status, error: _vm.error },false)),_c('BaseButtonDownloadData',_vm._b({},'BaseButtonDownloadData',{ disabled: !_vm.blob, extension: _vm.extension, filename: _vm.filename, data: _vm.blob },false)),_c('BaseButtonShare',_vm._b({attrs:{\"file-share\":\"\"}},'BaseButtonShare',{ files: _vm.files, disabled: !_vm.files },false))],1)],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <VRow ref=\"domToImageNode\" v-bind=\"$attrs\">\r\n    <slot />\r\n    <VCol cols=\"12\" class=\"dom-to-image-exclude\">\r\n      <BaseButton\r\n        icon=\"mdiExport\"\r\n        text=\"Export\"\r\n        v-bind=\"{ progress, status, error }\"\r\n        @click=\"exportImage\"\r\n      />\r\n      <BaseButtonDownloadData\r\n        v-bind=\"{ disabled: !blob, extension, filename, data: blob }\"\r\n      />\r\n      <BaseButtonShare file-share v-bind=\"{ files, disabled: !files }\" />\r\n    </VCol>\r\n  </VRow>\r\n</template>\r\n\r\n<script>\r\nimport exportImageMixinFactory from '@/mixins/export-image-mixin-factory'\r\nimport BaseButton from '@/components/base/button/BaseButton.vue'\r\nimport BaseButtonDownloadData from '@/components/base/button/download/BaseButtonDownloadData.vue'\r\nimport BaseButtonShare from '@/components/base/button/BaseButtonShare.vue'\r\n\r\nexport default {\r\n  components: { BaseButton, BaseButtonDownloadData, BaseButtonShare },\r\n  mixins: [exportImageMixinFactory()]\r\n}\r\n</script>\r\n","import mod from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewVRowWebShare.vue?vue&type=template&id=53512c70&\"\nimport script from \"./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('p',{staticClass:\"muted pull-right text-subtitle-2 mr-4 mb-1\"},[_c('span',{domProps:{\"innerHTML\":_vm._s(_vm.$t('select-time-range'))}}),_vm._t(\"default\")],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./ChartViewTextSelectTimeRange.vue?vue&type=template&id=46f28fc2&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { TextFilterWidget } from 'dc'\r\nimport { merge } from 'lodash-es'\r\n\r\nimport kViewBlockMixin from '@/mixins/k-view-block'\r\n\r\nconst mixin = {\r\n  props: {\r\n    values: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    headers: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    messages: {\r\n      type: Object,\r\n      default: () => ({})\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      graphId: 'graph_' + this.$store.state.xp.currentTab,\r\n      totalCount: 0,\r\n      filterCount: 0\r\n    }\r\n  },\r\n  mounted() {\r\n    this.drawViz()\r\n  },\r\n  watch: {\r\n    values() {\r\n      this.drawViz()\r\n    }\r\n  },\r\n  methods: {\r\n    drawViz() { },\r\n    createTextFilterWidget(parent, placeholder = 'Search') {\r\n      const widget = new TextFilterWidget(parent)\r\n      widget.placeHolder(this.$tev(placeholder, placeholder))\r\n      return widget\r\n    }\r\n  }\r\n}\r\n\r\nexport default merge(mixin, kViewBlockMixin)\r\n"],"names":[],"sourceRoot":""}