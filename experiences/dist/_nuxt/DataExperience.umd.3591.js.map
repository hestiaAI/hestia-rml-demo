{"version":3,"file":"DataExperience.umd.3591.js","mappings":";;;;;;;;;AAAA;AACwB;AACA;AACxB;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,0BAA0B;AACrC,IAAI,6DAA6D;AACjE,sCAAsC;AACtC,WAAW,QAAQ;AACnB;AACA,aAAa,cAAc;AAC3B;AACA,yCAAY;AACZ;AACA;AACA,sBAAsB,wCAAW,CAAC,2CAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,0CAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,sCAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,2CAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,0CAAa;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4CAA4C;AACpD;AACA;AACA;AACA;AACA,aAAa;AACb,eAAe,SAAS;AACxB,iBAAiB,qBAAqB,sBAAsB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,+BAAE;AACnB;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,sDAAsD;AAC9D;AACA;AACA;AACA,aAAa;AACb,eAAe,UAAU;AACzB,iBAAiB,uBAAuB,sBAAsB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB,sBAAsB,kBAAkB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,6CAA6C,gBAAgB;AAC7D;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://DataExperience/./src/components/chart/view/utils/dc-axis.js"],"sourcesContent":["/* eslint-disable no-import-assign */\r\nimport * as d3 from 'd3'\r\nimport * as dc from 'dc'\r\n/**\r\n * Separate axis implementation.\r\n * by @ialarmedalien\r\n * Source / Author: https://gist.github.com/gordonwoodhull/13689975c3ec069a4e0bef380846157b\r\n * Examples:\r\n * - {@link https://bl.ocks.org/ialarmedalien/0a4bf25ffc0fb96ae569a20f91957bc1 eslint on dc.js source}\r\n * @class axisChart\r\n * @memberof dc\r\n * @mixes dc.capMixin\r\n * @mixes dc.marginMixin\r\n * @mixes dc.baseMixin\r\n * @example\r\n * // create an axis under #chart-container1 element using the default global chart group\r\n * var chart1 = dc.axisChart('#chart-container1');\r\n * // create an axis under #chart-container2 element using chart group A\r\n * var chart2 = dc.axisChart('#chart-container2', 'chartGroupA');\r\n * @param {String|node|d3.selection} parent - Any valid\r\n * {@link https://github.com/d3/d3-selection d3 single selector} specifying\r\n * a dom block element such as a div; or a dom element or d3 selection.\r\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\r\n * Interaction with a chart will only trigger events and redraws within the chart's group.\r\n * @returns {dc.axisChart} a dc axis chart\r\n */\r\ndc.axisChart = function(parent, chartGroup) {\r\n  let _g\r\n\r\n  const _chart = new (dc.CapMixin(dc.MarginMixin))()\r\n\r\n  let _scale\r\n\r\n  let _elastic\r\n\r\n  let _type\r\n\r\n  let _theAxis = d3.axisBottom()\r\n\r\n  let _axisData\r\n\r\n  const validAxisTypes = ['axisBottom', 'axisTop', 'axisLeft', 'axisRight']\r\n\r\n  _chart.axisCap = _chart.cap\r\n\r\n  function calculateAxisScale() {\r\n    if (!_scale || _elastic) {\r\n      const extent = d3.extent(_axisData, d => _chart.cappedValueAccessor(d))\r\n      if (extent[0] > 0) {\r\n        extent[0] = 0\r\n      }\r\n      if (extent[1] < 0) {\r\n        extent[1] = 0\r\n      }\r\n      _scale = d3.scaleLinear().domain(extent)\r\n        .range([0, _chart.effectiveWidth()])\r\n    }\r\n    _theAxis.scale(_scale)\r\n  }\r\n\r\n  function drawAxis() {\r\n    let axisG = _g.select('g.axis')\r\n\r\n    calculateAxisScale()\r\n\r\n    if (axisG.empty()) {\r\n      axisG = _g.append('g').attr('class', 'axis')\r\n    }\r\n\r\n    dc.transition(axisG, _chart.transitionDuration(), _chart.transitionDelay())\r\n      .call(_theAxis)\r\n  }\r\n\r\n  _chart._doRender = function() {\r\n    _chart.resetSvg()\r\n\r\n    _g = _chart.svg()\r\n      .append('g')\r\n      .attr('transform', 'translate(' + _chart.margins().left + ',' + _chart.margins().top + ')')\r\n\r\n    drawChart()\r\n\r\n    return _chart\r\n  }\r\n\r\n  /**\r\n     * Gets or sets the axis type. The axis type can be any valid\r\n     * {@link https://github.com/d3/d3-axis d3 axis}. The default is\r\n     * axisBottom (a bottom axis).\r\n     * @method type\r\n     * @memberof dc.axisChart\r\n     * @instance\r\n     * @see {@link https://github.com/d3/d3-axis d3 axis}\r\n     * @param {d3.type} [type]\r\n     * @returns {string|dc.axisChart} no args: type string; args: axis chart\r\n     */\r\n\r\n  _chart.type = function(type) {\r\n    if (!arguments.length) {\r\n      return _type\r\n    }\r\n    // set the axis type here\r\n    if (validAxisTypes.indexOf(type) !== -1) {\r\n      _theAxis = d3[type]()\r\n      _type = type\r\n    } else {\r\n      console.error(type + ' is not a valid d3 axis type')\r\n    }\r\n\r\n    return _chart\r\n  }\r\n\r\n  /**\r\n     * Gets or sets the axis scale. The axis scale can be any d3\r\n     * {@link https://github.com/d3/d3-scale quantitive scale}.\r\n     * @method scale\r\n     * @memberof dc.axisChart\r\n     * @instance\r\n     * @see {@link https://github.com/d3/d3-scale quantitive scale}\r\n     * @param {d3.scale} [scale] any value d3 scale\r\n     * @returns {d3.scale|dc.axisChart} no args: chart scale; args: axis chart\r\n     */\r\n  _chart.scale = function(scale) {\r\n    if (!arguments.length) {\r\n      return _scale\r\n    }\r\n    _scale = scale\r\n    return _chart\r\n  }\r\n\r\n  /**\r\n     * Get or set the elasticity on the axis. If this attribute is set to true,\r\n     * then the axis will rescale to auto-fit the data range when filtered.\r\n     * @method elastic\r\n     * @memberof dc.axisChart\r\n     * @instance\r\n     * @param {Boolean} [elastic] any valid boolean\r\n     * @returns {Boolean|dc.axisChart} no args: boolean; args: axis chart\r\n     */\r\n  _chart.elastic = function(elastic) {\r\n    if (!arguments.length) {\r\n      return _elastic\r\n    }\r\n    _elastic = elastic\r\n    return _chart\r\n  }\r\n\r\n  /**\r\n     * Get the axis for the axis chart instance.\r\n     * See the {@link https://github.com/d3/d3-axis d3 axis object}\r\n     * documention for more information.\r\n     * @method axis\r\n     * @memberof dc.axisChart\r\n     * @instance\r\n     * @see {@link https://github.com/d3/d3-axis d3.axis}\r\n     * @example\r\n     * // customize axis tick format\r\n     * chart.axis().tickFormat(function (v) {return v + '%';});\r\n     * // customize axis tick values\r\n     * chart.axis().tickValues([0, 100, 200, 300]);\r\n     * @returns {d3.axis} d3 axis\r\n     */\r\n  _chart.axis = function() {\r\n    return _theAxis\r\n  }\r\n\r\n  function drawChart() {\r\n    _axisData = _chart.data()\r\n    drawAxis()\r\n  }\r\n\r\n  _chart._doRedraw = function() {\r\n    drawChart()\r\n    return _chart\r\n  }\r\n\r\n  return _chart.anchor(parent, chartGroup)\r\n}\r\n"],"names":[],"sourceRoot":""}