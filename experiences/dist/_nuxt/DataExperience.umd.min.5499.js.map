{"version":3,"file":"DataExperience.umd.min.5499.js","mappings":"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","sources":["webpack://DataExperience/./src/components/chart/view/ChartViewSunburst.vue?557a","webpack://DataExperience/src/components/chart/view/ChartViewSunburst.vue","webpack://DataExperience/./src/components/chart/view/ChartViewSunburst.vue?bbea","webpack://DataExperience/./src/components/chart/view/ChartViewSunburst.vue","webpack://DataExperience/./src/components/chart/view/ChartViewVRowWebShare.vue?f831","webpack://DataExperience/src/components/chart/view/ChartViewVRowWebShare.vue","webpack://DataExperience/./src/components/chart/view/ChartViewVRowWebShare.vue?2101","webpack://DataExperience/./src/components/chart/view/ChartViewVRowWebShare.vue"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('VContainer',[_c('ChartViewVRowWebShare',[_c('VCol',{staticClass:\"text-center\",attrs:{\"cols\":\"12\",\"md\":\"12\"}},[_c('div',{attrs:{\"id\":_vm.graphId}},[_c('VBreadcrumbs',{attrs:{\"items\":_vm.bcItems,\"large\":\"\"}})],1)])],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <VContainer>\r\n    <ChartViewVRowWebShare>\r\n      <VCol cols=\"12\" md=\"12\" class=\"text-center\">\r\n        <div :id=\"graphId\">\r\n          <VBreadcrumbs :items=\"bcItems\" large />\r\n        </div>\r\n      </VCol>\r\n    </ChartViewVRowWebShare>\r\n  </VContainer>\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from 'd3'\r\nimport mixin from './mixin'\r\nimport ChartViewVRowWebShare from './ChartViewVRowWebShare.vue'\r\n\r\nexport default {\r\n  components: { ChartViewVRowWebShare },\r\n  mixins: [mixin],\r\n  data() {\r\n    return {\r\n      bcItems: []\r\n    }\r\n  },\r\n  watch: {\r\n    values() {\r\n      this.drawViz()\r\n    }\r\n  },\r\n  mounted() {\r\n    this.drawViz()\r\n  },\r\n  methods: {\r\n    k(key) {\r\n      return `chart-view.sunburst.${key}`\r\n    },\r\n    drawViz() {\r\n      const { k } = this\r\n      if (!this.values || this.values.length === 0) {\r\n        return\r\n      }\r\n      // Transform list to hierarchical object\r\n      const colorDomain = []\r\n      const hierarchicalData = d3\r\n        .stratify()\r\n        .id(function(d) {\r\n          return d.id\r\n        })\r\n        .parentId(function(d) {\r\n          if (d.parent === 0) {\r\n            colorDomain.push(d.name)\r\n          }\r\n          return d.parent\r\n        })(this.values)\r\n      // Sort the hierarchical object per depth\r\n      const tree = hierarchicalData\r\n        .sum(d => d.size)\r\n        .sort((a, b) => b.value - a.value)\r\n      const totalSize = tree.value\r\n      const rootName = this.$tev(k(tree.data.name), tree.data.name)\r\n      this.bcItems = [{ text: rootName, disabled: true }]\r\n      // Compute arcs partitons/positions\r\n      const root = d3.partition().size([2 * Math.PI, tree.height + 1])(tree)\r\n      root.each(d => (d.current = d))\r\n      // Global Variables\r\n      const width = Math.min(d3\r\n        .select('#' + this.graphId)\r\n        .node()\r\n        .getBoundingClientRect().width, 600)\r\n      const radius = width / 6\r\n      const color = d3.scaleOrdinal().domain(colorDomain).range(this.colorPalette) // ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666']\r\n      // const format = d3.format(',d')\r\n      const arc = d3\r\n        .arc()\r\n        .startAngle(d => d.x0)\r\n        .endAngle(d => d.x1)\r\n        .padAngle(d => Math.min((d.x1 - d.x0) / 2, 0.005))\r\n        .padRadius(radius * 1.5)\r\n        .innerRadius(d => d.y0 * radius)\r\n        .outerRadius(d => Math.max(d.y0 * radius, d.y1 * radius - 1))\r\n      d3.select('#' + this.graphId + ' svg').remove()\r\n      const svg = d3\r\n        .select('#' + this.graphId)\r\n        .append('svg')\r\n        .attr('width', width)\r\n        .attr('height', width)\r\n        .append('g')\r\n        .attr('transform', 'translate(' + width / 2 + ',' + width / 2 + ')')\r\n      const infoLabel = svg\r\n        .append('text')\r\n        .attr('x', 0)\r\n        .attr('y', -50)\r\n        .attr('id', 'infoLabel')\r\n        .style('font-size', '1rem')\r\n        .style('font-weight', 'light')\r\n        .attr('text-anchor', 'middle')\r\n        .style('cursor', 'default')\r\n        .style('fill', 'grey')\r\n        .text('')\r\n        .attr('opacity', 0)\r\n      const clickLabel = svg\r\n        .append('text')\r\n        .attr('x', width / 2)\r\n        .attr('y', -width / 2 + 20)\r\n        .attr('id', 'infoLabel')\r\n        .style('font-size', '1rem')\r\n        .style('font-weight', 'bold')\r\n        .attr('text-anchor', 'end')\r\n        .style('cursor', 'default')\r\n        .style('fill', 'grey')\r\n        .text(this.$t(k('Click to expand')) + '!')\r\n        .attr('opacity', 0)\r\n      const infoPercent = svg\r\n        .append('text')\r\n        .attr('x', 0)\r\n        .attr('y', 0)\r\n        .attr('id', 'infoPercent')\r\n        .attr('text-anchor', 'middle')\r\n        .style('font-size', '2.5rem')\r\n        .style('font-weight', 'bold')\r\n        .style('fill', 'grey')\r\n        .attr('font-family', 'Roboto')\r\n        .style('cursor', 'default')\r\n        .text('100%')\r\n        .attr('opacity', 0)\r\n      const infoNumber = svg\r\n        .append('text')\r\n        .attr('x', 0)\r\n        .attr('y', 30)\r\n        .attr('id', 'infoNumber')\r\n        .style('font-size', '1rem')\r\n        .style('font-weight', 'light')\r\n        .attr('text-anchor', 'middle')\r\n        .style('cursor', 'default')\r\n        .style('fill', 'grey')\r\n        .text(totalSize)\r\n        .attr('opacity', 0)\r\n      const path = svg\r\n        .append('g')\r\n        .selectAll('#' + this.graphId + ' path')\r\n        .data(root.descendants().slice(1))\r\n        .join('path')\r\n        .attr('fill', (d) => {\r\n          while (d.depth > 1) {\r\n            d = d.parent\r\n          }\r\n          return color(d.data.name)\r\n        })\r\n        .attr('fill-opacity', d => arcVisible(d.current) ? (d.children ? 0.6 : 0.4) : 0)\r\n        .attr('d', d => arc(d.current))\r\n      path\r\n        .filter(d => d.children)\r\n        .style('cursor', 'pointer')\r\n        .on('click', clicked)\r\n      /*\r\n            path.append('title').text(\r\n              d =>\r\n                `${d\r\n                  .ancestors()\r\n                  .map(d => d.data.name)\r\n                  .reverse()\r\n                  .join(' / ')}\\n${format(d.value)}`\r\n            )\r\n            */\r\n      const label = svg\r\n        .append('g')\r\n        .attr('pointer-events', 'none')\r\n        .attr('text-anchor', 'middle')\r\n        .style('user-select', 'none')\r\n        .selectAll('text')\r\n        .data(root.descendants().slice(1))\r\n        .join('text')\r\n        .attr('dy', '0.35em')\r\n        .attr('fill-opacity', d => +labelVisible(d.current))\r\n        .attr('transform', d => labelTransform(d.current))\r\n        .text((d) => {\r\n          if (!d.data.name) {\r\n            return 'undefined'\r\n          }\r\n          return d.data.name.length > 10\r\n            ? d.data.name.substring(0, 10) + '..'\r\n            : d.data.name\r\n        })\r\n        .style('font-size', '0.8rem')\r\n        .style('font-weight', 'bold')\r\n        .style('fill', 'white')\r\n        .attr('font-family', 'Roboto')\r\n      const parent = svg\r\n        .append('text')\r\n        .datum(root)\r\n        .attr('x', 0)\r\n        .attr('y', 50)\r\n        .style('font-size', '1rem')\r\n        .style('font-weight', 'light')\r\n        .attr('text-anchor', 'middle')\r\n        .attr('text-decoration', 'underline')\r\n        .text(this.$t(k('Zoom out')))\r\n        .attr('opacity', 0)\r\n        .style('cursor', 'pointer')\r\n        .attr('pointer-events', 'all')\r\n        .on('click', clicked)\r\n      let currentLevel = [{ text: rootName, disabled: true }]\r\n      function clicked(event, p) {\r\n        const ancestors = getAncestors(p)\r\n        currentLevel = ancestors.map((d) => {\r\n          return {\r\n            text: d.data.name,\r\n            disabled: true\r\n          }\r\n        })\r\n        currentLevel.unshift({ text: rootName, disabled: true })\r\n        this.bcItems = currentLevel\r\n        if (!p.parent) {\r\n          parent.attr('opacity', 0)\r\n          parent.style('cursor', 'default')\r\n        } else {\r\n          parent.attr('opacity', 1)\r\n          parent.style('cursor', 'pointer')\r\n        }\r\n        parent.datum(p.parent || root)\r\n        root.each(d => (d.target = {\r\n          x0: Math.max(0, Math.min(1, (d.x0 - p.x0) / (p.x1 - p.x0))) *\r\n                        2 *\r\n                        Math.PI,\r\n          x1: Math.max(0, Math.min(1, (d.x1 - p.x0) / (p.x1 - p.x0))) *\r\n                        2 *\r\n                        Math.PI,\r\n          y0: Math.max(0, d.y0 - p.depth),\r\n          y1: Math.max(0, d.y1 - p.depth)\r\n        }))\r\n        const t = svg.transition().duration(750)\r\n        // Transition the data on all arcs, even the ones that aren’t visible,\r\n        // so that if this transition is interrupted, entering arcs will start\r\n        // the next transition from the desired position.\r\n        path\r\n          .transition(t)\r\n          .tween('data', (d) => {\r\n            const i = d3.interpolate(d.current, d.target)\r\n            return t => (d.current = i(t))\r\n          })\r\n          .filter(function(d) {\r\n            return +this.getAttribute('fill-opacity') || arcVisible(d.target)\r\n          })\r\n          .attr('fill-opacity', d => arcVisible(d.target) ? (d.children ? 0.6 : 0.4) : 0)\r\n          .attrTween('d', d => () => arc(d.current))\r\n        label\r\n          .filter(function(d) {\r\n            return +this.getAttribute('fill-opacity') || labelVisible(d.target)\r\n          })\r\n          .transition(t)\r\n          .attr('fill-opacity', d => +labelVisible(d.target))\r\n          .attrTween('transform', d => () => labelTransform(d.current))\r\n      }\r\n      function arcVisible(d) {\r\n        return d.y1 <= 3 && d.y0 >= 1 && d.x1 > d.x0\r\n      }\r\n      function labelVisible(d) {\r\n        return d.y1 <= 3 && d.y0 >= 1 && (d.y1 - d.y0) * (d.x1 - d.x0) > 0.05\r\n      }\r\n      function labelTransform(d) {\r\n        const x = (((d.x0 + d.x1) / 2) * 180) / Math.PI\r\n        const y = ((d.y0 + d.y1) / 2) * radius\r\n        return `rotate(${x - 90}) translate(${y},0) rotate(${x < 180 ? 0 : 180})`\r\n      }\r\n      const mouseover = (e, d) => {\r\n        if (d.depth - currentLevel.length > 1) {\r\n          return\r\n        }\r\n        // Find all ancestors of current overred element\r\n        const ancestors = getAncestors(d)\r\n        // Update labels\r\n        const percentage = ((100 * d.value) / totalSize).toPrecision(3)\r\n        let percentageString = percentage + '%'\r\n        if (percentage < 0.1) {\r\n          percentageString = '< 0.1%'\r\n        }\r\n        infoLabel.text(d.data.name?.length > 15\r\n          ? d.data.name.slice(0, 15) + '..'\r\n          : d.data.name ?? 'undefined')\r\n        this.bcItems = ancestors.map((d) => {\r\n          return {\r\n            text: d.data.name ?? 'undefined',\r\n            disabled: true\r\n          }\r\n        })\r\n        this.bcItems.unshift({ text: rootName, disabled: true })\r\n        infoPercent.text(percentageString)\r\n        infoNumber.text(this.$t(k('infoNumber'), { number: d.value, total: totalSize }))\r\n        infoPercent.attr('opacity', 1)\r\n        infoNumber.attr('opacity', 1)\r\n        infoLabel.attr('opacity', 1)\r\n        if (currentLevel.length <= 1) {\r\n          clickLabel.attr('opacity', 1)\r\n        }\r\n        // Fade all the segments.\r\n        d3.selectAll('#' + this.graphId + ' path').style('opacity', 0.5)\r\n        // Then highlight only those that are an ancestor of the current segment.\r\n        svg\r\n          .selectAll('#' + this.graphId + ' path')\r\n          .filter(node => ancestors.includes(node))\r\n          .style('opacity', 1)\r\n      }\r\n      const mouseleave = (e, d) => {\r\n        this.bcItems = currentLevel\r\n        infoPercent.attr('opacity', 0)\r\n        infoNumber.attr('opacity', 0)\r\n        infoLabel.attr('opacity', 0)\r\n        clickLabel.attr('opacity', 0)\r\n        d3.selectAll('#' + this.graphId + ' path').style('opacity', 1)\r\n      }\r\n      // attach event actions\r\n      path.on('mouseover', mouseover)\r\n      path.on('mouseleave', mouseleave)\r\n      function getAncestors(node) {\r\n        const path = []\r\n        let current = node\r\n        while (current.parent) {\r\n          path.unshift(current)\r\n          current = current.parent\r\n        }\r\n        return path\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\nbody {\r\n  font-family: 'Roboto';\r\n  color: #22313f;\r\n}\r\n</style>\r\n","import mod from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewSunburst.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewSunburst.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewSunburst.vue?vue&type=template&id=47530e1a&scoped=true&\"\nimport script from \"./ChartViewSunburst.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewSunburst.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ChartViewSunburst.vue?vue&type=style&index=0&id=47530e1a&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"47530e1a\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('VRow',_vm._b({ref:\"domToImageNode\"},'VRow',_vm.$attrs,false),[_vm._t(\"default\"),_c('VCol',{staticClass:\"dom-to-image-exclude webshare d-flex\",attrs:{\"cols\":\"12\"}},[_c('div',{staticClass:\"webshare__export-button\"},[_c('BaseButton',_vm._b({attrs:{\"mdi-icon\":\"mdiExport\",\"text\":\"Export\"},on:{\"click\":_vm.exportImage}},'BaseButton',{ progress: _vm.progress, status: _vm.status, error: _vm.error },false))],1),_c('div',{staticClass:\"webshare__download-button\"},[_c('BaseButtonDownloadData',_vm._b({},'BaseButtonDownloadData',{ disabled: !_vm.blob, extension: _vm.extension, filename: _vm.filename, data: _vm.blob },false))],1),_c('div',{staticClass:\"webshare__share-button\"},[_c('BaseButtonShare',_vm._b({attrs:{\"file-share\":\"\"}},'BaseButtonShare',{ files: _vm.files, disabled: !_vm.files },false))],1)])],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <VRow ref=\"domToImageNode\" v-bind=\"$attrs\">\r\n      <slot />\r\n      <VCol cols=\"12\" class=\"dom-to-image-exclude webshare d-flex\">\r\n        <div class=\"webshare__export-button\">\r\n          <BaseButton\r\n            mdi-icon=\"mdiExport\"\r\n            text=\"Export\"\r\n            v-bind=\"{ progress, status, error }\"\r\n            @click=\"exportImage\"\r\n          />\r\n        </div>\r\n        <div class=\"webshare__download-button\">\r\n        <BaseButtonDownloadData\r\n          v-bind=\"{ disabled: !blob, extension, filename, data: blob }\"\r\n        />\r\n        </div>\r\n        <div class=\"webshare__share-button\">\r\n        <BaseButtonShare\r\n          file-share\r\n          v-bind=\"{ files, disabled: !files }\"\r\n        />\r\n        </div>\r\n      </VCol>\r\n    </VRow>\r\n</template>\r\n\r\n<script>\r\nimport exportImageMixinFactory from '@/mixins/export-image-mixin-factory'\r\nimport BaseButton from '@/components/base/button/BaseButton.vue'\r\nimport BaseButtonDownloadData from '@/components/base/button/download/BaseButtonDownloadData.vue'\r\nimport BaseButtonShare from '@/components/base/button/BaseButtonShare.vue'\r\n\r\nexport default {\r\n  components: { BaseButton, BaseButtonDownloadData, BaseButtonShare },\r\n  mixins: [exportImageMixinFactory()]\r\n}\r\n</script>\r\n","import mod from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartViewVRowWebShare.vue?vue&type=template&id=07259b63&\"\nimport script from \"./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartViewVRowWebShare.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","attrs","graphId","bcItems","staticRenderFns","components","ChartViewVRowWebShare","mixins","mixin","data","watch","values","drawViz","mounted","methods","k","key","length","colorDomain","hierarchicalData","id","d","parentId","parent","push","name","tree","sum","size","sort","a","b","value","totalSize","rootName","$tev","text","disabled","root","Math","PI","height","each","current","width","min","node","getBoundingClientRect","radius","color","domain","range","colorPalette","arc","startAngle","x0","endAngle","x1","padAngle","padRadius","innerRadius","y0","outerRadius","max","y1","remove","svg","append","attr","infoLabel","style","clickLabel","$t","infoPercent","infoNumber","path","selectAll","descendants","slice","join","depth","arcVisible","children","filter","on","clicked","label","labelVisible","labelTransform","substring","datum","currentLevel","event","p","ancestors","getAncestors","map","unshift","target","t","transition","duration","tween","i","getAttribute","attrTween","x","y","mouseover","e","percentage","toPrecision","percentageString","number","total","includes","mouseleave","component","_b","ref","$attrs","_t","exportImage","progress","status","error","blob","extension","filename","files","BaseButton"],"sourceRoot":""}