{"version":3,"file":"data-experience.common.9299.js","mappings":";;;;;;;;;;;;;;;AAAA,+BAA+B,6BAA6B,+BAA+B,aAAa,gEAAgE,EAAE,gCAAgC,aAAa,8EAA8E,EAAE,qDAAqD,wBAAwB,aAAa,YAAY,KAAK,iCAAiC,EAAE,oCAAoC,yBAAyB,wCAAwC;AAC1hB;AACA;;;;;;;;;;;;;;;ACe0C;AACf;AACe;AACsB;AACgB;;AAEhF,uFAAe;AACf;AACA,0BAA0B,gDAAqB;AAC/C,WAAW,oBAAK,EAAE,4BAAY;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,sCAAY;AAC1C;AACA,gEAAgE,sCAAY;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AC7E8J,CAAC,8FAAe,kDAAG,EAAC;;;;ACA1E;AAC3B;AACL;;;AAGzE;AACA,CAA4G;AAC5G,gBAAgB,sCAAU;AAC1B,EAAE,yDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,+DAAe","sources":["webpack://data-experience/./src/components/unit/file-explorer/viewer/UnitFileExplorerViewerXlsx.vue?d532","webpack://data-experience/src/components/unit/file-explorer/viewer/UnitFileExplorerViewerXlsx.vue","webpack://data-experience/./src/components/unit/file-explorer/viewer/UnitFileExplorerViewerXlsx.vue?a234","webpack://data-experience/./src/components/unit/file-explorer/viewer/UnitFileExplorerViewerXlsx.vue"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return (_vm.loading)?_c('div',{directives:[{name:\"t\",rawName:\"v-t\",value:('Loading'),expression:\"'Loading'\"}]}):(_vm.error)?_c('div',[_c('p',{directives:[{name:\"t\",rawName:\"v-t\",value:(_vm.k('errorText')),expression:\"k('errorText')\"}]})]):_c('div',[_vm._l((_vm.sheets),function(_,name,i){return _c('BaseButton',{key:i,attrs:{\"text\":name},on:{\"click\":v => _vm.setSheet(name)}})}),_c('UnitFilterableTable',_vm._b({},'UnitFilterableTable',{ headers: _vm.headers, items: _vm.items },false))],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div v-if=\"loading\" v-t=\"'Loading'\" />\r\n  <div v-else-if=\"error\">\r\n    <p v-t=\"k('errorText')\" />\r\n  </div>\r\n  <div v-else>\r\n    <BaseButton\r\n      v-for=\"(_, name, i) in sheets\"\r\n      :key=\"i\"\r\n      :text=\"name\"\r\n      @click=\"v => setSheet(name)\"\r\n    />\r\n    <UnitFilterableTable v-bind=\"{ headers, items }\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport readXlsxFile from 'read-excel-file'\r\nimport mixin from './mixin'\r\nimport mixinLoading from './mixin-loading'\r\nimport BaseButton from '@/components/base/button/BaseButton.vue'\r\nimport UnitFilterableTable from '../../filterable-table/UnitFilterableTable.vue'\r\n\r\nexport default {\r\n  name: 'UnitFileExplorerViewerXlsx',\r\n  components: { BaseButton, UnitFilterableTable },\r\n  mixins: [mixin, mixinLoading],\r\n  data() {\r\n    return {\r\n      loading: true,\r\n      error: false,\r\n      file: null,\r\n      sheets: {},\r\n      headers: [],\r\n      items: []\r\n    }\r\n  },\r\n  watch: {\r\n    filename: {\r\n      async handler(filename) {\r\n        await this.getContentFromFilename(filename)\r\n      },\r\n      immediate: true\r\n    }\r\n  },\r\n  methods: {\r\n    k(key) {\r\n      return `file-explorer.viewer.xlsx.${key}`\r\n    },\r\n    async getContentFromFilename(filename) {\r\n      this.setLoading(true)\r\n      this.file = this.fileManager.fileDict[filename]\r\n      try {\r\n        // Get the names of the sheets\r\n        const sheets = (await readXlsxFile(this.file, { getSheets: true })).map(s => s.name)\r\n        // Read the content of all sheets\r\n        const sheetsContent = await Promise.all(sheets.map(s => readXlsxFile(this.file, { sheet: s })))\r\n        this.sheets = Object.fromEntries(sheetsContent.map((rows, i) => {\r\n          const headers = Array.from({ length: Math.max(...rows.map(r => r.length)) }, (_, j) => 'Column ' + (j + 1))\r\n          const items = rows.map((row) => {\r\n            return Object.fromEntries(headers.map((h, j) => [h, row[j]]))\r\n          })\r\n          return [sheets[i], { headers, items }]\r\n        }))\r\n        // Set the first sheet as visible\r\n        this.setSheet(sheets[0])\r\n        this.error = false\r\n      } catch (error) {\r\n        this.error = true\r\n      }\r\n      this.setLoading(false)\r\n    },\r\n    setSheet(name) {\r\n      this.headers = this.sheets[name].headers\r\n      this.items = this.sheets[name].items\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./UnitFileExplorerViewerXlsx.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./UnitFileExplorerViewerXlsx.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./UnitFileExplorerViewerXlsx.vue?vue&type=template&id=90584de0&\"\nimport script from \"./UnitFileExplorerViewerXlsx.vue?vue&type=script&lang=js&\"\nexport * from \"./UnitFileExplorerViewerXlsx.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":[],"sourceRoot":""}