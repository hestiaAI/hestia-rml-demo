{"version":3,"file":"data-experience.umd.min.9258.js","mappings":"oQAYO,SAASA,EACdC,EACAC,EACAC,EACAC,EACAC,EAAY,EACZC,EAAU,KACVC,EAAU,MAEV,GAAIN,EAAKO,QAAU,EAAK,MAAO,GAE/B,MAAMC,EAAS,MAAUR,GAAMS,GAAK,IAAIC,KAAKD,EAAER,MAGzCU,EAAQR,EAASS,MACT,OAAZP,EAAmBF,EAASU,MAAMR,GAAWF,EAASU,MAAML,EAAO,IACvD,OAAZF,EAAmBH,EAASW,KAAKR,GAAWH,EAASW,KAAKN,EAAO,IACjE,GAIIO,EAAeJ,EAAMK,QACzBC,IAAUjB,EAAKkB,KAAIT,GAAKA,EAAER,KAAekB,SAASF,EAAMG,cAW1D,OAPAL,EAAaM,SAASC,IACpB,MAAMC,EAAM,IAAKvB,EAAK,IACtBuB,EAAItB,GAAgBqB,EACpBC,EAAIrB,GAAiBE,EACrBJ,EAAKwB,KAAKD,EAAG,IAGRvB,CACT,C","sources":["webpack://data-experience/./src/components/chart/view/utils/d3-helpers.js"],"sourcesContent":["import * as d3 from 'd3'\r\n/**\r\n * Fill in the missing dates of an array of dated objects with a specific value.\r\n * @param  {Array} data  array of objects that include dates\r\n * @param  {String} dateAccessor  the key of date object\r\n * @param  {String} valueAccessor the key of the value to add for each missing date\r\n * @param  {String} interval  the d3 interval between each date, e.g: d3.timeDay, d3.timeMonth\r\n * @param  {Any} fillValue  the value to fill for each missing date, default to 0.\r\n * @param  {Date} minDate  the starting date range, computed from the data by default.\r\n * @param  {Date} maxDate  the ending date range, computed from the data by default.\r\n * @return {Array} the modified data array with the missing dates and their value added\r\n */\r\nexport function addMissingDate(\r\n  data,\r\n  dateAccessor,\r\n  valueAccessor,\r\n  interval,\r\n  fillValue = 0,\r\n  minDate = null,\r\n  maxDate = null\r\n) {\r\n  if (data.length <= 0) { return [] }\r\n  // Compute the min and max date\r\n  const extent = d3.extent(data, d => new Date(d[dateAccessor]))\r\n\r\n  // Get the list of dates between this extent\r\n  const dates = interval.range(\r\n    minDate !== null ? interval.floor(minDate) : interval.floor(extent[0]),\r\n    maxDate !== null ? interval.ceil(maxDate) : interval.ceil(extent[1]),\r\n    1\r\n  )\r\n\r\n  // Get dates that are not in the above list\r\n  const missingDates = dates.filter(\r\n    value => !data.map(d => d[dateAccessor]).includes(value.toString())\r\n  )\r\n\r\n  // Add and fill missing dates\r\n  missingDates.forEach((date) => {\r\n    const obj = { ...data[0] }\r\n    obj[dateAccessor] = date\r\n    obj[valueAccessor] = fillValue\r\n    data.push(obj)\r\n  })\r\n\r\n  return data\r\n}\r\n"],"names":["addMissingDate","data","dateAccessor","valueAccessor","interval","fillValue","minDate","maxDate","length","extent","d","Date","dates","range","floor","ceil","missingDates","filter","value","map","includes","toString","forEach","date","obj","push"],"sourceRoot":""}