(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{1204:function(e,n){},1284:function(e,n){},1286:function(e,n){},1296:function(e,n){},1298:function(e,n){},1323:function(e,n){},1325:function(e,n){},1326:function(e,n){},1331:function(e,n){},1333:function(e,n){},1339:function(e,n){},1341:function(e,n){},1360:function(e,n){},1372:function(e,n){},1375:function(e,n){},1390:function(e,n,t){"use strict";t.r(n);var o=t(1097),c=t(24),r=(t(94),t(1278)),f=t.n(r),l=t(1279),y=t.n(l),h=t(1280),k=t.n(h),d={methods:{generateKeys:function(){return Object(c.a)(regeneratorRuntime.mark((function e(){var n,t,o,c,r,content;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,k.a.ready;case 2:return n=k.a,t=n.crypto_box_keypair(),o=n.to_hex(t.publicKey),c=n.to_hex(t.privateKey),(r=new f.a).file("public-key.txt",o),r.file("secret-key.txt",c),e.next=11,r.generateAsync({type:"blob"});case 11:content=e.sent,y.a.saveAs(content,"keys.zip");case 13:case"end":return e.stop()}}),e)})))()}}},v=t(49),component=Object(v.a)(d,(function(){var e=this,n=e._self._c;return n(o.a,[n("h2",[e._v("Key Generation")]),e._v(" "),n("p",[e._v("\n    This step only needs to be done once. Copy the public key in the config\n    and store the secret key in a safe place.\n  ")]),e._v(" "),n("BaseButton",{attrs:{text:"Generate keys"},on:{click:e.generateKeys}})],1)}),[],!1,null,null,null);n.default=component.exports;installComponents(component,{BaseButton:t(606).default})}}]);